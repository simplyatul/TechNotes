[Wed Jan 29 02:56:00] [vagrant@ubuntu-jammy] [/shared-with-host]#
[Wed Jan 29 02:56:03] [vagrant@ubuntu-jammy] [/shared-with-host]#
[Wed Jan 29 02:56:05] [vagrant@ubuntu-jammy] [/shared-with-host]#
ls
06-01-2025.log  28-01-2025.log        atrivial-app-simple.yaml  cilium-linux-amd64.tar.gz  eBPF           k8s_aliases                          pod-wo-host-network.yaml          simple-nginx-ingress.yaml         t0.log
0‚Äô.log          Dockerfile            cilium                    code                       envoy-gateway  kind-local-k8s-cluster-baremin.yaml  s.sh                              simple-nginx-pod-n-srv-w-np.yaml
27-01-2025.log  app-with-labels.yaml  cilium-kind-config.yaml   custom-ns.yaml             k8s            pod-w-host-network.yaml              simple-nginx-dep-n-srv-w-np.yaml  simple-nginx-pod-n-srv.yaml
[Wed Jan 29 02:56:18] [vagrant@ubuntu-jammy] [/shared-with-host]#
cd envoy-gateway/
[Wed Jan 29 02:56:21] [vagrant@ubuntu-jammy] [/shared-with-host/envoy-gateway]#
[Wed Jan 29 02:56:21] [vagrant@ubuntu-jammy] [/shared-with-host/envoy-gateway]#
gs
git status
fatal: not a git repository (or any parent up to mount point /)
Stopping at filesystem boundary (GIT_DISCOVERY_ACROSS_FILESYSTEM not set).
[Wed Jan 29 03:00:00] [vagrant@ubuntu-jammy] [/shared-with-host/envoy-gateway]#
kga
kubectl get all
NAME                           READY   STATUS    RESTARTS        AGE
pod/backend-765694d47f-6qn9k   1/1     Running   2 (7m17s ago)   46h

NAME                 TYPE        CLUSTER-IP    EXTERNAL-IP   PORT(S)    AGE
service/backend      ClusterIP   10.96.4.107   <none>        3000/TCP   46h
service/kubernetes   ClusterIP   10.96.0.1     <none>        443/TCP    47h

NAME                      READY   UP-TO-DATE   AVAILABLE   AGE
deployment.apps/backend   1/1     1            1           46h

NAME                                 DESIRED   CURRENT   READY   AGE
replicaset.apps/backend-765694d47f   1         1         1       46h
[Wed Jan 29 03:00:04] [vagrant@ubuntu-jammy] [/shared-with-host/envoy-gateway]#
ls
disable-prometheus.yaml  kind-config.yaml  quickstart.yaml
[Wed Jan 29 03:00:09] [vagrant@ubuntu-jammy] [/shared-with-host/envoy-gateway]#
[Wed Jan 29 03:31:04] [vagrant@ubuntu-jammy] [/shared-with-host/envoy-gateway]#
[Wed Jan 29 03:31:04] [vagrant@ubuntu-jammy] [/shared-with-host/envoy-gateway]#
[Wed Jan 29 03:31:11] [vagrant@ubuntu-jammy] [/shared-with-host/envoy-gateway]#
ls
disable-prometheus.yaml  kind-config.yaml  quickstart.yaml
[Wed Jan 29 03:31:59] [vagrant@ubuntu-jammy] [/shared-with-host/envoy-gateway]#
cat kind-config.yaml
# kind create cluster --config=kind-config.yaml --name env-gw
# env-gw => Envoy Gateway => https://gateway.envoyproxy.io/docs/tasks/quickstart/
kind: Cluster
apiVersion: kind.x-k8s.io/v1alpha4
nodes:
- role: control-plane
- role: worker
- role: worker
[Wed Jan 29 03:32:55] [vagrant@ubuntu-jammy] [/shared-with-host/envoy-gateway]#
kind delete cluster --name env-gw
Deleting cluster "env-gw" ...
Deleted nodes: ["env-gw-control-plane" "env-gw-worker" "env-gw-worker2"]
[Wed Jan 29 03:33:23] [vagrant@ubuntu-jammy] [/shared-with-host/envoy-gateway]#
cat kind-config.yaml
# kind create cluster --config=kind-config.yaml --name env-gw
# env-gw => Envoy Gateway => https://gateway.envoyproxy.io/docs/tasks/quickstart/
kind: Cluster
apiVersion: kind.x-k8s.io/v1alpha4
nodes:
- role: control-plane
- role: worker
- role: worker
[Wed Jan 29 03:33:30] [vagrant@ubuntu-jammy] [/shared-with-host/envoy-gateway]#
vim kind-config.yaml
[Wed Jan 29 03:33:40] [vagrant@ubuntu-jammy] [/shared-with-host/envoy-gateway]#
vim kind-config.yaml
[Wed Jan 29 03:34:15] [vagrant@ubuntu-jammy] [/shared-with-host/envoy-gateway]#
[Wed Jan 29 03:34:15] [vagrant@ubuntu-jammy] [/shared-with-host/envoy-gateway]#
cat kind-config.yaml
# kind create cluster --config=kind-config.yaml --name env-gw
# kind delete cluster --name env-gw

# env-gw => Envoy Gateway => https://gateway.envoyproxy.io/docs/tasks/quickstart/

kind: Cluster
apiVersion: kind.x-k8s.io/v1alpha4
nodes:
- role: control-plane
- role: worker
- role: worker
[Wed Jan 29 03:34:34] [vagrant@ubuntu-jammy] [/shared-with-host/envoy-gateway]#
kind create cluster --config=kind-config.yaml --name env-gw
Creating cluster "env-gw" ...
 ‚úì Ensuring node image (kindest/node:v1.31.0) üñº
 ‚úì Preparing nodes üì¶ üì¶ üì¶
 ‚úì Writing configuration üìú
 ‚úì Starting control-plane üïπÔ∏è
 ‚úì Installing CNI üîå
 ‚úì Installing StorageClass üíæ
 ‚úì Joining worker nodes üöú
Set kubectl context to "kind-env-gw"
You can now use your cluster with:

kubectl cluster-info --context kind-env-gw

Have a nice day! üëã
[Wed Jan 29 03:35:15] [vagrant@ubuntu-jammy] [/shared-with-host/envoy-gateway]#
kga
kubectl get all
NAME                 TYPE        CLUSTER-IP   EXTERNAL-IP   PORT(S)   AGE
service/kubernetes   ClusterIP   10.96.0.1    <none>        443/TCP   3m11s
[Wed Jan 29 03:38:13] [vagrant@ubuntu-jammy] [/shared-with-host/envoy-gateway]#
k get crd
No resources found
[Wed Jan 29 03:38:15] [vagrant@ubuntu-jammy] [/shared-with-host/envoy-gateway]#
k get crds
No resources found
[Wed Jan 29 03:38:16] [vagrant@ubuntu-jammy] [/shared-with-host/envoy-gateway]#
# AT: created kind cluster above
[Wed Jan 29 03:38:42] [vagrant@ubuntu-jammy] [/shared-with-host/envoy-gateway]#
# AT: Install the Gateway API CRDs and Envoy Gateway. Ref: https://gateway.envoyproxy.io/docs/tasks/quickstart/
[Wed Jan 29 03:39:10] [vagrant@ubuntu-jammy] [/shared-with-host/envoy-gateway]#
[Wed Jan 29 03:39:11] [vagrant@ubuntu-jammy] [/shared-with-host/envoy-gateway]#
helm install eg oci://docker.io/envoyproxy/gateway-helm --version v1.2.6 -n envoy-gateway-system --create-namespace
Pulled: docker.io/envoyproxy/gateway-helm:v1.2.6
Digest: sha256:89ff3ccd206a66f51adfd02c75436fa6b58037ab15a8049c36f7eb10227ce2a4
NAME: eg
LAST DEPLOYED: Wed Jan 29 03:39:30 2025
NAMESPACE: envoy-gateway-system
STATUS: deployed
REVISION: 1
TEST SUITE: None
NOTES:
**************************************************************************
*** PLEASE BE PATIENT: Envoy Gateway may take a few minutes to install ***
**************************************************************************

Envoy Gateway is an open source project for managing Envoy Proxy as a standalone or Kubernetes-based application gateway.

Thank you for installing Envoy Gateway! üéâ

Your release is named: eg. üéâ

Your release is in namespace: envoy-gateway-system. üéâ

To learn more about the release, try:

  $ helm status eg -n envoy-gateway-system
  $ helm get all eg -n envoy-gateway-system

To have a quickstart of Envoy Gateway, please refer to https://gateway.envoyproxy.io/latest/tasks/quickstart.

To get more details, please visit https://gateway.envoyproxy.io and https://github.com/envoyproxy/gateway.
[Wed Jan 29 03:39:50] [vagrant@ubuntu-jammy] [/shared-with-host/envoy-gateway]#
[Wed Jan 29 03:40:18] [vagrant@ubuntu-jammy] [/shared-with-host/envoy-gateway]#
[Wed Jan 29 03:40:18] [vagrant@ubuntu-jammy] [/shared-with-host/envoy-gateway]#
k get crds
NAME                                           CREATED AT
backendlbpolicies.gateway.networking.k8s.io    2025-01-29T03:39:27Z
backends.gateway.envoyproxy.io                 2025-01-29T03:39:28Z
backendtlspolicies.gateway.networking.k8s.io   2025-01-29T03:39:27Z
backendtrafficpolicies.gateway.envoyproxy.io   2025-01-29T03:39:28Z
clienttrafficpolicies.gateway.envoyproxy.io    2025-01-29T03:39:28Z
envoyextensionpolicies.gateway.envoyproxy.io   2025-01-29T03:39:28Z
envoypatchpolicies.gateway.envoyproxy.io       2025-01-29T03:39:28Z
envoyproxies.gateway.envoyproxy.io             2025-01-29T03:39:28Z
gatewayclasses.gateway.networking.k8s.io       2025-01-29T03:39:27Z
gateways.gateway.networking.k8s.io             2025-01-29T03:39:27Z
grpcroutes.gateway.networking.k8s.io           2025-01-29T03:39:27Z
httproutefilters.gateway.envoyproxy.io         2025-01-29T03:39:29Z
httproutes.gateway.networking.k8s.io           2025-01-29T03:39:27Z
referencegrants.gateway.networking.k8s.io      2025-01-29T03:39:27Z
securitypolicies.gateway.envoyproxy.io         2025-01-29T03:39:29Z
tcproutes.gateway.networking.k8s.io            2025-01-29T03:39:27Z
tlsroutes.gateway.networking.k8s.io            2025-01-29T03:39:27Z
udproutes.gateway.networking.k8s.io            2025-01-29T03:39:27Z
[Wed Jan 29 03:40:28] [vagrant@ubuntu-jammy] [/shared-with-host/envoy-gateway]#
[Wed Jan 29 03:40:48] [vagrant@ubuntu-jammy] [/shared-with-host/envoy-gateway]#
[Wed Jan 29 03:40:48] [vagrant@ubuntu-jammy] [/shared-with-host/envoy-gateway]#
[Wed Jan 29 03:40:54] [vagrant@ubuntu-jammy] [/shared-with-host/envoy-gateway]#
# AT: Wait for Envoy Gateway to become available:
[Wed Jan 29 03:40:58] [vagrant@ubuntu-jammy] [/shared-with-host/envoy-gateway]#
kubectl wait --timeout=5m -n envoy-gateway-system deployment/envoy-gateway --for=condition=Available
[Wed Jan 29 03:40:58] [vagrant@ubuntu-jammy] [/shared-with-host/envoy-gateway]#
kubectl wait --timeout=5m -n envoy-gateway-system deployment/envoy-gateway --for=condition=Available
deployment.apps/envoy-gateway condition met
[Wed Jan 29 03:41:07] [vagrant@ubuntu-jammy] [/shared-with-host/envoy-gateway]#
[Wed Jan 29 03:41:09] [vagrant@ubuntu-jammy] [/shared-with-host/envoy-gateway]#
kga -A
kubectl get all
NAMESPACE              NAME                                               READY   STATUS    RESTARTS   AGE
envoy-gateway-system   pod/envoy-gateway-5b47459c4d-j5cz8                 1/1     Running   0          82s
kube-system            pod/coredns-6f6b679f8f-gc7c9                       1/1     Running   0          6m3s
kube-system            pod/coredns-6f6b679f8f-sfqqt                       1/1     Running   0          6m3s
kube-system            pod/etcd-env-gw-control-plane                      1/1     Running   0          6m8s
kube-system            pod/kindnet-hdc5v                                  1/1     Running   0          5m58s
kube-system            pod/kindnet-q7pql                                  1/1     Running   0          6m3s
kube-system            pod/kindnet-rtdh6                                  1/1     Running   0          5m58s
kube-system            pod/kube-apiserver-env-gw-control-plane            1/1     Running   0          6m8s
kube-system            pod/kube-controller-manager-env-gw-control-plane   1/1     Running   0          6m8s
kube-system            pod/kube-proxy-58xzt                               1/1     Running   0          6m3s
kube-system            pod/kube-proxy-cd454                               1/1     Running   0          5m58s
kube-system            pod/kube-proxy-d2mxb                               1/1     Running   0          5m58s
kube-system            pod/kube-scheduler-env-gw-control-plane            1/1     Running   0          6m8s
local-path-storage     pod/local-path-provisioner-57c5987fd4-8v99d        1/1     Running   0          6m3s

NAMESPACE              NAME                    TYPE        CLUSTER-IP     EXTERNAL-IP   PORT(S)                                   AGE
default                service/kubernetes      ClusterIP   10.96.0.1      <none>        443/TCP                                   6m10s
envoy-gateway-system   service/envoy-gateway   ClusterIP   10.96.99.193   <none>        18000/TCP,18001/TCP,18002/TCP,19001/TCP   82s
kube-system            service/kube-dns        ClusterIP   10.96.0.10     <none>        53/UDP,53/TCP,9153/TCP                    6m8s

NAMESPACE     NAME                        DESIRED   CURRENT   READY   UP-TO-DATE   AVAILABLE   NODE SELECTOR            AGE
kube-system   daemonset.apps/kindnet      3         3         3       3            3           kubernetes.io/os=linux   6m7s
kube-system   daemonset.apps/kube-proxy   3         3         3       3            3           kubernetes.io/os=linux   6m8s

NAMESPACE              NAME                                     READY   UP-TO-DATE   AVAILABLE   AGE
envoy-gateway-system   deployment.apps/envoy-gateway            1/1     1            1           82s
kube-system            deployment.apps/coredns                  2/2     2            2           6m8s
local-path-storage     deployment.apps/local-path-provisioner   1/1     1            1           6m6s

NAMESPACE              NAME                                                DESIRED   CURRENT   READY   AGE
envoy-gateway-system   replicaset.apps/envoy-gateway-5b47459c4d            1         1         1       82s
kube-system            replicaset.apps/coredns-6f6b679f8f                  2         2         2       6m3s
local-path-storage     replicaset.apps/local-path-provisioner-57c5987fd4   1         1         1       6m3s
[Wed Jan 29 03:41:12] [vagrant@ubuntu-jammy] [/shared-with-host/envoy-gateway]#
[Wed Jan 29 03:41:54] [vagrant@ubuntu-jammy] [/shared-with-host/envoy-gateway]#
[Wed Jan 29 03:41:54] [vagrant@ubuntu-jammy] [/shared-with-host/envoy-gateway]#
ls
Gateway.yaml  backend-http-service.yaml  disable-prometheus.yaml  kind-config.yaml  quickstart.yaml
[Wed Jan 29 03:42:13] [vagrant@ubuntu-jammy] [/shared-with-host/envoy-gateway]#
cat Gateway.yaml | yq
apiVersion: gateway.networking.k8s.io/v1
kind: GatewayClass
metadata:
  name: eg
spec:
  controllerName: gateway.envoyproxy.io/gatewayclass-controller
---
apiVersion: gateway.networking.k8s.io/v1
kind: Gateway
metadata:
  name: eg
spec:
  gatewayClassName: eg
  listeners:
    - name: http
      protocol: HTTP
      port: 80
[Wed Jan 29 03:42:21] [vagrant@ubuntu-jammy] [/shared-with-host/envoy-gateway]#
# AT: Install GatewayClass and Gateway
[Wed Jan 29 03:42:44] [vagrant@ubuntu-jammy] [/shared-with-host/envoy-gateway]#
k apply -f Gateway.yaml -n default
gatewayclass.gateway.networking.k8s.io/eg created
gateway.gateway.networking.k8s.io/eg created
[Wed Jan 29 03:43:06] [vagrant@ubuntu-jammy] [/shared-with-host/envoy-gateway]#
kga
kubectl get all
NAME                 TYPE        CLUSTER-IP   EXTERNAL-IP   PORT(S)   AGE
service/kubernetes   ClusterIP   10.96.0.1    <none>        443/TCP   8m9s
[Wed Jan 29 03:43:11] [vagrant@ubuntu-jammy] [/shared-with-host/envoy-gateway]#
k get crds
NAME                                           CREATED AT
backendlbpolicies.gateway.networking.k8s.io    2025-01-29T03:39:27Z
backends.gateway.envoyproxy.io                 2025-01-29T03:39:28Z
backendtlspolicies.gateway.networking.k8s.io   2025-01-29T03:39:27Z
backendtrafficpolicies.gateway.envoyproxy.io   2025-01-29T03:39:28Z
clienttrafficpolicies.gateway.envoyproxy.io    2025-01-29T03:39:28Z
envoyextensionpolicies.gateway.envoyproxy.io   2025-01-29T03:39:28Z
envoypatchpolicies.gateway.envoyproxy.io       2025-01-29T03:39:28Z
envoyproxies.gateway.envoyproxy.io             2025-01-29T03:39:28Z
gatewayclasses.gateway.networking.k8s.io       2025-01-29T03:39:27Z
gateways.gateway.networking.k8s.io             2025-01-29T03:39:27Z
grpcroutes.gateway.networking.k8s.io           2025-01-29T03:39:27Z
httproutefilters.gateway.envoyproxy.io         2025-01-29T03:39:29Z
httproutes.gateway.networking.k8s.io           2025-01-29T03:39:27Z
referencegrants.gateway.networking.k8s.io      2025-01-29T03:39:27Z
securitypolicies.gateway.envoyproxy.io         2025-01-29T03:39:29Z
tcproutes.gateway.networking.k8s.io            2025-01-29T03:39:27Z
tlsroutes.gateway.networking.k8s.io            2025-01-29T03:39:27Z
udproutes.gateway.networking.k8s.io            2025-01-29T03:39:27Z
[Wed Jan 29 03:43:21] [vagrant@ubuntu-jammy] [/shared-with-host/envoy-gateway]#
[Wed Jan 29 03:44:10] [vagrant@ubuntu-jammy] [/shared-with-host/envoy-gateway]#
[Wed Jan 29 03:44:11] [vagrant@ubuntu-jammy] [/shared-with-host/envoy-gateway]#
k get crds -A
NAME                                           CREATED AT
backendlbpolicies.gateway.networking.k8s.io    2025-01-29T03:39:27Z
backends.gateway.envoyproxy.io                 2025-01-29T03:39:28Z
backendtlspolicies.gateway.networking.k8s.io   2025-01-29T03:39:27Z
backendtrafficpolicies.gateway.envoyproxy.io   2025-01-29T03:39:28Z
clienttrafficpolicies.gateway.envoyproxy.io    2025-01-29T03:39:28Z
envoyextensionpolicies.gateway.envoyproxy.io   2025-01-29T03:39:28Z
envoypatchpolicies.gateway.envoyproxy.io       2025-01-29T03:39:28Z
envoyproxies.gateway.envoyproxy.io             2025-01-29T03:39:28Z
gatewayclasses.gateway.networking.k8s.io       2025-01-29T03:39:27Z
gateways.gateway.networking.k8s.io             2025-01-29T03:39:27Z
grpcroutes.gateway.networking.k8s.io           2025-01-29T03:39:27Z
httproutefilters.gateway.envoyproxy.io         2025-01-29T03:39:29Z
httproutes.gateway.networking.k8s.io           2025-01-29T03:39:27Z
referencegrants.gateway.networking.k8s.io      2025-01-29T03:39:27Z
securitypolicies.gateway.envoyproxy.io         2025-01-29T03:39:29Z
tcproutes.gateway.networking.k8s.io            2025-01-29T03:39:27Z
tlsroutes.gateway.networking.k8s.io            2025-01-29T03:39:27Z
udproutes.gateway.networking.k8s.io            2025-01-29T03:39:27Z
[Wed Jan 29 03:44:12] [vagrant@ubuntu-jammy] [/shared-with-host/envoy-gateway]#
kga
kubectl get all
NAME                 TYPE        CLUSTER-IP   EXTERNAL-IP   PORT(S)   AGE
service/kubernetes   ClusterIP   10.96.0.1    <none>        443/TCP   9m18s
[Wed Jan 29 03:44:20] [vagrant@ubuntu-jammy] [/shared-with-host/envoy-gateway]#
kga -A
kubectl get all
NAMESPACE              NAME                                               READY   STATUS    RESTARTS   AGE
envoy-gateway-system   pod/envoy-default-eg-e41e7b31-594f564cb9-xlnjv     2/2     Running   0          77s
envoy-gateway-system   pod/envoy-gateway-5b47459c4d-j5cz8                 1/1     Running   0          4m33s
kube-system            pod/coredns-6f6b679f8f-gc7c9                       1/1     Running   0          9m14s
kube-system            pod/coredns-6f6b679f8f-sfqqt                       1/1     Running   0          9m14s
kube-system            pod/etcd-env-gw-control-plane                      1/1     Running   0          9m19s
kube-system            pod/kindnet-hdc5v                                  1/1     Running   0          9m9s
kube-system            pod/kindnet-q7pql                                  1/1     Running   0          9m14s
kube-system            pod/kindnet-rtdh6                                  1/1     Running   0          9m9s
kube-system            pod/kube-apiserver-env-gw-control-plane            1/1     Running   0          9m19s
kube-system            pod/kube-controller-manager-env-gw-control-plane   1/1     Running   0          9m19s
kube-system            pod/kube-proxy-58xzt                               1/1     Running   0          9m14s
kube-system            pod/kube-proxy-cd454                               1/1     Running   0          9m9s
kube-system            pod/kube-proxy-d2mxb                               1/1     Running   0          9m9s
kube-system            pod/kube-scheduler-env-gw-control-plane            1/1     Running   0          9m19s
local-path-storage     pod/local-path-provisioner-57c5987fd4-8v99d        1/1     Running   0          9m14s

NAMESPACE              NAME                                TYPE           CLUSTER-IP     EXTERNAL-IP   PORT(S)                                   AGE
default                service/kubernetes                  ClusterIP      10.96.0.1      <none>        443/TCP                                   9m21s
envoy-gateway-system   service/envoy-default-eg-e41e7b31   LoadBalancer   10.96.17.150   <pending>     80:30278/TCP                              77s
envoy-gateway-system   service/envoy-gateway               ClusterIP      10.96.99.193   <none>        18000/TCP,18001/TCP,18002/TCP,19001/TCP   4m33s
kube-system            service/kube-dns                    ClusterIP      10.96.0.10     <none>        53/UDP,53/TCP,9153/TCP                    9m19s

NAMESPACE     NAME                        DESIRED   CURRENT   READY   UP-TO-DATE   AVAILABLE   NODE SELECTOR            AGE
kube-system   daemonset.apps/kindnet      3         3         3       3            3           kubernetes.io/os=linux   9m18s
kube-system   daemonset.apps/kube-proxy   3         3         3       3            3           kubernetes.io/os=linux   9m19s

NAMESPACE              NAME                                        READY   UP-TO-DATE   AVAILABLE   AGE
envoy-gateway-system   deployment.apps/envoy-default-eg-e41e7b31   1/1     1            1           77s
envoy-gateway-system   deployment.apps/envoy-gateway               1/1     1            1           4m33s
kube-system            deployment.apps/coredns                     2/2     2            2           9m19s
local-path-storage     deployment.apps/local-path-provisioner      1/1     1            1           9m17s

NAMESPACE              NAME                                                   DESIRED   CURRENT   READY   AGE
envoy-gateway-system   replicaset.apps/envoy-default-eg-e41e7b31-594f564cb9   1         1         1       77s
envoy-gateway-system   replicaset.apps/envoy-gateway-5b47459c4d               1         1         1       4m33s
kube-system            replicaset.apps/coredns-6f6b679f8f                     2         2         2       9m14s
local-path-storage     replicaset.apps/local-path-provisioner-57c5987fd4      1         1         1       9m14s
[Wed Jan 29 03:44:23] [vagrant@ubuntu-jammy] [/shared-with-host/envoy-gateway]#
[Wed Jan 29 03:44:50] [vagrant@ubuntu-jammy] [/shared-with-host/envoy-gateway]#
ls
Gateway.yaml  backend-http-service.yaml  disable-prometheus.yaml  kind-config.yaml  quickstart.yaml
[Wed Jan 29 03:44:51] [vagrant@ubuntu-jammy] [/shared-with-host/envoy-gateway]#
[Wed Jan 29 03:48:34] [vagrant@ubuntu-jammy] [/shared-with-host/envoy-gateway]#
# AT: Observe envoy-default-eg-e41e7b31 service,deployment/pod is created
[Wed Jan 29 03:49:30] [vagrant@ubuntu-jammy] [/shared-with-host/envoy-gateway]#
[Wed Jan 29 03:49:30] [vagrant@ubuntu-jammy] [/shared-with-host/envoy-gateway]#
cat backend-http-service.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: backend-http
---
apiVersion: v1
kind: Service
metadata:
  name: backend-http
  labels:
    app: backend-http
    service: backend-http
spec:
  ports:
    - name: http
      port: 3000
      targetPort: 3000
  selector:
    app: backend-http
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend-http
spec:
  replicas: 1
  selector:
    matchLabels:
      app: backend-http
      version: v1
  template:
    metadata:
      labels:
        app: backend-http
        version: v1
    spec:
      serviceAccountName: backend-http
      containers:
        - image: gcr.io/k8s-staging-gateway-api/echo-basic:v20231214-v1.0.0-140-gf544a46e
          imagePullPolicy: IfNotPresent
          name: backend-http
          ports:
            - containerPort: 3000
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
---
apiVersion: gateway.networking.k8s.io/v1
kind: HTTPRoute
metadata:
  name: backend-http
spec:
  parentRefs:
    - name: eg
  hostnames:
    - "www.example.com"
  rules:
    - backendRefs:
        - group: ""
          kind: Service
          name: backend-http
          port: 3000
          weight: 1
      matches:
        - path:
            type: PathPrefix
            value: /
[Wed Jan 29 03:49:53] [vagrant@ubuntu-jammy] [/shared-with-host/envoy-gateway]#
# AT: Collect Envoy Proxy settings
[Wed Jan 29 03:50:38] [vagrant@ubuntu-jammy] [/shared-with-host/envoy-gateway]#
export ENVOY_POD_NAME=$(kubectl get pod -n envoy-gateway-system --selector=gateway.envoyproxy.io/owning-gateway-namespace=default,gateway.envoyproxy.io/owning-gateway-name=eg -o jsonpath='{.items[0].metadata.name}')
[Wed Jan 29 03:50:59] [vagrant@ubuntu-jammy] [/shared-with-host/envoy-gateway]#
echo $ENVOY_POD_NAME
envoy-default-eg-e41e7b31-594f564cb9-xlnjv
[Wed Jan 29 03:51:12] [vagrant@ubuntu-jammy] [/shared-with-host/envoy-gateway]#
[Wed Jan 29 03:51:12] [vagrant@ubuntu-jammy] [/shared-with-host/envoy-gateway]#
kubectl port-forward pod/$ENVOY_POD_NAME -n envoy-gateway-system 19000:19000 &
[1] 23440
[Wed Jan 29 03:51:25] [vagrant@ubuntu-jammy] [/shared-with-host/envoy-gateway]#
Forwarding from 127.0.0.1:19000 -> 19000
Forwarding from [::1]:19000 -> 19000
[Wed Jan 29 03:51:26] [vagrant@ubuntu-jammy] [/shared-with-host/envoy-gateway]#
curl localhost:19000/config_dump > ep_config_dump_before_httproute.log
Handling connection for 19000
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
100   99k    0   99k    0     0  2777k      0 --:--:-- --:--:-- --:--:-- 2912k
[Wed Jan 29 03:52:18] [vagrant@ubuntu-jammy] [/shared-with-host/envoy-gateway]#
vim ep_config_dump_before_httproute.log
[Wed Jan 29 03:52:45] [vagrant@ubuntu-jammy] [/shared-with-host/envoy-gateway]#
mkdir before_httproute
[Wed Jan 29 03:52:57] [vagrant@ubuntu-jammy] [/shared-with-host/envoy-gateway]#
mv ep_config_dump_before_httproute.log ./before_httproute/config_dump.log
[Wed Jan 29 03:53:15] [vagrant@ubuntu-jammy] [/shared-with-host/envoy-gateway]#
vom before_httproute/config_dump.log
Command 'vom' not found, but there are 17 similar ones.
[Wed Jan 29 03:53:21] [vagrant@ubuntu-jammy] [/shared-with-host/envoy-gateway]#
vim before_httproute/config_dump.log
[Wed Jan 29 03:53:50] [vagrant@ubuntu-jammy] [/shared-with-host/envoy-gateway]#
vim before_httproute/config_dump.log
[Wed Jan 29 03:57:12] [vagrant@ubuntu-jammy] [/shared-with-host/envoy-gateway]#
curl localhost:19000/clusters | less
[Wed Jan 29 03:57:43] [vagrant@ubuntu-jammy] [/shared-with-host/envoy-gateway]#
curl localhost:19000/clusters?format=json | less
Handling connection for 19000
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0[Wed Jan 29 03:59:30] [vagrant@ubuntu-jammy] [/shared-with-host/envoy-gateway]#
[Wed Jan 29 03:59:32] [vagrant@ubuntu-jammy] [/shared-with-host/envoy-gateway]#
curl localhost:19000/help
[Wed Jan 29 03:59:32] [vagrant@ubuntu-jammy] [/shared-with-host/envoy-gateway]#
curl localhost:19000/help
Handling connection for 19000
admin commands are:
  /: Admin home page
  /allocprofiler (POST): enable/disable the allocation profiler (if supported)
      enable: enable/disable the allocation profiler; One of (y, n)
  /certs: print certs on machine
  /clusters: upstream cluster status
  /config_dump: dump current Envoy configs (experimental)
      resource: The resource to dump
      mask: The mask to apply. When both resource and mask are specified, the mask is applied to every element in the desired repeated field so that only a subset of fields are returned. The mask is parsed as a ProtobufWkt::Field
Mask
      name_regex: Dump only the currently loaded configurations whose names match the specified regex. Can be used with both resource and mask query parameters.
      include_eds: Dump currently loaded configuration including EDS. See the response definition for more information
  /contention: dump current Envoy mutex contention stats (if enabled)
  /cpuprofiler (POST): enable/disable the CPU profiler
      enable: enables the CPU profiler; One of (y, n)
  /drain_listeners (POST): drain listeners
      graceful: When draining listeners, enter a graceful drain period prior to closing listeners. This behaviour and duration is configurable via server options or CLI
      skip_exit: When draining listeners, do not exit after the drain period. This must be used with graceful
      inboundonly: Drains all inbound listeners. traffic_direction field in envoy_v3_api_msg_config.listener.v3.Listener is used to determine whether a listener is inbound or outbound.
  /healthcheck/fail (POST): cause the server to fail health checks
  /healthcheck/ok (POST): cause the server to pass health checks
  /heap_dump: dump current Envoy heap (if supported)
  /heapprofiler (POST): enable/disable the heap profiler
      enable: enable/disable the heap profiler; One of (y, n)
  /help: print out list of admin commands
  /hot_restart_version: print the hot restart compatibility version
  /init_dump: dump current Envoy init manager information (experimental)
      mask: The desired component to dump unready targets. The mask is parsed as a ProtobufWkt::FieldMask. For example, get the unready targets of all listeners with /init_dump?mask=listener`
  /listeners: print listener info
      format: File format to use; One of (text, json)
  /logging (POST): query/change logging levels
      paths: Change multiple logging levels by setting to <logger_name1>:<desired_level1>,<logger_name2>:<desired_level2>. If fine grain logging is enabled, use __FILE__ or a glob experision as the logger name. For example, sourc
e/common*:warning
      level: desired logging level, this will change all loggers's level; One of (, trace, debug, info, warning, error, critical, off)
  /memory: print current allocation/heap usage
  /quitquitquit (POST): exit the server
  /ready: print server state, return 200 if LIVE, otherwise return 503
  /reopen_logs (POST): reopen access logs
  /reset_counters (POST): reset all counters to zero
  /runtime: print runtime values
  /runtime_modify (POST): Adds or modifies runtime values as passed in query parameters. To delete a previously added key, use an empty string as the value. Note that deletion only applies to overrides added via this endpoint; va
lues loaded from disk can be modified via override but not deleted. E.g. ?key1=value1&key2=value2...
  /server_info: print server version/status information
  /stats: print server stats
      usedonly: Only include stats that have been written by system since restart
      filter: Regular expression (Google re2) for filtering stats
      format: Format to use; One of (html, active-html, text, json)
      type: Stat types to include.; One of (All, Counters, Histograms, Gauges, TextReadouts)
      histogram_buckets: Histogram bucket display mode; One of (cumulative, disjoint, detailed, summary)
  /stats/prometheus: print server stats in prometheus format
      usedonly: Only include stats that have been written by system since restart
      text_readouts: Render text_readouts as new gaugues with value 0 (increases Prometheus data size)
      filter: Regular expression (Google re2) for filtering stats
      histogram_buckets: Histogram bucket display mode; One of (cumulative, summary)
  /stats/recentlookups: Show recent stat-name lookups
  /stats/recentlookups/clear (POST): clear list of stat-name lookups and counter
  /stats/recentlookups/disable (POST): disable recording of reset stat-name lookup names
  /stats/recentlookups/enable (POST): enable recording of reset stat-name lookup names
[Wed Jan 29 04:23:12] [vagrant@ubuntu-jammy] [/shared-with-host/envoy-gateway]#
ll before_httproute/
total 100K
-rw-rw-r-- 1 vagrant vagrant 100K Jan 29 03:53 config_dump.log
[Wed Jan 29 04:24:48] [vagrant@ubuntu-jammy] [/shared-with-host/envoy-gateway]#
[Wed Jan 29 04:24:48] [vagrant@ubuntu-jammy] [/shared-with-host/envoy-gateway]#
[Wed Jan 29 04:24:49] [vagrant@ubuntu-jammy] [/shared-with-host/envoy-gateway]#
curl localhost:19000/clu
[Wed Jan 29 04:24:49] [vagrant@ubuntu-jammy] [/shared-with-host/envoy-gateway]#
curl localhost:19000/clusters | head
  % Total    % Received % Xferd  Average Speed   Time    TimHandling connection for 19000
e     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
wasm_cluster::observability_name::wasm_cluster--:--:-- --:--:-- --:--:--     0
wasm_cluster::default_priority::max_connections::1024
wasm_cluster::default_priority::max_pending_requests::1024
wasm_cluster::default_priority::max_requests::1024
wasm_cluster::default_priority::max_retries::3
wasm_cluster::high_priority::max_connections::1024
wasm_cluster::high_priority::max_pending_requests::1024
wasm_cluster::high_priority::max_requests::1024
wasm_cluster::high_priority::max_retries::3
wasm_cluster::added_via_api::false
100  4127    0  4127    0     0   339k      0 --:--:-- --:--:-- --:--:--  366k
curl: (23) Failed writing body
[Wed Jan 29 04:25:06] [vagrant@ubuntu-jammy] [/shared-with-host/envoy-gateway]#
curl localhost:19000/clusters > before_httproute/
.config_dump.log.swp  config_dump.log
[Wed Jan 29 04:25:06] [vagrant@ubuntu-jammy] [/shared-with-host/envoy-gateway]#
curl localhost:19000/clusters > before_httproute/clusters.log
Handling connection for 19000
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
100  4127    0  4127    0     0   617k      0 --:--:-- --:--:-- --:--:--  671k
[Wed Jan 29 04:25:31] [vagrant@ubuntu-jammy] [/shared-with-host/envoy-gateway]#
curl localhost:19000/clusters?format=json > before_httproute/clusters-json.log
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0Handling connection for 19000
100  3544    0  3544    0     0   630k      0 --:--:-- --:--:-- --:--:--  692k
[Wed Jan 29 04:26:19] [vagrant@ubuntu-jammy] [/shared-with-host/envoy-gateway]#
curl localhost:19000/listeners?format=json > before_httproute/listener.json
Handling connection for 19000
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
100   350    0   350    0     0  24005      0 --:--:-- --:--:-- --:--:-- 26923
[Wed Jan 29 04:27:54] [vagrant@ubuntu-jammy] [/shared-with-host/envoy-gateway]#
curl localhost:19000/listeners > before_httproute/listeners.log
Handling connection for 19000
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
100    86    0    86    0     0  11005      0 --:--:-- --:--:-- --:--:-- 12285
[Wed Jan 29 04:28:22] [vagrant@ubuntu-jammy] [/shared-with-host/envoy-gateway]#
curl localhost:19000/server_info
Handling connection for 19000
{
 "version": "58bd599ebd5918d4d005de60954fcd2cb00abd95/1.32.3/Clean/RELEASE/BoringSSL",
 "state": "LIVE",
 "uptime_current_epoch": "2960s",
 "uptime_all_epochs": "2960s",
 "hot_restart_version": "11.104",
 "command_line_options": {
  "base_id": "0",
  "concurrency": 2,
  "config_path": "",
  "config_yaml": "admin:\n  access_log:\n  - name: envoy.access_loggers.file\n    typed_config:\n      \"@type\": type.googleapis.com/envoy.extensions.access_loggers.file.v3.FileAccessLog\n      path: /dev/null\n  address:\n    s
ocket_address:\n      address: 127.0.0.1\n      port_value: 19000\nlayered_runtime:\n  layers:\n  - name: global_config\n    static_layer:\n      envoy.restart_features.use_eds_cache_for_ads: true\n      re2.max_program_size.erro
r_level: 4294967295\n      re2.max_program_size.warn_level: 1000\ndynamic_resources:\n  ads_config:\n    api_type: DELTA_GRPC\n    transport_api_version: V3\n    grpc_services:\n    - envoy_grpc:\n        cluster_name: xds_cluste
r\n    set_node_on_first_message_only: true\n  lds_config:\n    ads: {}\n    resource_api_version: V3\n  cds_config:\n    ads: {}\n    resource_api_version: V3\nstatic_resources:\n  listeners:\n  - name: envoy-gateway-proxy-ready
-0.0.0.0-19001\n    address:\n      socket_address:\n        address: '0.0.0.0'\n        port_value: 19001\n        protocol: TCP\n    filter_chains:\n    - filters:\n      - name: envoy.filters.network.http_connection_manager\n
       typed_config:\n          \"@type\": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager\n          stat_prefix: eg-ready-http\n          normalize_path: true\n          rou
te_config:\n            name: local_route\n            virtual_hosts:\n            - name: prometheus_stats\n              domains:\n              - \"*\"\n              routes:\n              - match:\n                  path: /s
tats/prometheus\n                  headers:\n                  - name: \":method\"\n                    exact_match: GET\n                route:\n                  cluster: prometheus_stats\n          http_filters:\n          - n
ame: envoy.filters.http.health_check\n            typed_config:\n              \"@type\": type.googleapis.com/envoy.extensions.filters.http.health_check.v3.HealthCheck\n              pass_through_mode: false\n              header
s:\n              - name: \":path\"\n                string_match:\n                  exact: /ready\n          - name: envoy.filters.http.router\n            typed_config:\n              \"@type\": type.googleapis.com/envoy.exten
sions.filters.http.router.v3.Router\n  clusters:\n  - name: prometheus_stats\n    connect_timeout: 0.250s\n    type: STATIC\n    lb_policy: ROUND_ROBIN\n    load_assignment:\n      cluster_name: prometheus_stats\n      endpoints:
\n      - lb_endpoints:\n        - endpoint:\n            address:\n              socket_address:\n                address: 127.0.0.1\n                port_value: 19000\n  - connect_timeout: 10s\n    load_assignment:\n      clust
er_name: xds_cluster\n      endpoints:\n      - load_balancing_weight: 1\n        lb_endpoints:\n        - load_balancing_weight: 1\n          endpoint:\n            address:\n              socket_address:\n                addres
s: envoy-gateway\n                port_value: 18000\n    typed_extension_protocol_options:\n      envoy.extensions.upstreams.http.v3.HttpProtocolOptions:\n        \"@type\": \"type.googleapis.com/envoy.extensions.upstreams.http.v
3.HttpProtocolOptions\"\n        explicit_http_config:\n          http2_protocol_options:\n            connection_keepalive:\n              interval: 30s\n              timeout: 5s\n    name: xds_cluster\n    type: STRICT_DNS\n
  transport_socket:\n      name: envoy.transport_sockets.tls\n      typed_config:\n        \"@type\": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext\n        common_tls_context:\n          tls_pa
rams:\n            tls_maximum_protocol_version: TLSv1_3\n          tls_certificate_sds_secret_configs:\n          - name: xds_certificate\n            sds_config:\n              path_config_source:\n                path: /sds/xd
s-certificate.json\n              resource_api_version: V3\n          validation_context_sds_secret_config:\n            name: xds_trusted_ca\n            sds_config:\n              path_config_source:\n                path: /sds
/xds-trusted-ca.json\n              resource_api_version: V3\n  - name: wasm_cluster\n    type: STRICT_DNS\n    connect_timeout: 10s\n    load_assignment:\n      cluster_name: wasm_cluster\n      endpoints:\n      - load_balancin
g_weight: 1\n        lb_endpoints:\n        - load_balancing_weight: 1\n          endpoint:\n            address:\n              socket_address:\n                address: envoy-gateway\n                port_value: 18002\n    type
d_extension_protocol_options:\n      envoy.extensions.upstreams.http.v3.HttpProtocolOptions:\n        \"@type\": \"type.googleapis.com/envoy.extensions.upstreams.http.v3.HttpProtocolOptions\"\n        explicit_http_config:\n
     http2_protocol_options: {}\n    transport_socket:\n      name: envoy.transport_sockets.tls\n      typed_config:\n        \"@type\": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext\n        co
mmon_tls_context:\n          tls_params:\n            tls_maximum_protocol_version: TLSv1_3\n          tls_certificate_sds_secret_configs:\n          - name: xds_certificate\n            sds_config:\n              path_config_sou
rce:\n                path: /sds/xds-certificate.json\n              resource_api_version: V3\n          validation_context_sds_secret_config:\n            name: xds_trusted_ca\n            sds_config:\n              path_config_
source:\n                path: /sds/xds-trusted-ca.json\n              resource_api_version: V3\noverload_manager:\n  refresh_interval: 0.25s\n  resource_monitors:\n  - name: \"envoy.resource_monitors.global_downstream_max_connec
tions\"\n    typed_config:\n      \"@type\": type.googleapis.com/envoy.extensions.resource_monitors.downstream_connections.v3.DownstreamConnectionsConfig\n      max_active_downstream_connections: 50000\n",
  "allow_unknown_static_fields": false,
  "admin_address_path": "",
  "local_address_ip_version": "v4",
  "log_level": "warning",
  "component_log_level": "",
  "log_format": "[%Y-%m-%d %T.%e][%t][%l][%n] [%g:%#] %v",
  "log_path": "",
  "service_cluster": "default/eg",
  "service_node": "envoy-default-eg-e41e7b31-594f564cb9-xlnjv",
  "service_zone": "",
  "file_flush_interval": "10s",
  "drain_time": "60s",
  "parent_shutdown_time": "900s",
  "mode": "Serve",
  "disable_hot_restart": false,
  "enable_mutex_tracing": false,
  "restart_epoch": 0,
  "cpuset_threads": true,
  "reject_unknown_dynamic_fields": false,
  "log_format_escaped": false,
  "disabled_extensions": [],
  "ignore_unknown_dynamic_fields": false,
  "use_dynamic_base_id": false,
  "base_id_path": "",
  "drain_strategy": "Immediate",
  "enable_fine_grain_logging": false,
  "socket_path": "@envoy_domain_socket",
  "socket_mode": 0,
  "enable_core_dump": false,
  "stats_tag": [],
  "skip_hot_restart_on_no_parent": false,
  "skip_hot_restart_parent_stats": false
 },
 "node": {
  "id": "envoy-default-eg-e41e7b31-594f564cb9-xlnjv",
  "cluster": "default/eg",
  "user_agent_name": "envoy",
  "user_agent_build_version": {
   "version": {
    "major_number": 1,
    "minor_number": 32,
    "patch": 3
   },
   "metadata": {
    "build.type": "RELEASE",
    "revision.sha": "58bd599ebd5918d4d005de60954fcd2cb00abd95",
    "ssl.version": "BoringSSL",
    "revision.status": "Clean"
   }
  },
  "extensions": [
   {
    "name": "envoy.access_loggers.file",
    "category": "envoy.access_loggers",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": [
     "envoy.extensions.access_loggers.file.v3.FileAccessLog"
    ]
   },
   {
    "name": "envoy.access_loggers.fluentd",
    "category": "envoy.access_loggers",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": [
     "envoy.extensions.access_loggers.fluentd.v3.FluentdAccessLogConfig"
    ]
   },
   {
    "name": "envoy.access_loggers.http_grpc",
    "category": "envoy.access_loggers",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": [
     "envoy.extensions.access_loggers.grpc.v3.HttpGrpcAccessLogConfig"
    ]
   },
   {
    "name": "envoy.access_loggers.open_telemetry",
    "category": "envoy.access_loggers",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": [
     "envoy.extensions.access_loggers.open_telemetry.v3.OpenTelemetryAccessLogConfig"
    ]
   },
   {
    "name": "envoy.access_loggers.stderr",
    "category": "envoy.access_loggers",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": [
     "envoy.extensions.access_loggers.stream.v3.StderrAccessLog"
    ]
   },
   {
    "name": "envoy.access_loggers.stdout",
    "category": "envoy.access_loggers",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": [
     "envoy.extensions.access_loggers.stream.v3.StdoutAccessLog"
    ]
   },
   {
    "name": "envoy.access_loggers.tcp_grpc",
    "category": "envoy.access_loggers",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": [
     "envoy.extensions.access_loggers.grpc.v3.TcpGrpcAccessLogConfig"
    ]
   },
   {
    "name": "envoy.access_loggers.wasm",
    "category": "envoy.access_loggers",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": [
     "envoy.extensions.access_loggers.wasm.v3.WasmAccessLog"
    ]
   },
   {
    "name": "envoy.file_access_log",
    "category": "envoy.access_loggers",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": []
   },
   {
    "name": "envoy.fluentd_access_log",
    "category": "envoy.access_loggers",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": []
   },
   {
    "name": "envoy.http_grpc_access_log",
    "category": "envoy.access_loggers",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": []
   },
   {
    "name": "envoy.open_telemetry_access_log",
    "category": "envoy.access_loggers",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": []
   },
   {
    "name": "envoy.stderr_access_log",
    "category": "envoy.access_loggers",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": []
   },
   {
    "name": "envoy.stdout_access_log",
    "category": "envoy.access_loggers",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": []
   },
   {
    "name": "envoy.tcp_grpc_access_log",
    "category": "envoy.access_loggers",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": []
   },
   {
    "name": "envoy.wasm_access_log",
    "category": "envoy.access_loggers",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": []
   },
   {
    "name": "envoy.matching.input_matchers.generic_request_matcher",
    "category": "envoy.matching.input_matchers",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": [
     "envoy.extensions.filters.network.generic_proxy.matcher.v3.RequestMatcher"
    ]
   },
   {
    "name": "envoy.matching.matchers.cel_matcher",
    "category": "envoy.matching.input_matchers",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": [
     "xds.type.matcher.v3.CelMatcher"
    ]
   },
   {
    "name": "envoy.matching.matchers.consistent_hashing",
    "category": "envoy.matching.input_matchers",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": [
     "envoy.extensions.matching.input_matchers.consistent_hashing.v3.ConsistentHashing"
    ]
   },
   {
    "name": "envoy.matching.matchers.ip",
    "category": "envoy.matching.input_matchers",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": [
     "envoy.extensions.matching.input_matchers.ip.v3.Ip"
    ]
   },
   {
    "name": "envoy.matching.matchers.metadata_matcher",
    "category": "envoy.matching.input_matchers",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": [
     "envoy.extensions.matching.input_matchers.metadata.v3.Metadata"
    ]
   },
   {
    "name": "envoy.matching.matchers.runtime_fraction",
    "category": "envoy.matching.input_matchers",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": [
     "envoy.extensions.matching.input_matchers.runtime_fraction.v3.RuntimeFraction"
    ]
   },
   {
    "name": "envoy.matching.actions.format_string",
    "category": "envoy.matching.action",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": [
     "envoy.config.core.v3.SubstitutionFormatString"
    ]
   },
   {
    "name": "filter-chain-name",
    "category": "envoy.matching.action",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": [
     "google.protobuf.StringValue"
    ]
   },
   {
    "name": "envoy.extensions.upstreams.http.v3.HttpProtocolOptions",
    "category": "envoy.upstream_options",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": [
     "envoy.extensions.upstreams.http.v3.HttpProtocolOptions"
    ]
   },
   {
    "name": "envoy.extensions.upstreams.tcp.v3.TcpProtocolOptions",
    "category": "envoy.upstream_options",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": [
     "envoy.extensions.upstreams.tcp.v3.TcpProtocolOptions"
    ]
   },
   {
    "name": "envoy.upstreams.http.http_protocol_options",
    "category": "envoy.upstream_options",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": []
   },
   {
    "name": "envoy.upstreams.tcp.tcp_protocol_options",
    "category": "envoy.upstream_options",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": []
   },
   {
    "name": "envoy.route_config_update_requester.default",
    "category": "envoy.route_config_update_requester",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": []
   },
   {
    "name": "envoy.internal_redirect_predicates.allow_listed_routes",
    "category": "envoy.internal_redirect_predicates",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": [
     "envoy.extensions.internal_redirect.allow_listed_routes.v3.AllowListedRoutesConfig"
    ]
   },
   {
    "name": "envoy.internal_redirect_predicates.previous_routes",
    "category": "envoy.internal_redirect_predicates",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": [
     "envoy.extensions.internal_redirect.previous_routes.v3.PreviousRoutesConfig"
    ]
   },
   {
    "name": "envoy.internal_redirect_predicates.safe_cross_scheme",
    "category": "envoy.internal_redirect_predicates",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": [
     "envoy.extensions.internal_redirect.safe_cross_scheme.v3.SafeCrossSchemeConfig"
    ]
   },
   {
    "name": "envoy.filters.listener.original_dst.local_ip",
    "category": "filter_state.object",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": []
   },
   {
    "name": "envoy.filters.listener.original_dst.remote_ip",
    "category": "filter_state.object",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": []
   },
   {
    "name": "envoy.network.application_protocols",
    "category": "filter_state.object",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": []
   },
   {
    "name": "envoy.network.transport_socket.original_dst_address",
    "category": "filter_state.object",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": []
   },
   {
    "name": "envoy.network.upstream_server_name",
    "category": "filter_state.object",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": []
   },
   {
    "name": "envoy.network.upstream_subject_alt_names",
    "category": "filter_state.object",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": []
   },
   {
    "name": "envoy.ratelimit.hits_addend",
    "category": "filter_state.object",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": []
   },
   {
    "name": "envoy.string",
    "category": "filter_state.object",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": []
   },
   {
    "name": "envoy.tcp_proxy.cluster",
    "category": "filter_state.object",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": []
   },
   {
    "name": "envoy.tcp_proxy.disable_tunneling",
    "category": "filter_state.object",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": []
   },
   {
    "name": "envoy.tcp_proxy.per_connection_idle_timeout_ms",
    "category": "filter_state.object",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": []
   },
   {
    "name": "envoy.upstream.dynamic_host",
    "category": "filter_state.object",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": []
   },
   {
    "name": "envoy.upstream.dynamic_port",
    "category": "filter_state.object",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": []
   },
   {
    "name": "envoy.transport_sockets.alts",
    "category": "envoy.transport_sockets.downstream",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": [
     "envoy.extensions.transport_sockets.alts.v3.Alts"
    ]
   },
   {
    "name": "envoy.transport_sockets.quic",
    "category": "envoy.transport_sockets.downstream",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": [
     "envoy.extensions.transport_sockets.quic.v3.QuicDownstreamTransport"
    ]
   },
   {
    "name": "envoy.transport_sockets.raw_buffer",
    "category": "envoy.transport_sockets.downstream",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": [
     "envoy.extensions.transport_sockets.raw_buffer.v3.RawBuffer"
    ]
   },
   {
    "name": "envoy.transport_sockets.starttls",
    "category": "envoy.transport_sockets.downstream",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": [
     "envoy.extensions.transport_sockets.starttls.v3.StartTlsConfig"
    ]
   },
   {
    "name": "envoy.transport_sockets.tap",
    "category": "envoy.transport_sockets.downstream",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": [
     "envoy.extensions.transport_sockets.tap.v3.Tap"
    ]
   },
   {
    "name": "envoy.transport_sockets.tcp_stats",
    "category": "envoy.transport_sockets.downstream",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": [
     "envoy.extensions.transport_sockets.tcp_stats.v3.Config"
    ]
   },
   {
    "name": "envoy.transport_sockets.tls",
    "category": "envoy.transport_sockets.downstream",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": [
     "envoy.extensions.transport_sockets.tls.v3.DownstreamTlsContext"
    ]
   },
   {
    "name": "raw_buffer",
    "category": "envoy.transport_sockets.downstream",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": []
   },
   {
    "name": "starttls",
    "category": "envoy.transport_sockets.downstream",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": []
   },
   {
    "name": "tls",
    "category": "envoy.transport_sockets.downstream",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": []
   },
   {
    "name": "envoy.retry_host_predicates.omit_canary_hosts",
    "category": "envoy.retry_host_predicates",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": [
     "envoy.extensions.retry.host.omit_canary_hosts.v3.OmitCanaryHostsPredicate"
    ]
   },
   {
    "name": "envoy.retry_host_predicates.omit_host_metadata",
    "category": "envoy.retry_host_predicates",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": [
     "envoy.extensions.retry.host.omit_host_metadata.v3.OmitHostMetadataConfig"
    ]
   },
   {
    "name": "envoy.retry_host_predicates.previous_hosts",
    "category": "envoy.retry_host_predicates",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": [
     "envoy.extensions.retry.host.previous_hosts.v3.PreviousHostsPredicate"
    ]
   },
   {
    "name": "envoy.cluster.eds",
    "category": "envoy.clusters",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": []
   },
   {
    "name": "envoy.cluster.logical_dns",
    "category": "envoy.clusters",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": []
   },
   {
    "name": "envoy.cluster.original_dst",
    "category": "envoy.clusters",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": []
   },
   {
    "name": "envoy.cluster.static",
    "category": "envoy.clusters",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": []
   },
   {
    "name": "envoy.cluster.strict_dns",
    "category": "envoy.clusters",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": []
   },
   {
    "name": "envoy.clusters.aggregate",
    "category": "envoy.clusters",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": []
   },
   {
    "name": "envoy.clusters.dynamic_forward_proxy",
    "category": "envoy.clusters",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": []
   },
   {
    "name": "envoy.clusters.redis",
    "category": "envoy.clusters",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": []
   },
   {
    "name": "envoy.key_value.file_based",
    "category": "envoy.common.key_value",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": [
     "envoy.extensions.key_value.file_based.v3.FileBasedKeyValueStoreConfig"
    ]
   },
   {
    "name": "envoy.matching.common_inputs.environment_variable",
    "category": "envoy.matching.common_inputs",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": [
     "envoy.extensions.matching.common_inputs.environment_variable.v3.Config"
    ]
   },
   {
    "name": "envoy.dog_statsd",
    "category": "envoy.stats_sinks",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": []
   },
   {
    "name": "envoy.graphite_statsd",
    "category": "envoy.stats_sinks",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": []
   },
   {
    "name": "envoy.metrics_service",
    "category": "envoy.stats_sinks",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": []
   },
   {
    "name": "envoy.open_telemetry_stat_sink",
    "category": "envoy.stats_sinks",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": []
   },
   {
    "name": "envoy.stat_sinks.dog_statsd",
    "category": "envoy.stats_sinks",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": [
     "envoy.config.metrics.v3.DogStatsdSink"
    ]
   },
   {
    "name": "envoy.stat_sinks.graphite_statsd",
    "category": "envoy.stats_sinks",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": [
     "envoy.extensions.stat_sinks.graphite_statsd.v3.GraphiteStatsdSink"
    ]
   },
   {
    "name": "envoy.stat_sinks.hystrix",
    "category": "envoy.stats_sinks",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": [
     "envoy.config.metrics.v3.HystrixSink"
    ]
   },
   {
    "name": "envoy.stat_sinks.metrics_service",
    "category": "envoy.stats_sinks",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": [
     "envoy.config.metrics.v3.MetricsServiceConfig"
    ]
   },
   {
    "name": "envoy.stat_sinks.open_telemetry",
    "category": "envoy.stats_sinks",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": [
     "envoy.extensions.stat_sinks.open_telemetry.v3.SinkConfig"
    ]
   },
   {
    "name": "envoy.stat_sinks.statsd",
    "category": "envoy.stats_sinks",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": [
     "envoy.config.metrics.v3.StatsdSink"
    ]
   },
   {
    "name": "envoy.stat_sinks.wasm",
    "category": "envoy.stats_sinks",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": [
     "envoy.extensions.stat_sinks.wasm.v3.Wasm"
    ]
   },
   {
    "name": "envoy.statsd",
    "category": "envoy.stats_sinks",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": []
   },
   {
    "name": "envoy.http.early_header_mutation.header_mutation",
    "category": "envoy.http.early_header_mutation",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": [
     "envoy.extensions.http.early_header_mutation.header_mutation.v3.HeaderMutation"
    ]
   },
   {
    "name": "envoy.extensions.http.custom_response.local_response_policy",
    "category": "envoy.http.custom_response",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": [
     "envoy.extensions.http.custom_response.local_response_policy.v3.LocalResponsePolicy"
    ]
   },
   {
    "name": "envoy.extensions.http.custom_response.redirect_policy",
    "category": "envoy.http.custom_response",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": [
     "envoy.extensions.http.custom_response.redirect_policy.v3.RedirectPolicy"
    ]
   },
   {
    "name": "envoy.path.match.uri_template.uri_template_matcher",
    "category": "envoy.path.match",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": [
     "envoy.extensions.path.match.uri_template.v3.UriTemplateMatchConfig"
    ]
   },
   {
    "name": "envoy.config.validators.minimum_clusters",
    "category": "envoy.config.validators",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": []
   },
   {
    "name": "envoy.config.validators.minimum_clusters_validator",
    "category": "envoy.config.validators",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": [
     "envoy.extensions.config.validators.minimum_clusters.v3.MinimumClustersValidator"
    ]
   },
   {
    "name": "envoy.filters.udp.session.dynamic_forward_proxy",
    "category": "envoy.filters.udp.session",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": [
     "envoy.extensions.filters.udp.udp_proxy.session.dynamic_forward_proxy.v3.FilterConfig"
    ]
   },
   {
    "name": "envoy.filters.udp.session.http_capsule",
    "category": "envoy.filters.udp.session",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": [
     "envoy.extensions.filters.udp.udp_proxy.session.http_capsule.v3.FilterConfig"
    ]
   },
   {
    "name": "envoy.rate_limit_descriptors.expr",
    "category": "envoy.rate_limit_descriptors",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": [
     "envoy.extensions.rate_limit_descriptors.expr.v3.Descriptor"
    ]
   },
   {
    "name": "envoy.filters.udp.dns_filter",
    "category": "envoy.filters.udp_listener",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": [
     "envoy.extensions.filters.udp.dns_filter.v3.DnsFilterConfig"
    ]
   },
   {
    "name": "envoy.filters.udp_listener.udp_proxy",
    "category": "envoy.filters.udp_listener",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": [
     "envoy.extensions.filters.udp.udp_proxy.v3.UdpProxyConfig"
    ]
   },
   {
    "name": "envoy.quic.connection_debug_visitor.basic",
    "category": "envoy.quic.connection_debug_visitor",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": [
     "envoy.extensions.quic.connection_debug_visitor.v3.BasicConfig"
    ]
   },
   {
    "name": "envoy.network.dns_resolver.cares",
    "category": "envoy.network.dns_resolver",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": [
     "envoy.extensions.network.dns_resolver.cares.v3.CaresDnsResolverConfig"
    ]
   },
   {
    "name": "envoy.network.dns_resolver.getaddrinfo",
    "category": "envoy.network.dns_resolver",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": [
     "envoy.extensions.network.dns_resolver.getaddrinfo.v3.GetAddrInfoDnsResolverConfig"
    ]
   },
   {
    "name": "dubbo",
    "category": "envoy.dubbo_proxy.protocols",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": []
   },
   {
    "name": "envoy.http.stateful_header_formatters.preserve_case",
    "category": "envoy.http.stateful_header_formatters",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": [
     "envoy.extensions.http.header_formatters.preserve_case.v3.PreserveCaseFormatterConfig"
    ]
   },
   {
    "name": "preserve_case",
    "category": "envoy.http.stateful_header_formatters",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": []
   },
   {
    "name": "envoy.rds_factory.default",
    "category": "envoy.rds_factory",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": []
   },
   {
    "name": "auto",
    "category": "envoy.thrift_proxy.protocols",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": []
   },
   {
    "name": "binary",
    "category": "envoy.thrift_proxy.protocols",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": []
   },
   {
    "name": "binary/non-strict",
    "category": "envoy.thrift_proxy.protocols",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": []
   },
   {
    "name": "compact",
    "category": "envoy.thrift_proxy.protocols",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": []
   },
   {
    "name": "twitter",
    "category": "envoy.thrift_proxy.protocols",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": []
   },
   {
    "name": "envoy.watchdog.abort_action",
    "category": "envoy.guarddog_actions",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": [
     "envoy.watchdog.v3.AbortActionConfig"
    ]
   },
   {
    "name": "envoy.watchdog.profile_action",
    "category": "envoy.guarddog_actions",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": [
     "envoy.extensions.watchdog.profile_action.v3.ProfileActionConfig"
    ]
   },
   {
    "name": "envoy.tracers.opentelemetry.resource_detectors.dynatrace",
    "category": "envoy.tracers.opentelemetry.resource_detectors",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": [
     "envoy.extensions.tracers.opentelemetry.resource_detectors.v3.DynatraceResourceDetectorConfig"
    ]
   },
   {
    "name": "envoy.tracers.opentelemetry.resource_detectors.environment",
    "category": "envoy.tracers.opentelemetry.resource_detectors",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": [
     "envoy.extensions.tracers.opentelemetry.resource_detectors.v3.EnvironmentResourceDetectorConfig"
    ]
   },
   {
    "name": "envoy.tracers.opentelemetry.resource_detectors.static_config",
    "category": "envoy.tracers.opentelemetry.resource_detectors",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": [
     "envoy.extensions.tracers.opentelemetry.resource_detectors.v3.StaticConfigResourceDetectorConfig"
    ]
   },
   {
    "name": "envoy.compression.brotli.compressor",
    "category": "envoy.compression.compressor",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": [
     "envoy.extensions.compression.brotli.compressor.v3.Brotli"
    ]
   },
   {
    "name": "envoy.compression.gzip.compressor",
    "category": "envoy.compression.compressor",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": [
     "envoy.extensions.compression.gzip.compressor.v3.Gzip"
    ]
   },
   {
    "name": "envoy.compression.zstd.compressor",
    "category": "envoy.compression.compressor",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": [
     "envoy.extensions.compression.zstd.compressor.v3.Zstd"
    ]
   },
   {
    "name": "envoy.health_checkers.grpc",
    "category": "envoy.health_checkers",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": [
     "envoy.config.core.v3.HealthCheck.GrpcHealthCheck"
    ]
   },
   {
    "name": "envoy.health_checkers.http",
    "category": "envoy.health_checkers",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": [
     "envoy.config.core.v3.HealthCheck.HttpHealthCheck"
    ]
   },
   {
    "name": "envoy.health_checkers.redis",
    "category": "envoy.health_checkers",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": [
     "envoy.extensions.health_checkers.redis.v3.Redis"
    ]
   },
   {
    "name": "envoy.health_checkers.tcp",
    "category": "envoy.health_checkers",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": [
     "envoy.config.core.v3.HealthCheck.TcpHealthCheck"
    ]
   },
   {
    "name": "envoy.health_checkers.thrift",
    "category": "envoy.health_checkers",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": [
     "envoy.extensions.health_checkers.thrift.v3.Thrift"
    ]
   },
   {
    "name": "envoy.transport_sockets.alts",
    "category": "envoy.transport_sockets.upstream",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": [
     "envoy.extensions.transport_sockets.alts.v3.Alts"
    ]
   },
   {
    "name": "envoy.transport_sockets.http_11_proxy",
    "category": "envoy.transport_sockets.upstream",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": [
     "envoy.extensions.transport_sockets.http_11_proxy.v3.Http11ProxyUpstreamTransport"
    ]
   },
   {
    "name": "envoy.transport_sockets.internal_upstream",
    "category": "envoy.transport_sockets.upstream",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": [
     "envoy.extensions.transport_sockets.internal_upstream.v3.InternalUpstreamTransport"
    ]
   },
   {
    "name": "envoy.transport_sockets.quic",
    "category": "envoy.transport_sockets.upstream",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": [
     "envoy.extensions.transport_sockets.quic.v3.QuicUpstreamTransport"
    ]
   },
   {
    "name": "envoy.transport_sockets.raw_buffer",
    "category": "envoy.transport_sockets.upstream",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": [
     "envoy.extensions.transport_sockets.raw_buffer.v3.RawBuffer"
    ]
   },
   {
    "name": "envoy.transport_sockets.starttls",
    "category": "envoy.transport_sockets.upstream",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": [
     "envoy.extensions.transport_sockets.starttls.v3.UpstreamStartTlsConfig"
    ]
   },
   {
    "name": "envoy.transport_sockets.tap",
    "category": "envoy.transport_sockets.upstream",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": [
     "envoy.extensions.transport_sockets.tap.v3.Tap"
    ]
   },
   {
    "name": "envoy.transport_sockets.tcp_stats",
    "category": "envoy.transport_sockets.upstream",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": [
     "envoy.extensions.transport_sockets.tcp_stats.v3.Config"
    ]
   },
   {
    "name": "envoy.transport_sockets.tls",
    "category": "envoy.transport_sockets.upstream",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": [
     "envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext"
    ]
   },
   {
    "name": "envoy.transport_sockets.upstream_proxy_protocol",
    "category": "envoy.transport_sockets.upstream",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": [
     "envoy.extensions.transport_sockets.proxy_protocol.v3.ProxyProtocolUpstreamTransport"
    ]
   },
   {
    "name": "raw_buffer",
    "category": "envoy.transport_sockets.upstream",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": []
   },
   {
    "name": "starttls",
    "category": "envoy.transport_sockets.upstream",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": []
   },
   {
    "name": "tls",
    "category": "envoy.transport_sockets.upstream",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": []
   },
   {
    "name": "envoy.rbac.matchers.upstream_ip_port",
    "category": "envoy.rbac.matchers",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": [
     "envoy.extensions.rbac.matchers.upstream_ip_port.v3.UpstreamIpPortMatcher"
    ]
   },
   {
    "name": "envoy.http.header_validators.envoy_default",
    "category": "envoy.http.header_validators",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": [
     "envoy.extensions.http.header_validators.envoy_default.v3.HeaderValidatorConfig"
    ]
   },
   {
    "name": "envoy.ip",
    "category": "envoy.resolvers",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": []
   },
   {
    "name": "envoy.path.rewrite.uri_template.uri_template_rewriter",
    "category": "envoy.path.rewrite",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": [
     "envoy.extensions.path.rewrite.uri_template.v3.UriTemplateRewriteConfig"
    ]
   },
   {
    "name": "envoy.tracers.datadog",
    "category": "envoy.tracers",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": [
     "envoy.config.trace.v3.DatadogConfig"
    ]
   },
   {
    "name": "envoy.tracers.opencensus",
    "category": "envoy.tracers",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": [
     "envoy.config.trace.v3.OpenCensusConfig"
    ]
   },
   {
    "name": "envoy.tracers.opentelemetry",
    "category": "envoy.tracers",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": [
     "envoy.config.trace.v3.OpenTelemetryConfig"
    ]
   },
   {
    "name": "envoy.tracers.skywalking",
    "category": "envoy.tracers",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": [
     "envoy.config.trace.v3.SkyWalkingConfig"
    ]
   },
   {
    "name": "envoy.tracers.xray",
    "category": "envoy.tracers",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": [
     "envoy.config.trace.v3.XRayConfig"
    ]
   },
   {
    "name": "envoy.tracers.zipkin",
    "category": "envoy.tracers",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": [
     "envoy.config.trace.v3.ZipkinConfig"
    ]
   },
   {
    "name": "envoy.zipkin",
    "category": "envoy.tracers",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": []
   },
   {
    "name": "envoy.http.original_ip_detection.custom_header",
    "category": "envoy.http.original_ip_detection",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": [
     "envoy.extensions.http.original_ip_detection.custom_header.v3.CustomHeaderConfig"
    ]
   },
   {
    "name": "envoy.http.original_ip_detection.xff",
    "category": "envoy.http.original_ip_detection",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": [
     "envoy.extensions.http.original_ip_detection.xff.v3.XffConfig"
    ]
   },
   {
    "name": "envoy.resource_monitors.cpu_utilization",
    "category": "envoy.resource_monitors",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": [
     "envoy.extensions.resource_monitors.cpu_utilization.v3.CpuUtilizationConfig"
    ]
   },
   {
    "name": "envoy.resource_monitors.fixed_heap",
    "category": "envoy.resource_monitors",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": [
     "envoy.extensions.resource_monitors.fixed_heap.v3.FixedHeapConfig"
    ]
   },
   {
    "name": "envoy.resource_monitors.injected_resource",
    "category": "envoy.resource_monitors",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": [
     "envoy.extensions.resource_monitors.injected_resource.v3.InjectedResourceConfig"
    ]
   },
   {
    "name": "envoy.config_subscription.ads",
    "category": "envoy.config_subscription",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": []
   },
   {
    "name": "envoy.config_subscription.ads_collection",
    "category": "envoy.config_subscription",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": []
   },
   {
    "name": "envoy.config_subscription.aggregated_grpc_collection",
    "category": "envoy.config_subscription",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": []
   },
   {
    "name": "envoy.config_subscription.delta_grpc",
    "category": "envoy.config_subscription",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": []
   },
   {
    "name": "envoy.config_subscription.delta_grpc_collection",
    "category": "envoy.config_subscription",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": []
   },
   {
    "name": "envoy.config_subscription.filesystem",
    "category": "envoy.config_subscription",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": []
   },
   {
    "name": "envoy.config_subscription.filesystem_collection",
    "category": "envoy.config_subscription",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": []
   },
   {
    "name": "envoy.config_subscription.grpc",
    "category": "envoy.config_subscription",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": []
   },
   {
    "name": "envoy.config_subscription.rest",
    "category": "envoy.config_subscription",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": []
   },
   {
    "name": "envoy.echo",
    "category": "envoy.filters.network",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": []
   },
   {
    "name": "envoy.ext_authz",
    "category": "envoy.filters.network",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": []
   },
   {
    "name": "envoy.filters.network.connection_limit",
    "category": "envoy.filters.network",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": [
     "envoy.extensions.filters.network.connection_limit.v3.ConnectionLimit"
    ]
   },
   {
    "name": "envoy.filters.network.direct_response",
    "category": "envoy.filters.network",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": [
     "envoy.extensions.filters.network.direct_response.v3.Config"
    ]
   },
   {
    "name": "envoy.filters.network.dubbo_proxy",
    "category": "envoy.filters.network",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": [
     "envoy.extensions.filters.network.dubbo_proxy.v3.DubboProxy"
    ]
   },
   {
    "name": "envoy.filters.network.echo",
    "category": "envoy.filters.network",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": [
     "envoy.extensions.filters.network.echo.v3.Echo"
    ]
   },
   {
    "name": "envoy.filters.network.ext_authz",
    "category": "envoy.filters.network",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": [
     "envoy.extensions.filters.network.ext_authz.v3.ExtAuthz"
    ]
   },
   {
    "name": "envoy.filters.network.generic_proxy",
    "category": "envoy.filters.network",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": [
     "envoy.extensions.filters.network.generic_proxy.v3.GenericProxy"
    ]
   },
   {
    "name": "envoy.filters.network.http_connection_manager",
    "category": "envoy.filters.network",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": [
     "envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager"
    ]
   },
   {
    "name": "envoy.filters.network.local_ratelimit",
    "category": "envoy.filters.network",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": [
     "envoy.extensions.filters.network.local_ratelimit.v3.LocalRateLimit"
    ]
   },
   {
    "name": "envoy.filters.network.mongo_proxy",
    "category": "envoy.filters.network",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": [
     "envoy.extensions.filters.network.mongo_proxy.v3.MongoProxy"
    ]
   },
   {
    "name": "envoy.filters.network.ratelimit",
    "category": "envoy.filters.network",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": [
     "envoy.extensions.filters.network.ratelimit.v3.RateLimit"
    ]
   },
   {
    "name": "envoy.filters.network.rbac",
    "category": "envoy.filters.network",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": [
     "envoy.extensions.filters.network.rbac.v3.RBAC"
    ]
   },
   {
    "name": "envoy.filters.network.redis_proxy",
    "category": "envoy.filters.network",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": [
     "envoy.extensions.filters.network.redis_proxy.v3.RedisProxy"
    ]
   },
   {
    "name": "envoy.filters.network.set_filter_state",
    "category": "envoy.filters.network",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": [
     "envoy.extensions.filters.network.set_filter_state.v3.Config"
    ]
   },
   {
    "name": "envoy.filters.network.sni_cluster",
    "category": "envoy.filters.network",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": [
     "envoy.extensions.filters.network.sni_cluster.v3.SniCluster"
    ]
   },
   {
    "name": "envoy.filters.network.sni_dynamic_forward_proxy",
    "category": "envoy.filters.network",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": [
     "envoy.extensions.filters.network.sni_dynamic_forward_proxy.v3.FilterConfig"
    ]
   },
   {
    "name": "envoy.filters.network.tcp_proxy",
    "category": "envoy.filters.network",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": [
     "envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy"
    ]
   },
   {
    "name": "envoy.filters.network.thrift_proxy",
    "category": "envoy.filters.network",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": [
     "envoy.extensions.filters.network.thrift_proxy.v3.ThriftProxy"
    ]
   },
   {
    "name": "envoy.filters.network.wasm",
    "category": "envoy.filters.network",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": [
     "envoy.extensions.filters.network.wasm.v3.Wasm"
    ]
   },
   {
    "name": "envoy.filters.network.zookeeper_proxy",
    "category": "envoy.filters.network",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": [
     "envoy.extensions.filters.network.zookeeper_proxy.v3.ZooKeeperProxy"
    ]
   },
   {
    "name": "envoy.http_connection_manager",
    "category": "envoy.filters.network",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": []
   },
   {
    "name": "envoy.mongo_proxy",
    "category": "envoy.filters.network",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": []
   },
   {
    "name": "envoy.ratelimit",
    "category": "envoy.filters.network",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": []
   },
   {
    "name": "envoy.redis_proxy",
    "category": "envoy.filters.network",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": []
   },
   {
    "name": "envoy.tcp_proxy",
    "category": "envoy.filters.network",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": []
   },
   {
    "name": "envoy.connection_handler.default",
    "category": "envoy.connection_handler",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": []
   },
   {
    "name": "envoy.matching.inputs.application_protocol",
    "category": "envoy.matching.network.input",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": [
     "envoy.extensions.matching.common_inputs.network.v3.ApplicationProtocolInput"
    ]
   },
   {
    "name": "envoy.matching.inputs.destination_ip",
    "category": "envoy.matching.network.input",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": [
     "envoy.extensions.matching.common_inputs.network.v3.DestinationIPInput"
    ]
   },
   {
    "name": "envoy.matching.inputs.destination_port",
    "category": "envoy.matching.network.input",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": [
     "envoy.extensions.matching.common_inputs.network.v3.DestinationPortInput"
    ]
   },
   {
    "name": "envoy.matching.inputs.direct_source_ip",
    "category": "envoy.matching.network.input",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": [
     "envoy.extensions.matching.common_inputs.network.v3.DirectSourceIPInput"
    ]
   },
   {
    "name": "envoy.matching.inputs.dns_san",
    "category": "envoy.matching.network.input",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": [
     "envoy.extensions.matching.common_inputs.ssl.v3.DnsSanInput"
    ]
   },
   {
    "name": "envoy.matching.inputs.filter_state",
    "category": "envoy.matching.network.input",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": [
     "envoy.extensions.matching.common_inputs.network.v3.FilterStateInput"
    ]
   },
   {
    "name": "envoy.matching.inputs.server_name",
    "category": "envoy.matching.network.input",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": [
     "envoy.extensions.matching.common_inputs.network.v3.ServerNameInput"
    ]
   },
   {
    "name": "envoy.matching.inputs.source_ip",
    "category": "envoy.matching.network.input",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": [
     "envoy.extensions.matching.common_inputs.network.v3.SourceIPInput"
    ]
   },
   {
    "name": "envoy.matching.inputs.source_port",
    "category": "envoy.matching.network.input",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": [
     "envoy.extensions.matching.common_inputs.network.v3.SourcePortInput"
    ]
   },
   {
    "name": "envoy.matching.inputs.source_type",
    "category": "envoy.matching.network.input",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": [
     "envoy.extensions.matching.common_inputs.network.v3.SourceTypeInput"
    ]
   },
   {
    "name": "envoy.matching.inputs.subject",
    "category": "envoy.matching.network.input",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": [
     "envoy.extensions.matching.common_inputs.ssl.v3.SubjectInput"
    ]
   },
   {
    "name": "envoy.matching.inputs.transport_protocol",
    "category": "envoy.matching.network.input",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": [
     "envoy.extensions.matching.common_inputs.network.v3.TransportProtocolInput"
    ]
   },
   {
    "name": "envoy.matching.inputs.uri_san",
    "category": "envoy.matching.network.input",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": [
     "envoy.extensions.matching.common_inputs.ssl.v3.UriSanInput"
    ]
   },
   {
    "name": "dubbo.hessian2",
    "category": "envoy.dubbo_proxy.serializers",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": []
   },
   {
    "name": "envoy.generic_proxy.codecs.dubbo",
    "category": "envoy.generic_proxy.codecs",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": [
     "envoy.extensions.filters.network.generic_proxy.codecs.dubbo.v3.DubboCodecConfig"
    ]
   },
   {
    "name": "envoy.generic_proxy.codecs.http1",
    "category": "envoy.generic_proxy.codecs",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": [
     "envoy.extensions.filters.network.generic_proxy.codecs.http1.v3.Http1CodecConfig"
    ]
   },
   {
    "name": "envoy.upstream.local_address_selector.default_local_address_selector",
    "category": "envoy.upstream.local_address_selector",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": [
     "envoy.config.upstream.local_address_selector.v3.DefaultLocalAddressSelector"
    ]
   },
   {
    "name": "envoy.srds_factory.default",
    "category": "envoy.srds_factory",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": []
   },
   {
    "name": "envoy.ssl.server_context_factory.default",
    "category": "envoy.ssl.server_context_factory",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": []
   },
   {
    "name": "envoy.grpc_credentials.aws_iam",
    "category": "envoy.grpc_credentials",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": []
   },
   {
    "name": "envoy.grpc_credentials.default",
    "category": "envoy.grpc_credentials",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": []
   },
   {
    "name": "envoy.grpc_credentials.file_based_metadata",
    "category": "envoy.grpc_credentials",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": []
   },
   {
    "name": "envoy.http.stateful_session.cookie",
    "category": "envoy.http.stateful_session",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": [
     "envoy.extensions.http.stateful_session.cookie.v3.CookieBasedSessionState"
    ]
   },
   {
    "name": "envoy.http.stateful_session.header",
    "category": "envoy.http.stateful_session",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": [
     "envoy.extensions.http.stateful_session.header.v3.HeaderBasedSessionState"
    ]
   },
   {
    "name": "default",
    "category": "network.connection.client",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": []
   },
   {
    "name": "envoy_internal",
    "category": "network.connection.client",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": []
   },
   {
    "name": "envoy.geoip_providers.maxmind",
    "category": "envoy.geoip_providers",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": [
     "envoy.extensions.geoip_providers.maxmind.v3.MaxMindConfig"
    ]
   },
   {
    "name": "envoy.regex_engines.google_re2",
    "category": "envoy.regex_engines",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": [
     "envoy.extensions.regex_engines.v3.GoogleRE2"
    ]
   },
   {
    "name": "envoy.router.cluster_specifier_plugin.lua",
    "category": "envoy.router.cluster_specifier_plugin",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": [
     "envoy.extensions.router.cluster_specifiers.lua.v3.LuaConfig"
    ]
   },
   {
    "name": "envoy.buffer",
    "category": "envoy.filters.http.upstream",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": []
   },
   {
    "name": "envoy.ext_proc",
    "category": "envoy.filters.http.upstream",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": []
   },
   {
    "name": "envoy.filters.http.admission_control",
    "category": "envoy.filters.http.upstream",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": [
     "envoy.extensions.filters.http.admission_control.v3.AdmissionControl"
    ]
   },
   {
    "name": "envoy.filters.http.aws_lambda",
    "category": "envoy.filters.http.upstream",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": [
     "envoy.extensions.filters.http.aws_lambda.v3.Config",
     "envoy.extensions.filters.http.aws_lambda.v3.PerRouteConfig"
    ]
   },
   {
    "name": "envoy.filters.http.aws_request_signing",
    "category": "envoy.filters.http.upstream",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": [
     "envoy.extensions.filters.http.aws_request_signing.v3.AwsRequestSigning",
     "envoy.extensions.filters.http.aws_request_signing.v3.AwsRequestSigningPerRoute"
    ]
   },
   {
    "name": "envoy.filters.http.buffer",
    "category": "envoy.filters.http.upstream",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": [
     "envoy.extensions.filters.http.buffer.v3.Buffer",
     "envoy.extensions.filters.http.buffer.v3.BufferPerRoute"
    ]
   },
   {
    "name": "envoy.filters.http.composite",
    "category": "envoy.filters.http.upstream",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": [
     "envoy.extensions.filters.http.composite.v3.Composite"
    ]
   },
   {
    "name": "envoy.filters.http.ext_proc",
    "category": "envoy.filters.http.upstream",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": [
     "envoy.extensions.filters.http.ext_proc.v3.ExtProcPerRoute",
     "envoy.extensions.filters.http.ext_proc.v3.ExternalProcessor"
    ]
   },
   {
    "name": "envoy.filters.http.header_mutation",
    "category": "envoy.filters.http.upstream",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": [
     "envoy.extensions.filters.http.header_mutation.v3.HeaderMutation",
     "envoy.extensions.filters.http.header_mutation.v3.HeaderMutationPerRoute"
    ]
   },
   {
    "name": "envoy.filters.http.match_delegate",
    "category": "envoy.filters.http.upstream",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": [
     "envoy.extensions.common.matching.v3.ExtensionWithMatcher",
     "envoy.extensions.common.matching.v3.ExtensionWithMatcherPerRoute"
    ]
   },
   {
    "name": "envoy.filters.http.upstream_codec",
    "category": "envoy.filters.http.upstream",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": [
     "envoy.extensions.filters.http.upstream_codec.v3.UpstreamCodec"
    ]
   },
   {
    "name": "envoy.filters.http.wasm",
    "category": "envoy.filters.http.upstream",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": [
     "envoy.extensions.filters.http.wasm.v3.Wasm"
    ]
   },
   {
    "name": "envoy.tracers.opentelemetry.samplers.always_on",
    "category": "envoy.tracers.opentelemetry.samplers",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": [
     "envoy.extensions.tracers.opentelemetry.samplers.v3.AlwaysOnSamplerConfig"
    ]
   },
   {
    "name": "envoy.tracers.opentelemetry.samplers.dynatrace",
    "category": "envoy.tracers.opentelemetry.samplers",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": [
     "envoy.extensions.tracers.opentelemetry.samplers.v3.DynatraceSamplerConfig"
    ]
   },
   {
    "name": "envoy.filters.listener.http_inspector",
    "category": "envoy.filters.listener",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": [
     "envoy.extensions.filters.listener.http_inspector.v3.HttpInspector"
    ]
   },
   {
    "name": "envoy.filters.listener.local_ratelimit",
    "category": "envoy.filters.listener",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": [
     "envoy.extensions.filters.listener.local_ratelimit.v3.LocalRateLimit"
    ]
   },
   {
    "name": "envoy.filters.listener.original_dst",
    "category": "envoy.filters.listener",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": [
     "envoy.extensions.filters.listener.original_dst.v3.OriginalDst"
    ]
   },
   {
    "name": "envoy.filters.listener.original_src",
    "category": "envoy.filters.listener",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": [
     "envoy.extensions.filters.listener.original_src.v3.OriginalSrc"
    ]
   },
   {
    "name": "envoy.filters.listener.proxy_protocol",
    "category": "envoy.filters.listener",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": [
     "envoy.extensions.filters.listener.proxy_protocol.v3.ProxyProtocol"
    ]
   },
   {
    "name": "envoy.filters.listener.tls_inspector",
    "category": "envoy.filters.listener",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": [
     "envoy.extensions.filters.listener.tls_inspector.v3.TlsInspector"
    ]
   },
   {
    "name": "envoy.listener.http_inspector",
    "category": "envoy.filters.listener",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": []
   },
   {
    "name": "envoy.listener.original_dst",
    "category": "envoy.filters.listener",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": []
   },
   {
    "name": "envoy.listener.original_src",
    "category": "envoy.filters.listener",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": []
   },
   {
    "name": "envoy.listener.proxy_protocol",
    "category": "envoy.filters.listener",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": []
   },
   {
    "name": "envoy.listener.tls_inspector",
    "category": "envoy.filters.listener",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": []
   },
   {
    "name": "envoy.listener_manager_impl.default",
    "category": "envoy.listener_manager_impl",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": [
     "envoy.config.listener.v3.ListenerManager"
    ]
   },
   {
    "name": "envoy.listener_manager_impl.validation",
    "category": "envoy.listener_manager_impl",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": [
     "envoy.config.listener.v3.ValidationListenerManager"
    ]
   },
   {
    "name": "envoy.matching.inputs.cel_data_input",
    "category": "envoy.matching.http.input",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": [
     "xds.type.matcher.v3.HttpAttributesCelMatchInput"
    ]
   },
   {
    "name": "envoy.matching.inputs.destination_ip",
    "category": "envoy.matching.http.input",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": [
     "envoy.extensions.matching.common_inputs.network.v3.DestinationIPInput"
    ]
   },
   {
    "name": "envoy.matching.inputs.destination_port",
    "category": "envoy.matching.http.input",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": [
     "envoy.extensions.matching.common_inputs.network.v3.DestinationPortInput"
    ]
   },
   {
    "name": "envoy.matching.inputs.direct_source_ip",
    "category": "envoy.matching.http.input",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": [
     "envoy.extensions.matching.common_inputs.network.v3.DirectSourceIPInput"
    ]
   },
   {
    "name": "envoy.matching.inputs.dns_san",
    "category": "envoy.matching.http.input",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": [
     "envoy.extensions.matching.common_inputs.ssl.v3.DnsSanInput"
    ]
   },
   {
    "name": "envoy.matching.inputs.dynamic_metadata",
    "category": "envoy.matching.http.input",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": [
     "envoy.extensions.matching.common_inputs.network.v3.DynamicMetadataInput"
    ]
   },
   {
    "name": "envoy.matching.inputs.filter_state",
    "category": "envoy.matching.http.input",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": [
     "envoy.extensions.matching.common_inputs.network.v3.FilterStateInput"
    ]
   },
   {
    "name": "envoy.matching.inputs.request_headers",
    "category": "envoy.matching.http.input",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": [
     "envoy.type.matcher.v3.HttpRequestHeaderMatchInput"
    ]
   },
   {
    "name": "envoy.matching.inputs.request_trailers",
    "category": "envoy.matching.http.input",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": [
     "envoy.type.matcher.v3.HttpRequestTrailerMatchInput"
    ]
   },
   {
    "name": "envoy.matching.inputs.response_headers",
    "category": "envoy.matching.http.input",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": [
     "envoy.type.matcher.v3.HttpResponseHeaderMatchInput"
    ]
   },
   {
    "name": "envoy.matching.inputs.response_trailers",
    "category": "envoy.matching.http.input",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": [
     "envoy.type.matcher.v3.HttpResponseTrailerMatchInput"
    ]
   },
   {
    "name": "envoy.matching.inputs.server_name",
    "category": "envoy.matching.http.input",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": [
     "envoy.extensions.matching.common_inputs.network.v3.ServerNameInput"
    ]
   },
   {
    "name": "envoy.matching.inputs.source_ip",
    "category": "envoy.matching.http.input",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": [
     "envoy.extensions.matching.common_inputs.network.v3.SourceIPInput"
    ]
   },
   {
    "name": "envoy.matching.inputs.source_port",
    "category": "envoy.matching.http.input",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": [
     "envoy.extensions.matching.common_inputs.network.v3.SourcePortInput"
    ]
   },
   {
    "name": "envoy.matching.inputs.source_type",
    "category": "envoy.matching.http.input",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": [
     "envoy.extensions.matching.common_inputs.network.v3.SourceTypeInput"
    ]
   },
   {
    "name": "envoy.matching.inputs.status_code_class_input",
    "category": "envoy.matching.http.input",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": [
     "envoy.type.matcher.v3.HttpResponseStatusCodeClassMatchInput"
    ]
   },
   {
    "name": "envoy.matching.inputs.status_code_input",
    "category": "envoy.matching.http.input",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": [
     "envoy.type.matcher.v3.HttpResponseStatusCodeMatchInput"
    ]
   },
   {
    "name": "envoy.matching.inputs.subject",
    "category": "envoy.matching.http.input",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": [
     "envoy.extensions.matching.common_inputs.ssl.v3.SubjectInput"
    ]
   },
   {
    "name": "envoy.matching.inputs.uri_san",
    "category": "envoy.matching.http.input",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": [
     "envoy.extensions.matching.common_inputs.ssl.v3.UriSanInput"
    ]
   },
   {
    "name": "query_params",
    "category": "envoy.matching.http.input",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": [
     "envoy.type.matcher.v3.HttpRequestQueryParamMatchInput"
    ]
   },
   {
    "name": "envoy.matching.custom_matchers.trie_matcher",
    "category": "envoy.matching.http.custom_matchers",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": [
     "xds.type.matcher.v3.IPMatcher"
    ]
   },
   {
    "name": "quic.http_server_connection.default",
    "category": "quic.http_server_connection",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": []
   },
   {
    "name": "envoy.bandwidth_limit",
    "category": "envoy.filters.http",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": []
   },
   {
    "name": "envoy.buffer",
    "category": "envoy.filters.http",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": []
   },
   {
    "name": "envoy.cors",
    "category": "envoy.filters.http",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": []
   },
   {
    "name": "envoy.csrf",
    "category": "envoy.filters.http",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": []
   },
   {
    "name": "envoy.ext_authz",
    "category": "envoy.filters.http",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": []
   },
   {
    "name": "envoy.ext_proc",
    "category": "envoy.filters.http",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": []
   },
   {
    "name": "envoy.fault",
    "category": "envoy.filters.http",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": []
   },
   {
    "name": "envoy.filters.http.adaptive_concurrency",
    "category": "envoy.filters.http",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": [
     "envoy.extensions.filters.http.adaptive_concurrency.v3.AdaptiveConcurrency"
    ]
   },
   {
    "name": "envoy.filters.http.admission_control",
    "category": "envoy.filters.http",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": [
     "envoy.extensions.filters.http.admission_control.v3.AdmissionControl"
    ]
   },
   {
    "name": "envoy.filters.http.alternate_protocols_cache",
    "category": "envoy.filters.http",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": [
     "envoy.extensions.filters.http.alternate_protocols_cache.v3.FilterConfig"
    ]
   },
   {
    "name": "envoy.filters.http.aws_lambda",
    "category": "envoy.filters.http",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": [
     "envoy.extensions.filters.http.aws_lambda.v3.Config",
     "envoy.extensions.filters.http.aws_lambda.v3.PerRouteConfig"
    ]
   },
   {
    "name": "envoy.filters.http.aws_request_signing",
    "category": "envoy.filters.http",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": [
     "envoy.extensions.filters.http.aws_request_signing.v3.AwsRequestSigning",
     "envoy.extensions.filters.http.aws_request_signing.v3.AwsRequestSigningPerRoute"
    ]
   },
   {
    "name": "envoy.filters.http.bandwidth_limit",
    "category": "envoy.filters.http",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": [
     "envoy.extensions.filters.http.bandwidth_limit.v3.BandwidthLimit"
    ]
   },
   {
    "name": "envoy.filters.http.basic_auth",
    "category": "envoy.filters.http",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": [
     "envoy.extensions.filters.http.basic_auth.v3.BasicAuth",
     "envoy.extensions.filters.http.basic_auth.v3.BasicAuthPerRoute"
    ]
   },
   {
    "name": "envoy.filters.http.buffer",
    "category": "envoy.filters.http",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": [
     "envoy.extensions.filters.http.buffer.v3.Buffer",
     "envoy.extensions.filters.http.buffer.v3.BufferPerRoute"
    ]
   },
   {
    "name": "envoy.filters.http.cache",
    "category": "envoy.filters.http",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": [
     "envoy.extensions.filters.http.cache.v3.CacheConfig"
    ]
   },
   {
    "name": "envoy.filters.http.cdn_loop",
    "category": "envoy.filters.http",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": [
     "envoy.extensions.filters.http.cdn_loop.v3.CdnLoopConfig"
    ]
   },
   {
    "name": "envoy.filters.http.composite",
    "category": "envoy.filters.http",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": [
     "envoy.extensions.filters.http.composite.v3.Composite"
    ]
   },
   {
    "name": "envoy.filters.http.compressor",
    "category": "envoy.filters.http",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": [
     "envoy.extensions.filters.http.compressor.v3.Compressor",
     "envoy.extensions.filters.http.compressor.v3.CompressorPerRoute"
    ]
   },
   {
    "name": "envoy.filters.http.connect_grpc_bridge",
    "category": "envoy.filters.http",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": [
     "envoy.extensions.filters.http.connect_grpc_bridge.v3.FilterConfig"
    ]
   },
   {
    "name": "envoy.filters.http.cors",
    "category": "envoy.filters.http",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": [
     "envoy.extensions.filters.http.cors.v3.Cors",
     "envoy.extensions.filters.http.cors.v3.CorsPolicy"
    ]
   },
   {
    "name": "envoy.filters.http.credential_injector",
    "category": "envoy.filters.http",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": [
     "envoy.extensions.filters.http.credential_injector.v3.CredentialInjector"
    ]
   },
   {
    "name": "envoy.filters.http.csrf",
    "category": "envoy.filters.http",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": [
     "envoy.extensions.filters.http.csrf.v3.CsrfPolicy"
    ]
   },
   {
    "name": "envoy.filters.http.custom_response",
    "category": "envoy.filters.http",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": [
     "envoy.extensions.filters.http.custom_response.v3.CustomResponse"
    ]
   },
   {
    "name": "envoy.filters.http.decompressor",
    "category": "envoy.filters.http",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": [
     "envoy.extensions.filters.http.decompressor.v3.Decompressor"
    ]
   },
   {
    "name": "envoy.filters.http.dynamic_forward_proxy",
    "category": "envoy.filters.http",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": [
     "envoy.extensions.filters.http.dynamic_forward_proxy.v3.FilterConfig",
     "envoy.extensions.filters.http.dynamic_forward_proxy.v3.PerRouteConfig"
    ]
   },
   {
    "name": "envoy.filters.http.ext_authz",
    "category": "envoy.filters.http",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": [
     "envoy.extensions.filters.http.ext_authz.v3.ExtAuthz",
     "envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute"
    ]
   },
   {
    "name": "envoy.filters.http.ext_proc",
    "category": "envoy.filters.http",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": [
     "envoy.extensions.filters.http.ext_proc.v3.ExtProcPerRoute",
     "envoy.extensions.filters.http.ext_proc.v3.ExternalProcessor"
    ]
   },
   {
    "name": "envoy.filters.http.fault",
    "category": "envoy.filters.http",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": [
     "envoy.extensions.filters.http.fault.v3.HTTPFault"
    ]
   },
   {
    "name": "envoy.filters.http.file_system_buffer",
    "category": "envoy.filters.http",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": [
     "envoy.extensions.filters.http.file_system_buffer.v3.FileSystemBufferFilterConfig"
    ]
   },
   {
    "name": "envoy.filters.http.gcp_authn",
    "category": "envoy.filters.http",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": [
     "envoy.extensions.filters.http.gcp_authn.v3.GcpAuthnFilterConfig"
    ]
   },
   {
    "name": "envoy.filters.http.geoip",
    "category": "envoy.filters.http",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": [
     "envoy.extensions.filters.http.geoip.v3.Geoip"
    ]
   },
   {
    "name": "envoy.filters.http.grpc_field_extraction",
    "category": "envoy.filters.http",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": [
     "envoy.extensions.filters.http.grpc_field_extraction.v3.GrpcFieldExtractionConfig"
    ]
   },
   {
    "name": "envoy.filters.http.grpc_http1_bridge",
    "category": "envoy.filters.http",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": [
     "envoy.extensions.filters.http.grpc_http1_bridge.v3.Config"
    ]
   },
   {
    "name": "envoy.filters.http.grpc_http1_reverse_bridge",
    "category": "envoy.filters.http",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": [
     "envoy.extensions.filters.http.grpc_http1_reverse_bridge.v3.FilterConfig",
     "envoy.extensions.filters.http.grpc_http1_reverse_bridge.v3.FilterConfigPerRoute"
    ]
   },
   {
    "name": "envoy.filters.http.grpc_json_transcoder",
    "category": "envoy.filters.http",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": [
     "envoy.extensions.filters.http.grpc_json_transcoder.v3.GrpcJsonTranscoder"
    ]
   },
   {
    "name": "envoy.filters.http.grpc_stats",
    "category": "envoy.filters.http",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": [
     "envoy.extensions.filters.http.grpc_stats.v3.FilterConfig"
    ]
   },
   {
    "name": "envoy.filters.http.grpc_web",
    "category": "envoy.filters.http",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": [
     "envoy.extensions.filters.http.grpc_web.v3.GrpcWeb"
    ]
   },
   {
    "name": "envoy.filters.http.header_mutation",
    "category": "envoy.filters.http",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": [
     "envoy.extensions.filters.http.header_mutation.v3.HeaderMutation",
     "envoy.extensions.filters.http.header_mutation.v3.HeaderMutationPerRoute"
    ]
   },
   {
    "name": "envoy.filters.http.header_to_metadata",
    "category": "envoy.filters.http",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": [
     "envoy.extensions.filters.http.header_to_metadata.v3.Config"
    ]
   },
   {
    "name": "envoy.filters.http.health_check",
    "category": "envoy.filters.http",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": [
     "envoy.extensions.filters.http.health_check.v3.HealthCheck"
    ]
   },
   {
    "name": "envoy.filters.http.ip_tagging",
    "category": "envoy.filters.http",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": [
     "envoy.extensions.filters.http.ip_tagging.v3.IPTagging"
    ]
   },
   {
    "name": "envoy.filters.http.json_to_metadata",
    "category": "envoy.filters.http",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": [
     "envoy.extensions.filters.http.json_to_metadata.v3.JsonToMetadata"
    ]
   },
   {
    "name": "envoy.filters.http.jwt_authn",
    "category": "envoy.filters.http",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": [
     "envoy.extensions.filters.http.jwt_authn.v3.JwtAuthentication",
     "envoy.extensions.filters.http.jwt_authn.v3.PerRouteConfig"
    ]
   },
   {
    "name": "envoy.filters.http.local_ratelimit",
    "category": "envoy.filters.http",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": [
     "envoy.extensions.filters.http.local_ratelimit.v3.LocalRateLimit"
    ]
   },
   {
    "name": "envoy.filters.http.lua",
    "category": "envoy.filters.http",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": [
     "envoy.extensions.filters.http.lua.v3.Lua",
     "envoy.extensions.filters.http.lua.v3.LuaPerRoute"
    ]
   },
   {
    "name": "envoy.filters.http.match_delegate",
    "category": "envoy.filters.http",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": [
     "envoy.extensions.common.matching.v3.ExtensionWithMatcher",
     "envoy.extensions.common.matching.v3.ExtensionWithMatcherPerRoute"
    ]
   },
   {
    "name": "envoy.filters.http.oauth2",
    "category": "envoy.filters.http",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": [
     "envoy.extensions.filters.http.oauth2.v3.OAuth2"
    ]
   },
   {
    "name": "envoy.filters.http.on_demand",
    "category": "envoy.filters.http",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": [
     "envoy.extensions.filters.http.on_demand.v3.OnDemand",
     "envoy.extensions.filters.http.on_demand.v3.PerRouteConfig"
    ]
   },
   {
    "name": "envoy.filters.http.original_src",
    "category": "envoy.filters.http",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": [
     "envoy.extensions.filters.http.original_src.v3.OriginalSrc"
    ]
   },
   {
    "name": "envoy.filters.http.proto_message_extraction",
    "category": "envoy.filters.http",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": [
     "envoy.extensions.filters.http.proto_message_extraction.v3.ProtoMessageExtractionConfig"
    ]
   },
   {
    "name": "envoy.filters.http.rate_limit_quota",
    "category": "envoy.filters.http",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": [
     "envoy.extensions.filters.http.rate_limit_quota.v3.RateLimitQuotaFilterConfig",
     "envoy.extensions.filters.http.rate_limit_quota.v3.RateLimitQuotaOverride"
    ]
   },
   {
    "name": "envoy.filters.http.ratelimit",
    "category": "envoy.filters.http",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": [
     "envoy.extensions.filters.http.ratelimit.v3.RateLimit",
     "envoy.extensions.filters.http.ratelimit.v3.RateLimitPerRoute"
    ]
   },
   {
    "name": "envoy.filters.http.rbac",
    "category": "envoy.filters.http",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": [
     "envoy.extensions.filters.http.rbac.v3.RBAC",
     "envoy.extensions.filters.http.rbac.v3.RBACPerRoute"
    ]
   },
   {
    "name": "envoy.filters.http.router",
    "category": "envoy.filters.http",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": [
     "envoy.extensions.filters.http.router.v3.Router"
    ]
   },
   {
    "name": "envoy.filters.http.set_filter_state",
    "category": "envoy.filters.http",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": [
     "envoy.extensions.filters.http.set_filter_state.v3.Config"
    ]
   },
   {
    "name": "envoy.filters.http.set_metadata",
    "category": "envoy.filters.http",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": [
     "envoy.extensions.filters.http.set_metadata.v3.Config"
    ]
   },
   {
    "name": "envoy.filters.http.stateful_session",
    "category": "envoy.filters.http",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": [
     "envoy.extensions.filters.http.stateful_session.v3.StatefulSession",
     "envoy.extensions.filters.http.stateful_session.v3.StatefulSessionPerRoute"
    ]
   },
   {
    "name": "envoy.filters.http.tap",
    "category": "envoy.filters.http",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": [
     "envoy.extensions.filters.http.tap.v3.Tap"
    ]
   },
   {
    "name": "envoy.filters.http.thrift_to_metadata",
    "category": "envoy.filters.http",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": [
     "envoy.extensions.filters.http.thrift_to_metadata.v3.ThriftToMetadata"
    ]
   },
   {
    "name": "envoy.filters.http.wasm",
    "category": "envoy.filters.http",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": [
     "envoy.extensions.filters.http.wasm.v3.Wasm"
    ]
   },
   {
    "name": "envoy.geoip",
    "category": "envoy.filters.http",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": []
   },
   {
    "name": "envoy.grpc_http1_bridge",
    "category": "envoy.filters.http",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": []
   },
   {
    "name": "envoy.grpc_json_transcoder",
    "category": "envoy.filters.http",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": []
   },
   {
    "name": "envoy.grpc_web",
    "category": "envoy.filters.http",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": []
   },
   {
    "name": "envoy.health_check",
    "category": "envoy.filters.http",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": []
   },
   {
    "name": "envoy.ip_tagging",
    "category": "envoy.filters.http",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": []
   },
   {
    "name": "envoy.local_rate_limit",
    "category": "envoy.filters.http",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": []
   },
   {
    "name": "envoy.lua",
    "category": "envoy.filters.http",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": []
   },
   {
    "name": "envoy.rate_limit",
    "category": "envoy.filters.http",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": []
   },
   {
    "name": "envoy.router",
    "category": "envoy.filters.http",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": []
   },
   {
    "name": "envoy.health_check.event_sink.file",
    "category": "envoy.health_check.event_sinks",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": [
     "envoy.extensions.health_check.event_sinks.file.v3.HealthCheckEventFileSink"
    ]
   },
   {
    "name": "envoy.generic_proxy.access_loggers.file",
    "category": "envoy.generic_proxy.access_loggers",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": [
     "envoy.extensions.access_loggers.file.v3.FileAccessLog"
    ]
   },
   {
    "name": "auto",
    "category": "envoy.thrift_proxy.transports",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": []
   },
   {
    "name": "framed",
    "category": "envoy.thrift_proxy.transports",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": []
   },
   {
    "name": "header",
    "category": "envoy.thrift_proxy.transports",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": []
   },
   {
    "name": "unframed",
    "category": "envoy.thrift_proxy.transports",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": []
   },
   {
    "name": "envoy.tls.cert_validator.default",
    "category": "envoy.tls.cert_validator",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": []
   },
   {
    "name": "envoy.tls.cert_validator.spiffe",
    "category": "envoy.tls.cert_validator",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": []
   },
   {
    "name": "envoy.route.early_data_policy.default",
    "category": "envoy.route.early_data_policy",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": [
     "envoy.extensions.early_data.v3.DefaultEarlyDataPolicy"
    ]
   },
   {
    "name": "envoy.string_matcher.lua",
    "category": "envoy.string_matcher",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": [
     "envoy.extensions.string_matcher.lua.v3.Lua"
    ]
   },
   {
    "name": "envoy.extensions.http.cache.file_system_http_cache",
    "category": "envoy.http.cache",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": [
     "envoy.extensions.http.cache.file_system_http_cache.v3.FileSystemHttpCacheConfig"
    ]
   },
   {
    "name": "envoy.extensions.http.cache.simple",
    "category": "envoy.http.cache",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": [
     "envoy.extensions.http.cache.simple_http_cache.v3.SimpleHttpCacheConfig"
    ]
   },
   {
    "name": "envoy.bootstrap.internal_listener",
    "category": "envoy.bootstrap",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": [
     "envoy.extensions.bootstrap.internal_listener.v3.InternalListener"
    ]
   },
   {
    "name": "envoy.bootstrap.wasm",
    "category": "envoy.bootstrap",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": [
     "envoy.extensions.wasm.v3.WasmService"
    ]
   },
   {
    "name": "envoy.extensions.network.socket_interface.default_socket_interface",
    "category": "envoy.bootstrap",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": [
     "envoy.extensions.network.socket_interface.v3.DefaultSocketInterface"
    ]
   },
   {
    "name": "envoy.udp_packet_writer.default",
    "category": "envoy.udp_packet_writer",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": [
     "envoy.extensions.udp_packet_writer.v3.UdpDefaultWriterFactory"
    ]
   },
   {
    "name": "envoy.udp_packet_writer.gso",
    "category": "envoy.udp_packet_writer",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": [
     "envoy.extensions.udp_packet_writer.v3.UdpGsoBatchWriterFactory"
    ]
   },
   {
    "name": "envoy.retry_priorities.previous_priorities",
    "category": "envoy.retry_priorities",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": [
     "envoy.extensions.retry.priority.previous_priorities.v3.PreviousPrioritiesConfig"
    ]
   },
   {
    "name": "envoy.filters.thrift.header_to_metadata",
    "category": "envoy.thrift_proxy.filters",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": [
     "envoy.extensions.filters.network.thrift_proxy.filters.header_to_metadata.v3.HeaderToMetadata"
    ]
   },
   {
    "name": "envoy.filters.thrift.payload_to_metadata",
    "category": "envoy.thrift_proxy.filters",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": [
     "envoy.extensions.filters.network.thrift_proxy.filters.payload_to_metadata.v3.PayloadToMetadata"
    ]
   },
   {
    "name": "envoy.filters.thrift.rate_limit",
    "category": "envoy.thrift_proxy.filters",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": [
     "envoy.extensions.filters.network.thrift_proxy.filters.ratelimit.v3.RateLimit"
    ]
   },
   {
    "name": "envoy.filters.thrift.router",
    "category": "envoy.thrift_proxy.filters",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": [
     "envoy.extensions.filters.network.thrift_proxy.router.v3.Router"
    ]
   },
   {
    "name": "envoy.built_in_formatters.http.default",
    "category": "envoy.built_in_formatters.http",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": []
   },
   {
    "name": "envoy.filters.connection_pools.tcp.generic",
    "category": "envoy.upstreams",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": [
     "envoy.extensions.upstreams.tcp.generic.v3.GenericConnectionPoolProto"
    ]
   },
   {
    "name": "envoy.compression.brotli.decompressor",
    "category": "envoy.compression.decompressor",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": [
     "envoy.extensions.compression.brotli.decompressor.v3.Brotli"
    ]
   },
   {
    "name": "envoy.compression.gzip.decompressor",
    "category": "envoy.compression.decompressor",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": [
     "envoy.extensions.compression.gzip.decompressor.v3.Gzip"
    ]
   },
   {
    "name": "envoy.compression.zstd.decompressor",
    "category": "envoy.compression.decompressor",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": [
     "envoy.extensions.compression.zstd.decompressor.v3.Zstd"
    ]
   },
   {
    "name": "envoy.http.injected_credentials.generic",
    "category": "envoy.http.injected_credentials",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": [
     "envoy.extensions.http.injected_credentials.generic.v3.Generic"
    ]
   },
   {
    "name": "envoy.http.injected_credentials.oauth2",
    "category": "envoy.http.injected_credentials",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": [
     "envoy.extensions.http.injected_credentials.oauth2.v3.OAuth2"
    ]
   },
   {
    "name": "envoy.matching.custom_matchers.trie_matcher",
    "category": "envoy.matching.network.custom_matchers",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": [
     "xds.type.matcher.v3.IPMatcher"
    ]
   },
   {
    "name": "envoy.load_balancing_policies.client_side_weighted_round_robin",
    "category": "envoy.load_balancing_policies",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": [
     "envoy.extensions.load_balancing_policies.client_side_weighted_round_robin.v3.ClientSideWeightedRoundRobin"
    ]
   },
   {
    "name": "envoy.load_balancing_policies.cluster_provided",
    "category": "envoy.load_balancing_policies",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": [
     "envoy.extensions.load_balancing_policies.cluster_provided.v3.ClusterProvided"
    ]
   },
   {
    "name": "envoy.load_balancing_policies.least_request",
    "category": "envoy.load_balancing_policies",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": [
     "envoy.extensions.load_balancing_policies.least_request.v3.LeastRequest"
    ]
   },
   {
    "name": "envoy.load_balancing_policies.maglev",
    "category": "envoy.load_balancing_policies",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": [
     "envoy.extensions.load_balancing_policies.maglev.v3.Maglev"
    ]
   },
   {
    "name": "envoy.load_balancing_policies.random",
    "category": "envoy.load_balancing_policies",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": [
     "envoy.extensions.load_balancing_policies.random.v3.Random"
    ]
   },
   {
    "name": "envoy.load_balancing_policies.ring_hash",
    "category": "envoy.load_balancing_policies",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": [
     "envoy.extensions.load_balancing_policies.ring_hash.v3.RingHash"
    ]
   },
   {
    "name": "envoy.load_balancing_policies.round_robin",
    "category": "envoy.load_balancing_policies",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": [
     "envoy.extensions.load_balancing_policies.round_robin.v3.RoundRobin"
    ]
   },
   {
    "name": "envoy.load_balancing_policies.subset",
    "category": "envoy.load_balancing_policies",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": [
     "envoy.extensions.load_balancing_policies.subset.v3.Subset"
    ]
   },
   {
    "name": "envoy.request_id.uuid",
    "category": "envoy.request_id",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": [
     "envoy.extensions.request_id.uuid.v3.UuidRequestIdConfig"
    ]
   },
   {
    "name": "envoy.built_in_formatters.generic_poxy.default",
    "category": "envoy.built_in_formatters.generic_proxy",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": []
   },
   {
    "name": "envoy.formatter.cel",
    "category": "envoy.formatter",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": [
     "envoy.extensions.formatter.cel.v3.Cel"
    ]
   },
   {
    "name": "envoy.formatter.metadata",
    "category": "envoy.formatter",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": [
     "envoy.extensions.formatter.metadata.v3.Metadata"
    ]
   },
   {
    "name": "envoy.formatter.req_without_query",
    "category": "envoy.formatter",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": [
     "envoy.extensions.formatter.req_without_query.v3.ReqWithoutQuery"
    ]
   },
   {
    "name": "envoy.quic.deterministic_connection_id_generator",
    "category": "envoy.quic.connection_id_generator",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": [
     "envoy.extensions.quic.connection_id_generator.v3.DeterministicConnectionIdGeneratorConfig"
    ]
   },
   {
    "name": "envoy.config_mux.delta_grpc_mux_factory",
    "category": "envoy.config_mux",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": []
   },
   {
    "name": "envoy.config_mux.grpc_mux_factory",
    "category": "envoy.config_mux",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": []
   },
   {
    "name": "envoy.config_mux.new_grpc_mux_factory",
    "category": "envoy.config_mux",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": []
   },
   {
    "name": "envoy.config_mux.sotw_grpc_mux_factory",
    "category": "envoy.config_mux",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": []
   },
   {
    "name": "envoy.wasm.runtime.null",
    "category": "envoy.wasm.runtime",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": []
   },
   {
    "name": "envoy.wasm.runtime.v8",
    "category": "envoy.wasm.runtime",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": []
   },
   {
    "name": "envoy.filters.generic.router",
    "category": "envoy.generic_proxy.filters",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": [
     "envoy.extensions.filters.network.generic_proxy.router.v3.Router"
    ]
   },
   {
    "name": "envoy.quic.crypto_stream.server.quiche",
    "category": "envoy.quic.server.crypto_stream",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": [
     "envoy.extensions.quic.crypto_stream.v3.CryptoServerStreamConfig"
    ]
   },
   {
    "name": "envoy.quic.proof_source.filter_chain",
    "category": "envoy.quic.proof_source",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": [
     "envoy.extensions.quic.proof_source.v3.ProofSourceConfig"
    ]
   },
   {
    "name": "envoy.built_in_formatters.stream_info.default",
    "category": "envoy.built_in_formatters.stream_info",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": []
   },
   {
    "name": "envoy.matching.generic_proxy.input.host",
    "category": "envoy.matching.generic_proxy_request_input.input",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": [
     "envoy.extensions.filters.network.generic_proxy.matcher.v3.HostMatchInput"
    ]
   },
   {
    "name": "envoy.matching.generic_proxy.input.method",
    "category": "envoy.matching.generic_proxy_request_input.input",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": [
     "envoy.extensions.filters.network.generic_proxy.matcher.v3.MethodMatchInput"
    ]
   },
   {
    "name": "envoy.matching.generic_proxy.input.path",
    "category": "envoy.matching.generic_proxy_request_input.input",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": [
     "envoy.extensions.filters.network.generic_proxy.matcher.v3.PathMatchInput"
    ]
   },
   {
    "name": "envoy.matching.generic_proxy.input.property",
    "category": "envoy.matching.generic_proxy_request_input.input",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": [
     "envoy.extensions.filters.network.generic_proxy.matcher.v3.PropertyMatchInput"
    ]
   },
   {
    "name": "envoy.matching.generic_proxy.input.request",
    "category": "envoy.matching.generic_proxy_request_input.input",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": [
     "envoy.extensions.filters.network.generic_proxy.matcher.v3.RequestMatchInput"
    ]
   },
   {
    "name": "envoy.matching.generic_proxy.input.service",
    "category": "envoy.matching.generic_proxy_request_input.input",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": [
     "envoy.extensions.filters.network.generic_proxy.matcher.v3.ServiceMatchInput"
    ]
   },
   {
    "name": "envoy.filters.dubbo.router",
    "category": "envoy.dubbo_proxy.filters",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": [
     "envoy.extensions.filters.network.dubbo_proxy.router.v3.Router"
    ]
   },
   {
    "name": "quic.server_preferred_address.datasource",
    "category": "envoy.quic.server_preferred_address",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": [
     "envoy.extensions.quic.server_preferred_address.v3.DataSourceServerPreferredAddressConfig"
    ]
   },
   {
    "name": "quic.server_preferred_address.fixed",
    "category": "envoy.quic.server_preferred_address",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": [
     "envoy.extensions.quic.server_preferred_address.v3.FixedServerPreferredAddressConfig"
    ]
   },
   {
    "name": "envoy.access_loggers.extension_filters.cel",
    "category": "envoy.access_loggers.extension_filters",
    "type_descriptor": "",
    "disabled": false,
    "type_urls": [
     "envoy.extensions.access_loggers.filters.cel.v3.ExpressionFilter"
    ]
   }
  ],
  "client_features": [],
  "listening_addresses": [],
  "dynamic_parameters": {}
 }
}
[Wed Jan 29 04:32:37] [vagrant@ubuntu-jammy] [/shared-with-host/envoy-gateway]#
[Wed Jan 29 04:32:37] [vagrant@ubuntu-jammy] [/shared-with-host/envoy-gateway]#
curl localhost:19000/server_info > before_httproute/server_info.log
Handling connection for 19000
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
100 97829    0 97829    0     0  8501k      0 --:--:-- --:--:-- --:--:-- 10.3M
[Wed Jan 29 04:33:07] [vagrant@ubuntu-jammy] [/shared-with-host/envoy-gateway]#
curl localhost:19000/stats/prometheus | head
Handling connection for 19000
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0# TYPE envoy_cluster_assignment_stale counter
envoy_cluster_assignment_stale{envoy_cluster_name="prometheus_stats"} 0
envoy_cluster_assignment_stale{envoy_cluster_name="wasm_cluster"} 0
envoy_cluster_assignment_stale{envoy_cluster_name="xds_cluster"} 0
# TYPE envoy_cluster_assignment_timeout_received counter
envoy_cluster_assignment_timeout_received{envoy_cluster_name="prometheus_stats"} 0
envoy_cluster_assignment_timeout_received{envoy_cluster_name="wasm_cluster"} 0
envoy_cluster_assignment_timeout_received{envoy_cluster_name="xds_cluster"} 0
# TYPE envoy_cluster_assignment_use_cached counter
envoy_cluster_assignment_use_cached{envoy_cluster_name="prometheus_stats"} 0
100 65320    0 65320    0     0  5184k      0 --:--:-- --:--:-- --:--:-- 5799k
curl: (23) Failure writing output to destination
[Wed Jan 29 05:21:20] [vagrant@ubuntu-jammy] [/shared-with-host/envoy-gateway]#
curl localhost:19000/stats | head
  % THandling connection for 19000
otal    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
1cluster_manager.cds.version_text: ""0      0 --:--:-- --:--:-- --:--:--     0
control_plane.identifier: ""
http.http-10080.rds.default/eg/http.version_text: "1"
listener_manager.lds.version_text: "1"
sds.xds_certificate.version_text: ""
sds.xds_trusted_ca.version_text: ""
cluster.prometheus_stats.assignment_stale: 0
cluster.prometheus_stats.assignment_timeout_received: 0
cluster.prometheus_stats.assignment_use_cached: 0
cluster.prometheus_stats.bind_errors: 0
00 41549    0 41549    0     0   607k      0 --:--:-- --:--:-- --:--:--  614k
curl: (23) Failed writing body
[Wed Jan 29 05:21:30] [vagrant@ubuntu-jammy] [/shared-with-host/envoy-gateway]#
curl localhost:19000/stats > before_httproute/stats.log
Handling connection for 19000
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
100 41559    0 41559    0     0  3465k      0 --:--:-- --:--:-- --:--:-- 3689k
[Wed Jan 29 05:21:48] [vagrant@ubuntu-jammy] [/shared-with-host/envoy-gateway]#
[Wed Jan 29 05:21:48] [vagrant@ubuntu-jammy] [/shared-with-host/envoy-gateway]#
curl -s localhost:19000/stats > before_httproute/stats.log
Handling connection for 19000
[Wed Jan 29 05:22:19] [vagrant@ubuntu-jammy] [/shared-with-host/envoy-gateway]#
curl -s localhost:19000/stats/prometheus > before_httproute/stats-prometheus.log
Handling connection for 19000
[Wed Jan 29 05:22:47] [vagrant@ubuntu-jammy] [/shared-with-host/envoy-gateway]#
nano capture-envoy-data.sh
[Wed Jan 29 05:31:40] [vagrant@ubuntu-jammy] [/shared-with-host/envoy-gateway]#
chmod +x capture-envoy-data.sh
[Wed Jan 29 05:31:44] [vagrant@ubuntu-jammy] [/shared-with-host/envoy-gateway]#
vim capture-envoy-data.sh
[Wed Jan 29 05:31:50] [vagrant@ubuntu-jammy] [/shared-with-host/envoy-gateway]#
ll
total 28K
-rw-rw-r-- 1 vagrant vagrant 1.8K Jan 24 12:32 quickstart.yaml
-rw-rw-r-- 1 vagrant vagrant  478 Jan 27 10:16 disable-prometheus.yaml
-rw-rw-r-- 1 vagrant vagrant  290 Jan 29 03:34 kind-config.yaml
-rw-rw-r-- 1 vagrant vagrant  326 Jan 29 03:36 Gateway.yaml
-rw-rw-r-- 1 vagrant vagrant 1.5K Jan 29 03:38 backend-http-service.yaml
drwxrwxr-x 1 vagrant vagrant 4.0K Jan 29 05:22 bk-1
-rwxrwxr-x 1 vagrant vagrant 1.1K Jan 29 05:31 capture-envoy-data.sh
[Wed Jan 29 05:31:51] [vagrant@ubuntu-jammy] [/shared-with-host/envoy-gateway]#
./capture-envoy-data.sh
Error: Directory name not provided.
Usage: ./capture-envoy-data.sh <directory_name>
[Wed Jan 29 05:31:53] [vagrant@ubuntu-jammy] [/shared-with-host/envoy-gateway]#
./capture-envoy-data.sh before
Handling connection for 19000
Handling connection for 19000
Handling connection for 19000
Handling connection for 19000
Handling connection for 19000
Handling connection for 19000
Handling connection for 19000
Handling connection for 19000
Data successfully saved in directory: before
[Wed Jan 29 05:32:33] [vagrant@ubuntu-jammy] [/shared-with-host/envoy-gateway]#
ll before/
total 388K
-rw-rw-r-- 1 vagrant vagrant 100K Jan 29 05:32 config_dump.log
-rw-rw-r-- 1 vagrant vagrant 4.1K Jan 29 05:32 clusters.log
-rw-rw-r-- 1 vagrant vagrant 3.5K Jan 29 05:32 clusters.json
-rw-rw-r-- 1 vagrant vagrant  350 Jan 29 05:32 listeners.json
-rw-rw-r-- 1 vagrant vagrant   86 Jan 29 05:32 listeners.log
-rw-rw-r-- 1 vagrant vagrant  96K Jan 29 05:32 server_info.log
-rw-rw-r-- 1 vagrant vagrant  41K Jan 29 05:32 stats.log
-rw-rw-r-- 1 vagrant vagrant 128K Jan 29 05:32 stats-prometheus.log
[Wed Jan 29 05:32:38] [vagrant@ubuntu-jammy] [/shared-with-host/envoy-gateway]#
./capture-envoy-data.sh before
Error: Directory 'before' already exists.
[Wed Jan 29 05:32:39] [vagrant@ubuntu-jammy] [/shared-with-host/envoy-gateway]#
[Wed Jan 29 05:32:39] [vagrant@ubuntu-jammy] [/shared-with-host/envoy-gateway]#
ll
total 28K
-rw-rw-r-- 1 vagrant vagrant 1.8K Jan 24 12:32 quickstart.yaml
-rw-rw-r-- 1 vagrant vagrant  478 Jan 27 10:16 disable-prometheus.yaml
-rw-rw-r-- 1 vagrant vagrant  290 Jan 29 03:34 kind-config.yaml
-rw-rw-r-- 1 vagrant vagrant  326 Jan 29 03:36 Gateway.yaml
-rw-rw-r-- 1 vagrant vagrant 1.5K Jan 29 03:38 backend-http-service.yaml
-rwxrwxr-x 1 vagrant vagrant 1.7K Jan 29 05:47 capture-envoy-data.sh
drwxrwxr-x 1 vagrant vagrant 4.0K Jan 29 05:51 before_httproute
[Wed Jan 29 05:51:27] [vagrant@ubuntu-jammy] [/shared-with-host/envoy-gateway]#
./capture-envoy-data.sh --dir before_httproute
Error: Directory 'before_httproute' already exists.
[Wed Jan 29 05:51:28] [vagrant@ubuntu-jammy] [/shared-with-host/envoy-gateway]#
rm -rf before_httproute/
[Wed Jan 29 05:51:33] [vagrant@ubuntu-jammy] [/shared-with-host/envoy-gateway]#
./capture-envoy-data.sh --dir before_httproute
Handling connection for 19000
Handling connection for 19000
Handling connection for 19000
Handling connection for 19000
Handling connection for 19000
Handling connection for 19000
Handling connection for 19000
Handling connection for 19000
Data successfully saved in directory: before_httproute
[Wed Jan 29 05:51:35] [vagrant@ubuntu-jammy] [/shared-with-host/envoy-gateway]#
ll before_httproute/
total 388K
-rw-rw-r-- 1 vagrant vagrant 100K Jan 29 05:51 config_dump.log
-rw-rw-r-- 1 vagrant vagrant 4.1K Jan 29 05:51 clusters.log
-rw-rw-r-- 1 vagrant vagrant 3.5K Jan 29 05:51 clusters.json
-rw-rw-r-- 1 vagrant vagrant  350 Jan 29 05:51 listeners.json
-rw-rw-r-- 1 vagrant vagrant   86 Jan 29 05:51 listeners.log
-rw-rw-r-- 1 vagrant vagrant  96K Jan 29 05:51 server_info.log
-rw-rw-r-- 1 vagrant vagrant  41K Jan 29 05:51 stats.log
-rw-rw-r-- 1 vagrant vagrant 128K Jan 29 05:51 stats-prometheus.log
[Wed Jan 29 05:51:38] [vagrant@ubuntu-jammy] [/shared-with-host/envoy-gateway]#
vim before_httproute/clusters.json
[Wed Jan 29 05:51:50] [vagrant@ubuntu-jammy] [/shared-with-host/envoy-gateway]#
[Wed Jan 29 05:51:50] [vagrant@ubuntu-jammy] [/shared-with-host/envoy-gateway]#
ll
total 28K
-rw-rw-r-- 1 vagrant vagrant 1.8K Jan 24 12:32 quickstart.yaml
-rw-rw-r-- 1 vagrant vagrant  478 Jan 27 10:16 disable-prometheus.yaml
-rw-rw-r-- 1 vagrant vagrant  290 Jan 29 03:34 kind-config.yaml
-rw-rw-r-- 1 vagrant vagrant  326 Jan 29 03:36 Gateway.yaml
-rw-rw-r-- 1 vagrant vagrant 1.5K Jan 29 03:38 backend-http-service.yaml
-rwxrwxr-x 1 vagrant vagrant 1.7K Jan 29 05:47 capture-envoy-data.sh
drwxrwxr-x 1 vagrant vagrant 4.0K Jan 29 05:51 before_httproute
[Wed Jan 29 05:52:57] [vagrant@ubuntu-jammy] [/shared-with-host/envoy-gateway]#
vim backend-http-service.yaml
[Wed Jan 29 05:53:21] [vagrant@ubuntu-jammy] [/shared-with-host/envoy-gateway]#
# AT: creating backend-http service and HTTPRoute
[Wed Jan 29 05:53:58] [vagrant@ubuntu-jammy] [/shared-with-host/envoy-gateway]#
k apply -f backend-http-service.yaml
serviceaccount/backend-http created
service/backend-http created
deployment.apps/backend-http created
httproute.gateway.networking.k8s.io/backend-http created
[Wed Jan 29 05:54:10] [vagrant@ubuntu-jammy] [/shared-with-host/envoy-gateway]#
export ENVOY_SERVICE=$(kubectl get svc -n envoy-gateway-system --selector=gateway.envoyproxy.io/owning-gateway-namespace=default,gateway.envoyproxy.io/owning-gateway-name=eg -o jsonpath='{.items[0].metadata.name}')
[Wed Jan 29 05:54:25] [vagrant@ubuntu-jammy] [/shared-with-host/envoy-gateway]#
echo $ENVOY_SERVICE
envoy-default-eg-e41e7b31
[Wed Jan 29 05:54:31] [vagrant@ubuntu-jammy] [/shared-with-host/envoy-gateway]#
k get service -n envoy-gateway-system
NAME                        TYPE           CLUSTER-IP     EXTERNAL-IP   PORT(S)                                   AGE
envoy-default-eg-e41e7b31   LoadBalancer   10.96.17.150   <pending>     80:30278/TCP                              131m
envoy-gateway               ClusterIP      10.96.99.193   <none>        18000/TCP,18001/TCP,18002/TCP,19001/TCP   134m
[Wed Jan 29 05:54:47] [vagrant@ubuntu-jammy] [/shared-with-host/envoy-gateway]#
[200~kubectl -n envoy-gateway-system port-forward service/${ENVOY_SERVICE} 8888:80 &
[2] 52014
[Wed Jan 29 05:55:07] [vagrant@ubuntu-jammy] [/shared-with-host/envoy-gateway]#
~[200~kubectl: command not found

-bash: /home/vagrant: Is a directory
[2]+  Exit 127                [200~kubectl -n envoy-gateway-system port-forward service/${ENVOY_SERVICE} 8888:80
[Wed Jan 29 05:55:11] [vagrant@ubuntu-jammy] [/shared-with-host/envoy-gateway]#
#kubectl -n envoy-gateway-system port-forward service/${ENVOY_SERVICE} 8888:80 &
[Wed Jan 29 05:55:16] [vagrant@ubuntu-jammy] [/shared-with-host/envoy-gateway]#
jobs
[1]+  Running                 kubectl port-forward pod/$ENVOY_POD_NAME -n envoy-gateway-system 19000:19000 &
[Wed Jan 29 05:55:18] [vagrant@ubuntu-jammy] [/shared-with-host/envoy-gateway]#
kubectl -n envoy-gateway-system port-forward service/${ENVOY_SERVICE} 8888:80 &
[2] 52100
[Wed Jan 29 05:55:29] [vagrant@ubuntu-jammy] [/shared-with-host/envoy-gateway]#
Forwarding from 127.0.0.1:8888 -> 10080
Forwarding from [::1]:8888 -> 10080
[Wed Jan 29 05:55:29] [vagrant@ubuntu-jammy] [/shared-with-host/envoy-gateway]#
[Wed Jan 29 05:55:29] [vagrant@ubuntu-jammy] [/shared-with-host/envoy-gateway]#
curl --verbose --header "Host: www.example.com" http://localhost:8888/get
*   Trying 127.0.0.1:8888...
Handling connection for 8888
* Connected to localhost (127.0.0.1) port 8888 (#0)
> GET /get HTTP/1.1
> Host: www.example.com
> User-Agent: curl/7.81.0
> Accept: */*
>
* Mark bundle as not supporting multiuse
< HTTP/1.1 200 OK
< content-type: application/json
< x-content-type-options: nosniff
< date: Wed, 29 Jan 2025 05:55:58 GMT
< content-length: 460
<
{
 "path": "/get",
 "host": "www.example.com",
 "method": "GET",
 "proto": "HTTP/1.1",
 "headers": {
  "Accept": [
   "*/*"
  ],
  "User-Agent": [
   "curl/7.81.0"
  ],
  "X-Envoy-Internal": [
   "true"
  ],
  "X-Forwarded-For": [
   "10.244.2.2"
  ],
  "X-Forwarded-Proto": [
   "http"
  ],
  "X-Request-Id": [
   "58f14adb-a186-47ca-91a9-32419499abb2"
  ]
 },
 "namespace": "default",
 "ingress": "",
 "service": "",
 "pod": "backend-http-7c877f78d9-dns6d"
* Connection #0 to host localhost left intact
}[Wed Jan 29 05:55:58] [vagrant@ubuntu-jammy] [/shared-with-host/envoy-gateway]#
[Wed Jan 29 05:56:13] [vagrant@ubuntu-jammy] [/shared-with-host/envoy-gateway]#
[Wed Jan 29 05:56:13] [vagrant@ubuntu-jammy] [/shared-with-host/envoy-gateway]#
./capture-envoy-data.sh --dir after_httproute
Handling connection for 19000
Handling connection for 19000
Handling connection for 19000
Handling connection for 19000
Handling connection for 19000
Handling connection for 19000
Handling connection for 19000
Handling connection for 19000
Data successfully saved in directory: after_httproute
[Wed Jan 29 05:56:21] [vagrant@ubuntu-jammy] [/shared-with-host/envoy-gateway]#
[Wed Jan 29 05:56:22] [vagrant@ubuntu-jammy] [/shared-with-host/envoy-gateway]#
[Wed Jan 29 06:03:33] [vagrant@ubuntu-jammy] [/shared-with-host/envoy-gateway]#
[Wed Jan 29 06:03:33] [vagrant@ubuntu-jammy] [/shared-with-host/envoy-gateway]#
[Wed Jan 29 06:03:33] [vagrant@ubuntu-jammy] [/shared-with-host/envoy-gateway]#
[Wed Jan 29 06:05:55] [vagrant@ubuntu-jammy] [/shared-with-host/envoy-gateway]#
k get  gc
NAME   CONTROLLER                                      ACCEPTED   AGE
eg     gateway.envoyproxy.io/gatewayclass-controller   True       142m
[Wed Jan 29 06:05:58] [vagrant@ubuntu-jammy] [/shared-with-host/envoy-gateway]#
k get  gc -o yaml
apiVersion: v1
items:
- apiVersion: gateway.networking.k8s.io/v1
  kind: GatewayClass
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"gateway.networking.k8s.io/v1","kind":"GatewayClass","metadata":{"annotations":{},"name":"eg"},"spec":{"controllerName":"gateway.envoyproxy.io/gatewayclass-controller"}}
    creationTimestamp: "2025-01-29T03:43:06Z"
    finalizers:
    - gateway-exists-finalizer.gateway.networking.k8s.io
    generation: 1
    name: eg
    resourceVersion: "1480"
    uid: e898f3b3-097a-4afc-8b66-17b64f81dc78
  spec:
    controllerName: gateway.envoyproxy.io/gatewayclass-controller
  status:
    conditions:
    - lastTransitionTime: "2025-01-29T03:43:06Z"
      message: Valid GatewayClass
      observedGeneration: 1
      reason: Accepted
      status: "True"
      type: Accepted
kind: List
metadata:
  resourceVersion: ""
[Wed Jan 29 06:06:06] [vagrant@ubuntu-jammy] [/shared-with-host/envoy-gateway]#
k get service -n envoy-gateway-system
[Wed Jan 29 06:06:06] [vagrant@ubuntu-jammy] [/shared-with-host/envoy-gateway]#
k get service -n envoy-gateway-system
NAME                        TYPE           CLUSTER-IP     EXTERNAL-IP   PORT(S)                                   AGE
envoy-default-eg-e41e7b31   LoadBalancer   10.96.17.150   <pending>     80:30278/TCP                              3h28m
envoy-gateway               ClusterIP      10.96.99.193   <none>        18000/TCP,18001/TCP,18002/TCP,19001/TCP   3h31m
[Wed Jan 29 07:11:32] [vagrant@ubuntu-jammy] [/shared-with-host/envoy-gateway]#
k get pod,service -n envoy-gateway-system
NAME                                             READY   STATUS    RESTARTS   AGE
pod/envoy-default-eg-e41e7b31-594f564cb9-xlnjv   2/2     Running   0          3h28m
pod/envoy-gateway-5b47459c4d-j5cz8               1/1     Running   0          3h32m

NAME                                TYPE           CLUSTER-IP     EXTERNAL-IP   PORT(S)                                   AGE
service/envoy-default-eg-e41e7b31   LoadBalancer   10.96.17.150   <pending>     80:30278/TCP                              3h28m
service/envoy-gateway               ClusterIP      10.96.99.193   <none>        18000/TCP,18001/TCP,18002/TCP,19001/TCP   3h32m
[Wed Jan 29 07:11:51] [vagrant@ubuntu-jammy] [/shared-with-host/envoy-gateway]#
[Wed Jan 29 07:25:47] [vagrant@ubuntu-jammy] [/shared-with-host/envoy-gateway]#
kga -A
kubectl get all
NAMESPACE              NAME                                               READY   STATUS    RESTARTS   AGE
default                pod/backend-http-7c877f78d9-dns6d                  1/1     Running   0          109m
envoy-gateway-system   pod/envoy-default-eg-e41e7b31-594f564cb9-xlnjv     2/2     Running   0          4h
envoy-gateway-system   pod/envoy-gateway-5b47459c4d-j5cz8                 1/1     Running   0          4h4m
kube-system            pod/coredns-6f6b679f8f-gc7c9                       1/1     Running   0          4h8m
kube-system            pod/coredns-6f6b679f8f-sfqqt                       1/1     Running   0          4h8m
kube-system            pod/etcd-env-gw-control-plane                      1/1     Running   0          4h9m
kube-system            pod/kindnet-hdc5v                                  1/1     Running   0          4h8m
kube-system            pod/kindnet-q7pql                                  1/1     Running   0          4h8m
kube-system            pod/kindnet-rtdh6                                  1/1     Running   0          4h8m
kube-system            pod/kube-apiserver-env-gw-control-plane            1/1     Running   0          4h9m
kube-system            pod/kube-controller-manager-env-gw-control-plane   1/1     Running   0          4h9m
kube-system            pod/kube-proxy-58xzt                               1/1     Running   0          4h8m
kube-system            pod/kube-proxy-cd454                               1/1     Running   0          4h8m
kube-system            pod/kube-proxy-d2mxb                               1/1     Running   0          4h8m
kube-system            pod/kube-scheduler-env-gw-control-plane            1/1     Running   0          4h9m
local-path-storage     pod/local-path-provisioner-57c5987fd4-8v99d        1/1     Running   0          4h8m

NAMESPACE              NAME                                TYPE           CLUSTER-IP      EXTERNAL-IP   PORT(S)                                   AGE
default                service/backend-http                ClusterIP      10.96.148.248   <none>        3000/TCP                                  109m
default                service/kubernetes                  ClusterIP      10.96.0.1       <none>        443/TCP                                   4h9m
envoy-gateway-system   service/envoy-default-eg-e41e7b31   LoadBalancer   10.96.17.150    <pending>     80:30278/TCP                              4h
envoy-gateway-system   service/envoy-gateway               ClusterIP      10.96.99.193    <none>        18000/TCP,18001/TCP,18002/TCP,19001/TCP   4h4m
kube-system            service/kube-dns                    ClusterIP      10.96.0.10      <none>        53/UDP,53/TCP,9153/TCP                    4h9m

NAMESPACE     NAME                        DESIRED   CURRENT   READY   UP-TO-DATE   AVAILABLE   NODE SELECTOR            AGE
kube-system   daemonset.apps/kindnet      3         3         3       3            3           kubernetes.io/os=linux   4h9m
kube-system   daemonset.apps/kube-proxy   3         3         3       3            3           kubernetes.io/os=linux   4h9m

NAMESPACE              NAME                                        READY   UP-TO-DATE   AVAILABLE   AGE
default                deployment.apps/backend-http                1/1     1            1           109m
envoy-gateway-system   deployment.apps/envoy-default-eg-e41e7b31   1/1     1            1           4h
envoy-gateway-system   deployment.apps/envoy-gateway               1/1     1            1           4h4m
kube-system            deployment.apps/coredns                     2/2     2            2           4h9m
local-path-storage     deployment.apps/local-path-provisioner      1/1     1            1           4h8m

NAMESPACE              NAME                                                   DESIRED   CURRENT   READY   AGE
default                replicaset.apps/backend-http-7c877f78d9                1         1         1       109m
envoy-gateway-system   replicaset.apps/envoy-default-eg-e41e7b31-594f564cb9   1         1         1       4h
envoy-gateway-system   replicaset.apps/envoy-gateway-5b47459c4d               1         1         1       4h4m
kube-system            replicaset.apps/coredns-6f6b679f8f                     2         2         2       4h8m
local-path-storage     replicaset.apps/local-path-provisioner-57c5987fd4      1         1         1       4h8m
[Wed Jan 29 07:44:05] [vagrant@ubuntu-jammy] [/shared-with-host/envoy-gateway]#
[Wed Jan 29 07:44:06] [vagrant@ubuntu-jammy] [/shared-with-host/envoy-gateway]#
ls
HTTPRoute  capture-envoy-data.sh  disable-prometheus.yaml  kind-config.yaml  quickstart.yaml
[Wed Jan 29 07:46:14] [vagrant@ubuntu-jammy] [/shared-with-host/envoy-gateway]#
[Wed Jan 29 07:46:14] [vagrant@ubuntu-jammy] [/shared-with-host/envoy-gateway]#
curl localhost:19000/stats/prometheus  | grep "default/backend/rule/0"
  % Total    % ReceivedHandling connection for 19000
 % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
100  156k    0  156k    0     0  14.0M      0 --:--:-- --:--:-- --:--:-- 15.2M
[Wed Jan 29 07:49:00] [vagrant@ubuntu-jammy] [/shared-with-host/envoy-gateway]#
curl localhost:19000/stats/prometheus  | grep "default/backend-hhtp/rule/0"
Handling connection for 19000
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
100  156k    0  156k    0     0  12.0M      0 --:--:-- --:--:-- --:--:-- 12.7M
[Wed Jan 29 07:49:04] [vagrant@ubuntu-jammy] [/shared-with-host/envoy-gateway]#
curl -s localhost:19000/stats/prometheus  | grep "default/backend-http/rule/0"
Handling connection for 19000
envoy_cluster_assignment_stale{envoy_cluster_name="httproute/default/backend-http/rule/0"} 0
envoy_cluster_assignment_timeout_received{envoy_cluster_name="httproute/default/backend-http/rule/0"} 0
envoy_cluster_assignment_use_cached{envoy_cluster_name="httproute/default/backend-http/rule/0"} 0
envoy_cluster_bind_errors{envoy_cluster_name="httproute/default/backend-http/rule/0"} 0
envoy_cluster_default_total_match_count{envoy_cluster_name="httproute/default/backend-http/rule/0"} 1
envoy_cluster_http1_dropped_headers_with_underscores{envoy_cluster_name="httproute/default/backend-http/rule/0"} 0
envoy_cluster_http1_metadata_not_supported_error{envoy_cluster_name="httproute/default/backend-http/rule/0"} 0
envoy_cluster_http1_requests_rejected_with_underscores_in_headers{envoy_cluster_name="httproute/default/backend-http/rule/0"} 0
envoy_cluster_http1_response_flood{envoy_cluster_name="httproute/default/backend-http/rule/0"} 0
envoy_cluster_init_fetch_timeout{envoy_cluster_name="httproute/default/backend-http/rule/0"} 0
envoy_cluster_internal_upstream_rq{envoy_response_code="200",envoy_cluster_name="httproute/default/backend-http/rule/0"} 1
envoy_cluster_internal_upstream_rq_completed{envoy_cluster_name="httproute/default/backend-http/rule/0"} 1
envoy_cluster_internal_upstream_rq_xx{envoy_response_code_class="2",envoy_cluster_name="httproute/default/backend-http/rule/0"} 1
envoy_cluster_lb_healthy_panic{envoy_cluster_name="httproute/default/backend-http/rule/0"} 0
envoy_cluster_lb_local_cluster_not_ok{envoy_cluster_name="httproute/default/backend-http/rule/0"} 0
envoy_cluster_lb_recalculate_zone_structures{envoy_cluster_name="httproute/default/backend-http/rule/0"} 0
envoy_cluster_lb_subsets_created{envoy_cluster_name="httproute/default/backend-http/rule/0"} 0
envoy_cluster_lb_subsets_fallback{envoy_cluster_name="httproute/default/backend-http/rule/0"} 0
envoy_cluster_lb_subsets_fallback_panic{envoy_cluster_name="httproute/default/backend-http/rule/0"} 0
envoy_cluster_lb_subsets_removed{envoy_cluster_name="httproute/default/backend-http/rule/0"} 0
envoy_cluster_lb_subsets_selected{envoy_cluster_name="httproute/default/backend-http/rule/0"} 0
envoy_cluster_lb_zone_cluster_too_small{envoy_cluster_name="httproute/default/backend-http/rule/0"} 0
envoy_cluster_lb_zone_no_capacity_left{envoy_cluster_name="httproute/default/backend-http/rule/0"} 0
envoy_cluster_lb_zone_number_differs{envoy_cluster_name="httproute/default/backend-http/rule/0"} 0
envoy_cluster_lb_zone_routing_all_directly{envoy_cluster_name="httproute/default/backend-http/rule/0"} 0
envoy_cluster_lb_zone_routing_cross_zone{envoy_cluster_name="httproute/default/backend-http/rule/0"} 0
envoy_cluster_lb_zone_routing_sampled{envoy_cluster_name="httproute/default/backend-http/rule/0"} 0
envoy_cluster_membership_change{envoy_cluster_name="httproute/default/backend-http/rule/0"} 1
envoy_cluster_original_dst_host_invalid{envoy_cluster_name="httproute/default/backend-http/rule/0"} 0
envoy_cluster_outlier_detection_ejections_consecutive_5xx{envoy_cluster_name="httproute/default/backend-http/rule/0"} 0
envoy_cluster_outlier_detection_ejections_detected_consecutive_5xx{envoy_cluster_name="httproute/default/backend-http/rule/0"} 0
envoy_cluster_outlier_detection_ejections_detected_consecutive_gateway_failure{envoy_cluster_name="httproute/default/backend-http/rule/0"} 0
envoy_cluster_outlier_detection_ejections_detected_consecutive_local_origin_failure{envoy_cluster_name="httproute/default/backend-http/rule/0"} 0
envoy_cluster_outlier_detection_ejections_detected_failure_percentage{envoy_cluster_name="httproute/default/backend-http/rule/0"} 0
envoy_cluster_outlier_detection_ejections_detected_local_origin_failure_percentage{envoy_cluster_name="httproute/default/backend-http/rule/0"} 0
envoy_cluster_outlier_detection_ejections_detected_local_origin_success_rate{envoy_cluster_name="httproute/default/backend-http/rule/0"} 0
envoy_cluster_outlier_detection_ejections_detected_success_rate{envoy_cluster_name="httproute/default/backend-http/rule/0"} 0
envoy_cluster_outlier_detection_ejections_enforced_consecutive_5xx{envoy_cluster_name="httproute/default/backend-http/rule/0"} 0
envoy_cluster_outlier_detection_ejections_enforced_consecutive_gateway_failure{envoy_cluster_name="httproute/default/backend-http/rule/0"} 0
envoy_cluster_outlier_detection_ejections_enforced_consecutive_local_origin_failure{envoy_cluster_name="httproute/default/backend-http/rule/0"} 0
envoy_cluster_outlier_detection_ejections_enforced_failure_percentage{envoy_cluster_name="httproute/default/backend-http/rule/0"} 0
envoy_cluster_outlier_detection_ejections_enforced_local_origin_failure_percentage{envoy_cluster_name="httproute/default/backend-http/rule/0"} 0
envoy_cluster_outlier_detection_ejections_enforced_local_origin_success_rate{envoy_cluster_name="httproute/default/backend-http/rule/0"} 0
envoy_cluster_outlier_detection_ejections_enforced_success_rate{envoy_cluster_name="httproute/default/backend-http/rule/0"} 0
envoy_cluster_outlier_detection_ejections_enforced_total{envoy_cluster_name="httproute/default/backend-http/rule/0"} 0
envoy_cluster_outlier_detection_ejections_overflow{envoy_cluster_name="httproute/default/backend-http/rule/0"} 0
envoy_cluster_outlier_detection_ejections_success_rate{envoy_cluster_name="httproute/default/backend-http/rule/0"} 0
envoy_cluster_outlier_detection_ejections_total{envoy_cluster_name="httproute/default/backend-http/rule/0"} 0
envoy_cluster_retry_or_shadow_abandoned{envoy_cluster_name="httproute/default/backend-http/rule/0"} 0
envoy_cluster_update_attempt{envoy_cluster_name="httproute/default/backend-http/rule/0"} 3
envoy_cluster_update_empty{envoy_cluster_name="httproute/default/backend-http/rule/0"} 0
envoy_cluster_update_failure{envoy_cluster_name="httproute/default/backend-http/rule/0"} 0
envoy_cluster_update_no_rebuild{envoy_cluster_name="httproute/default/backend-http/rule/0"} 0
envoy_cluster_update_rejected{envoy_cluster_name="httproute/default/backend-http/rule/0"} 0
envoy_cluster_update_success{envoy_cluster_name="httproute/default/backend-http/rule/0"} 2
envoy_cluster_upstream_cx_close_notify{envoy_cluster_name="httproute/default/backend-http/rule/0"} 0
envoy_cluster_upstream_cx_connect_attempts_exceeded{envoy_cluster_name="httproute/default/backend-http/rule/0"} 0
envoy_cluster_upstream_cx_connect_fail{envoy_cluster_name="httproute/default/backend-http/rule/0"} 0
envoy_cluster_upstream_cx_connect_timeout{envoy_cluster_name="httproute/default/backend-http/rule/0"} 0
envoy_cluster_upstream_cx_connect_with_0_rtt{envoy_cluster_name="httproute/default/backend-http/rule/0"} 0
envoy_cluster_upstream_cx_destroy{envoy_cluster_name="httproute/default/backend-http/rule/0"} 1
envoy_cluster_upstream_cx_destroy_local{envoy_cluster_name="httproute/default/backend-http/rule/0"} 1
envoy_cluster_upstream_cx_destroy_local_with_active_rq{envoy_cluster_name="httproute/default/backend-http/rule/0"} 0
envoy_cluster_upstream_cx_destroy_remote{envoy_cluster_name="httproute/default/backend-http/rule/0"} 0
envoy_cluster_upstream_cx_destroy_remote_with_active_rq{envoy_cluster_name="httproute/default/backend-http/rule/0"} 0
envoy_cluster_upstream_cx_destroy_with_active_rq{envoy_cluster_name="httproute/default/backend-http/rule/0"} 0
envoy_cluster_upstream_cx_http1_total{envoy_cluster_name="httproute/default/backend-http/rule/0"} 1
envoy_cluster_upstream_cx_http2_total{envoy_cluster_name="httproute/default/backend-http/rule/0"} 0
envoy_cluster_upstream_cx_http3_total{envoy_cluster_name="httproute/default/backend-http/rule/0"} 0
envoy_cluster_upstream_cx_idle_timeout{envoy_cluster_name="httproute/default/backend-http/rule/0"} 1
envoy_cluster_upstream_cx_max_duration_reached{envoy_cluster_name="httproute/default/backend-http/rule/0"} 0
envoy_cluster_upstream_cx_max_requests{envoy_cluster_name="httproute/default/backend-http/rule/0"} 0
envoy_cluster_upstream_cx_none_healthy{envoy_cluster_name="httproute/default/backend-http/rule/0"} 0
envoy_cluster_upstream_cx_overflow{envoy_cluster_name="httproute/default/backend-http/rule/0"} 0
envoy_cluster_upstream_cx_pool_overflow{envoy_cluster_name="httproute/default/backend-http/rule/0"} 0
envoy_cluster_upstream_cx_protocol_error{envoy_cluster_name="httproute/default/backend-http/rule/0"} 0
envoy_cluster_upstream_cx_rx_bytes_total{envoy_cluster_name="httproute/default/backend-http/rule/0"} 602
envoy_cluster_upstream_cx_total{envoy_cluster_name="httproute/default/backend-http/rule/0"} 1
envoy_cluster_upstream_cx_tx_bytes_total{envoy_cluster_name="httproute/default/backend-http/rule/0"} 212
envoy_cluster_upstream_flow_control_backed_up_total{envoy_cluster_name="httproute/default/backend-http/rule/0"} 0
envoy_cluster_upstream_flow_control_drained_total{envoy_cluster_name="httproute/default/backend-http/rule/0"} 0
envoy_cluster_upstream_flow_control_paused_reading_total{envoy_cluster_name="httproute/default/backend-http/rule/0"} 0
envoy_cluster_upstream_flow_control_resumed_reading_total{envoy_cluster_name="httproute/default/backend-http/rule/0"} 0
envoy_cluster_upstream_http3_broken{envoy_cluster_name="httproute/default/backend-http/rule/0"} 0
envoy_cluster_upstream_internal_redirect_failed_total{envoy_cluster_name="httproute/default/backend-http/rule/0"} 0
envoy_cluster_upstream_internal_redirect_succeeded_total{envoy_cluster_name="httproute/default/backend-http/rule/0"} 0
envoy_cluster_upstream_rq{envoy_response_code="200",envoy_cluster_name="httproute/default/backend-http/rule/0"} 1
envoy_cluster_upstream_rq_0rtt{envoy_cluster_name="httproute/default/backend-http/rule/0"} 0
envoy_cluster_upstream_rq_cancelled{envoy_cluster_name="httproute/default/backend-http/rule/0"} 0
envoy_cluster_upstream_rq_completed{envoy_cluster_name="httproute/default/backend-http/rule/0"} 1
envoy_cluster_upstream_rq_maintenance_mode{envoy_cluster_name="httproute/default/backend-http/rule/0"} 0
envoy_cluster_upstream_rq_max_duration_reached{envoy_cluster_name="httproute/default/backend-http/rule/0"} 0
envoy_cluster_upstream_rq_pending_failure_eject{envoy_cluster_name="httproute/default/backend-http/rule/0"} 0
envoy_cluster_upstream_rq_pending_overflow{envoy_cluster_name="httproute/default/backend-http/rule/0"} 0
envoy_cluster_upstream_rq_pending_total{envoy_cluster_name="httproute/default/backend-http/rule/0"} 1
envoy_cluster_upstream_rq_per_try_idle_timeout{envoy_cluster_name="httproute/default/backend-http/rule/0"} 0
envoy_cluster_upstream_rq_per_try_timeout{envoy_cluster_name="httproute/default/backend-http/rule/0"} 0
envoy_cluster_upstream_rq_retry{envoy_cluster_name="httproute/default/backend-http/rule/0"} 0
envoy_cluster_upstream_rq_retry_backoff_exponential{envoy_cluster_name="httproute/default/backend-http/rule/0"} 0
envoy_cluster_upstream_rq_retry_backoff_ratelimited{envoy_cluster_name="httproute/default/backend-http/rule/0"} 0
envoy_cluster_upstream_rq_retry_limit_exceeded{envoy_cluster_name="httproute/default/backend-http/rule/0"} 0
envoy_cluster_upstream_rq_retry_overflow{envoy_cluster_name="httproute/default/backend-http/rule/0"} 0
envoy_cluster_upstream_rq_retry_success{envoy_cluster_name="httproute/default/backend-http/rule/0"} 0
envoy_cluster_upstream_rq_rx_reset{envoy_cluster_name="httproute/default/backend-http/rule/0"} 0
envoy_cluster_upstream_rq_timeout{envoy_cluster_name="httproute/default/backend-http/rule/0"} 0
envoy_cluster_upstream_rq_total{envoy_cluster_name="httproute/default/backend-http/rule/0"} 1
envoy_cluster_upstream_rq_tx_reset{envoy_cluster_name="httproute/default/backend-http/rule/0"} 0
envoy_cluster_upstream_rq_xx{envoy_response_code_class="2",envoy_cluster_name="httproute/default/backend-http/rule/0"} 1
envoy_cluster_circuit_breakers_default_cx_open{envoy_cluster_name="httproute/default/backend-http/rule/0"} 0
envoy_cluster_circuit_breakers_default_cx_pool_open{envoy_cluster_name="httproute/default/backend-http/rule/0"} 0
envoy_cluster_circuit_breakers_default_rq_open{envoy_cluster_name="httproute/default/backend-http/rule/0"} 0
envoy_cluster_circuit_breakers_default_rq_pending_open{envoy_cluster_name="httproute/default/backend-http/rule/0"} 0
envoy_cluster_circuit_breakers_default_rq_retry_open{envoy_cluster_name="httproute/default/backend-http/rule/0"} 0
envoy_cluster_circuit_breakers_high_cx_open{envoy_cluster_name="httproute/default/backend-http/rule/0"} 0
envoy_cluster_circuit_breakers_high_cx_pool_open{envoy_cluster_name="httproute/default/backend-http/rule/0"} 0
envoy_cluster_circuit_breakers_high_rq_open{envoy_cluster_name="httproute/default/backend-http/rule/0"} 0
envoy_cluster_circuit_breakers_high_rq_pending_open{envoy_cluster_name="httproute/default/backend-http/rule/0"} 0
envoy_cluster_circuit_breakers_high_rq_retry_open{envoy_cluster_name="httproute/default/backend-http/rule/0"} 0
envoy_cluster_lb_subsets_active{envoy_cluster_name="httproute/default/backend-http/rule/0"} 0
envoy_cluster_max_host_weight{envoy_cluster_name="httproute/default/backend-http/rule/0"} 1
envoy_cluster_membership_degraded{envoy_cluster_name="httproute/default/backend-http/rule/0"} 0
envoy_cluster_membership_excluded{envoy_cluster_name="httproute/default/backend-http/rule/0"} 0
envoy_cluster_membership_healthy{envoy_cluster_name="httproute/default/backend-http/rule/0"} 1
envoy_cluster_membership_total{envoy_cluster_name="httproute/default/backend-http/rule/0"} 1
envoy_cluster_outlier_detection_ejections_active{envoy_cluster_name="httproute/default/backend-http/rule/0"} 0
envoy_cluster_update_time{envoy_cluster_name="httproute/default/backend-http/rule/0"} 1738130059432
envoy_cluster_upstream_cx_active{envoy_cluster_name="httproute/default/backend-http/rule/0"} 0
envoy_cluster_upstream_cx_rx_bytes_buffered{envoy_cluster_name="httproute/default/backend-http/rule/0"} 0
envoy_cluster_upstream_cx_tx_bytes_buffered{envoy_cluster_name="httproute/default/backend-http/rule/0"} 0
envoy_cluster_upstream_rq_active{envoy_cluster_name="httproute/default/backend-http/rule/0"} 0
envoy_cluster_upstream_rq_pending_active{envoy_cluster_name="httproute/default/backend-http/rule/0"} 0
envoy_cluster_version{envoy_cluster_name="httproute/default/backend-http/rule/0"} 2744517546871237796
envoy_cluster_warming_state{envoy_cluster_name="httproute/default/backend-http/rule/0"} 0
envoy_cluster_internal_upstream_rq_time_bucket{envoy_cluster_name="httproute/default/backend-http/rule/0",le="0.5"} 0
envoy_cluster_internal_upstream_rq_time_bucket{envoy_cluster_name="httproute/default/backend-http/rule/0",le="1"} 0
envoy_cluster_internal_upstream_rq_time_bucket{envoy_cluster_name="httproute/default/backend-http/rule/0",le="5"} 0
envoy_cluster_internal_upstream_rq_time_bucket{envoy_cluster_name="httproute/default/backend-http/rule/0",le="10"} 1
envoy_cluster_internal_upstream_rq_time_bucket{envoy_cluster_name="httproute/default/backend-http/rule/0",le="25"} 1
envoy_cluster_internal_upstream_rq_time_bucket{envoy_cluster_name="httproute/default/backend-http/rule/0",le="50"} 1
envoy_cluster_internal_upstream_rq_time_bucket{envoy_cluster_name="httproute/default/backend-http/rule/0",le="100"} 1
envoy_cluster_internal_upstream_rq_time_bucket{envoy_cluster_name="httproute/default/backend-http/rule/0",le="250"} 1
envoy_cluster_internal_upstream_rq_time_bucket{envoy_cluster_name="httproute/default/backend-http/rule/0",le="500"} 1
envoy_cluster_internal_upstream_rq_time_bucket{envoy_cluster_name="httproute/default/backend-http/rule/0",le="1000"} 1
envoy_cluster_internal_upstream_rq_time_bucket{envoy_cluster_name="httproute/default/backend-http/rule/0",le="2500"} 1
envoy_cluster_internal_upstream_rq_time_bucket{envoy_cluster_name="httproute/default/backend-http/rule/0",le="5000"} 1
envoy_cluster_internal_upstream_rq_time_bucket{envoy_cluster_name="httproute/default/backend-http/rule/0",le="10000"} 1
envoy_cluster_internal_upstream_rq_time_bucket{envoy_cluster_name="httproute/default/backend-http/rule/0",le="30000"} 1
envoy_cluster_internal_upstream_rq_time_bucket{envoy_cluster_name="httproute/default/backend-http/rule/0",le="60000"} 1
envoy_cluster_internal_upstream_rq_time_bucket{envoy_cluster_name="httproute/default/backend-http/rule/0",le="300000"} 1
envoy_cluster_internal_upstream_rq_time_bucket{envoy_cluster_name="httproute/default/backend-http/rule/0",le="600000"} 1
envoy_cluster_internal_upstream_rq_time_bucket{envoy_cluster_name="httproute/default/backend-http/rule/0",le="1800000"} 1
envoy_cluster_internal_upstream_rq_time_bucket{envoy_cluster_name="httproute/default/backend-http/rule/0",le="3600000"} 1
envoy_cluster_internal_upstream_rq_time_bucket{envoy_cluster_name="httproute/default/backend-http/rule/0",le="+Inf"} 1
envoy_cluster_internal_upstream_rq_time_sum{envoy_cluster_name="httproute/default/backend-http/rule/0"} 5.049999999999999822364316059975
envoy_cluster_internal_upstream_rq_time_count{envoy_cluster_name="httproute/default/backend-http/rule/0"} 1
envoy_cluster_update_duration_bucket{envoy_cluster_name="httproute/default/backend-http/rule/0",le="0.5"} 2
envoy_cluster_update_duration_bucket{envoy_cluster_name="httproute/default/backend-http/rule/0",le="1"} 2
envoy_cluster_update_duration_bucket{envoy_cluster_name="httproute/default/backend-http/rule/0",le="5"} 2
envoy_cluster_update_duration_bucket{envoy_cluster_name="httproute/default/backend-http/rule/0",le="10"} 2
envoy_cluster_update_duration_bucket{envoy_cluster_name="httproute/default/backend-http/rule/0",le="25"} 2
envoy_cluster_update_duration_bucket{envoy_cluster_name="httproute/default/backend-http/rule/0",le="50"} 2
envoy_cluster_update_duration_bucket{envoy_cluster_name="httproute/default/backend-http/rule/0",le="100"} 2
envoy_cluster_update_duration_bucket{envoy_cluster_name="httproute/default/backend-http/rule/0",le="250"} 2
envoy_cluster_update_duration_bucket{envoy_cluster_name="httproute/default/backend-http/rule/0",le="500"} 2
envoy_cluster_update_duration_bucket{envoy_cluster_name="httproute/default/backend-http/rule/0",le="1000"} 2
envoy_cluster_update_duration_bucket{envoy_cluster_name="httproute/default/backend-http/rule/0",le="2500"} 2
envoy_cluster_update_duration_bucket{envoy_cluster_name="httproute/default/backend-http/rule/0",le="5000"} 2
envoy_cluster_update_duration_bucket{envoy_cluster_name="httproute/default/backend-http/rule/0",le="10000"} 2
envoy_cluster_update_duration_bucket{envoy_cluster_name="httproute/default/backend-http/rule/0",le="30000"} 2
envoy_cluster_update_duration_bucket{envoy_cluster_name="httproute/default/backend-http/rule/0",le="60000"} 2
envoy_cluster_update_duration_bucket{envoy_cluster_name="httproute/default/backend-http/rule/0",le="300000"} 2
envoy_cluster_update_duration_bucket{envoy_cluster_name="httproute/default/backend-http/rule/0",le="600000"} 2
envoy_cluster_update_duration_bucket{envoy_cluster_name="httproute/default/backend-http/rule/0",le="1800000"} 2
envoy_cluster_update_duration_bucket{envoy_cluster_name="httproute/default/backend-http/rule/0",le="3600000"} 2
envoy_cluster_update_duration_bucket{envoy_cluster_name="httproute/default/backend-http/rule/0",le="+Inf"} 2
envoy_cluster_update_duration_sum{envoy_cluster_name="httproute/default/backend-http/rule/0"} 0
envoy_cluster_update_duration_count{envoy_cluster_name="httproute/default/backend-http/rule/0"} 2
envoy_cluster_upstream_cx_connect_ms_bucket{envoy_cluster_name="httproute/default/backend-http/rule/0",le="0.5"} 0
envoy_cluster_upstream_cx_connect_ms_bucket{envoy_cluster_name="httproute/default/backend-http/rule/0",le="1"} 0
envoy_cluster_upstream_cx_connect_ms_bucket{envoy_cluster_name="httproute/default/backend-http/rule/0",le="5"} 1
envoy_cluster_upstream_cx_connect_ms_bucket{envoy_cluster_name="httproute/default/backend-http/rule/0",le="10"} 1
envoy_cluster_upstream_cx_connect_ms_bucket{envoy_cluster_name="httproute/default/backend-http/rule/0",le="25"} 1
envoy_cluster_upstream_cx_connect_ms_bucket{envoy_cluster_name="httproute/default/backend-http/rule/0",le="50"} 1
envoy_cluster_upstream_cx_connect_ms_bucket{envoy_cluster_name="httproute/default/backend-http/rule/0",le="100"} 1
envoy_cluster_upstream_cx_connect_ms_bucket{envoy_cluster_name="httproute/default/backend-http/rule/0",le="250"} 1
envoy_cluster_upstream_cx_connect_ms_bucket{envoy_cluster_name="httproute/default/backend-http/rule/0",le="500"} 1
envoy_cluster_upstream_cx_connect_ms_bucket{envoy_cluster_name="httproute/default/backend-http/rule/0",le="1000"} 1
envoy_cluster_upstream_cx_connect_ms_bucket{envoy_cluster_name="httproute/default/backend-http/rule/0",le="2500"} 1
envoy_cluster_upstream_cx_connect_ms_bucket{envoy_cluster_name="httproute/default/backend-http/rule/0",le="5000"} 1
envoy_cluster_upstream_cx_connect_ms_bucket{envoy_cluster_name="httproute/default/backend-http/rule/0",le="10000"} 1
envoy_cluster_upstream_cx_connect_ms_bucket{envoy_cluster_name="httproute/default/backend-http/rule/0",le="30000"} 1
envoy_cluster_upstream_cx_connect_ms_bucket{envoy_cluster_name="httproute/default/backend-http/rule/0",le="60000"} 1
envoy_cluster_upstream_cx_connect_ms_bucket{envoy_cluster_name="httproute/default/backend-http/rule/0",le="300000"} 1
envoy_cluster_upstream_cx_connect_ms_bucket{envoy_cluster_name="httproute/default/backend-http/rule/0",le="600000"} 1
envoy_cluster_upstream_cx_connect_ms_bucket{envoy_cluster_name="httproute/default/backend-http/rule/0",le="1800000"} 1
envoy_cluster_upstream_cx_connect_ms_bucket{envoy_cluster_name="httproute/default/backend-http/rule/0",le="3600000"} 1
envoy_cluster_upstream_cx_connect_ms_bucket{envoy_cluster_name="httproute/default/backend-http/rule/0",le="+Inf"} 1
envoy_cluster_upstream_cx_connect_ms_sum{envoy_cluster_name="httproute/default/backend-http/rule/0"} 2.049999999999999822364316059975
envoy_cluster_upstream_cx_connect_ms_count{envoy_cluster_name="httproute/default/backend-http/rule/0"} 1
envoy_cluster_upstream_cx_length_ms_bucket{envoy_cluster_name="httproute/default/backend-http/rule/0",le="0.5"} 0
envoy_cluster_upstream_cx_length_ms_bucket{envoy_cluster_name="httproute/default/backend-http/rule/0",le="1"} 0
envoy_cluster_upstream_cx_length_ms_bucket{envoy_cluster_name="httproute/default/backend-http/rule/0",le="5"} 0
envoy_cluster_upstream_cx_length_ms_bucket{envoy_cluster_name="httproute/default/backend-http/rule/0",le="10"} 0
envoy_cluster_upstream_cx_length_ms_bucket{envoy_cluster_name="httproute/default/backend-http/rule/0",le="25"} 0
envoy_cluster_upstream_cx_length_ms_bucket{envoy_cluster_name="httproute/default/backend-http/rule/0",le="50"} 0
envoy_cluster_upstream_cx_length_ms_bucket{envoy_cluster_name="httproute/default/backend-http/rule/0",le="100"} 0
envoy_cluster_upstream_cx_length_ms_bucket{envoy_cluster_name="httproute/default/backend-http/rule/0",le="250"} 0
envoy_cluster_upstream_cx_length_ms_bucket{envoy_cluster_name="httproute/default/backend-http/rule/0",le="500"} 0
envoy_cluster_upstream_cx_length_ms_bucket{envoy_cluster_name="httproute/default/backend-http/rule/0",le="1000"} 0
envoy_cluster_upstream_cx_length_ms_bucket{envoy_cluster_name="httproute/default/backend-http/rule/0",le="2500"} 0
envoy_cluster_upstream_cx_length_ms_bucket{envoy_cluster_name="httproute/default/backend-http/rule/0",le="5000"} 0
envoy_cluster_upstream_cx_length_ms_bucket{envoy_cluster_name="httproute/default/backend-http/rule/0",le="10000"} 0
envoy_cluster_upstream_cx_length_ms_bucket{envoy_cluster_name="httproute/default/backend-http/rule/0",le="30000"} 0
envoy_cluster_upstream_cx_length_ms_bucket{envoy_cluster_name="httproute/default/backend-http/rule/0",le="60000"} 0
envoy_cluster_upstream_cx_length_ms_bucket{envoy_cluster_name="httproute/default/backend-http/rule/0",le="300000"} 0
envoy_cluster_upstream_cx_length_ms_bucket{envoy_cluster_name="httproute/default/backend-http/rule/0",le="600000"} 0
envoy_cluster_upstream_cx_length_ms_bucket{envoy_cluster_name="httproute/default/backend-http/rule/0",le="1800000"} 0
envoy_cluster_upstream_cx_length_ms_bucket{envoy_cluster_name="httproute/default/backend-http/rule/0",le="3600000"} 0
envoy_cluster_upstream_cx_length_ms_bucket{envoy_cluster_name="httproute/default/backend-http/rule/0",le="+Inf"} 1
envoy_cluster_upstream_cx_length_ms_sum{envoy_cluster_name="httproute/default/backend-http/rule/0"} 3650000
envoy_cluster_upstream_cx_length_ms_count{envoy_cluster_name="httproute/default/backend-http/rule/0"} 1
envoy_cluster_upstream_rq_time_bucket{envoy_cluster_name="httproute/default/backend-http/rule/0",le="0.5"} 0
envoy_cluster_upstream_rq_time_bucket{envoy_cluster_name="httproute/default/backend-http/rule/0",le="1"} 0
envoy_cluster_upstream_rq_time_bucket{envoy_cluster_name="httproute/default/backend-http/rule/0",le="5"} 0
envoy_cluster_upstream_rq_time_bucket{envoy_cluster_name="httproute/default/backend-http/rule/0",le="10"} 1
envoy_cluster_upstream_rq_time_bucket{envoy_cluster_name="httproute/default/backend-http/rule/0",le="25"} 1
envoy_cluster_upstream_rq_time_bucket{envoy_cluster_name="httproute/default/backend-http/rule/0",le="50"} 1
envoy_cluster_upstream_rq_time_bucket{envoy_cluster_name="httproute/default/backend-http/rule/0",le="100"} 1
envoy_cluster_upstream_rq_time_bucket{envoy_cluster_name="httproute/default/backend-http/rule/0",le="250"} 1
envoy_cluster_upstream_rq_time_bucket{envoy_cluster_name="httproute/default/backend-http/rule/0",le="500"} 1
envoy_cluster_upstream_rq_time_bucket{envoy_cluster_name="httproute/default/backend-http/rule/0",le="1000"} 1
envoy_cluster_upstream_rq_time_bucket{envoy_cluster_name="httproute/default/backend-http/rule/0",le="2500"} 1
envoy_cluster_upstream_rq_time_bucket{envoy_cluster_name="httproute/default/backend-http/rule/0",le="5000"} 1
envoy_cluster_upstream_rq_time_bucket{envoy_cluster_name="httproute/default/backend-http/rule/0",le="10000"} 1
envoy_cluster_upstream_rq_time_bucket{envoy_cluster_name="httproute/default/backend-http/rule/0",le="30000"} 1
envoy_cluster_upstream_rq_time_bucket{envoy_cluster_name="httproute/default/backend-http/rule/0",le="60000"} 1
envoy_cluster_upstream_rq_time_bucket{envoy_cluster_name="httproute/default/backend-http/rule/0",le="300000"} 1
envoy_cluster_upstream_rq_time_bucket{envoy_cluster_name="httproute/default/backend-http/rule/0",le="600000"} 1
envoy_cluster_upstream_rq_time_bucket{envoy_cluster_name="httproute/default/backend-http/rule/0",le="1800000"} 1
envoy_cluster_upstream_rq_time_bucket{envoy_cluster_name="httproute/default/backend-http/rule/0",le="3600000"} 1
envoy_cluster_upstream_rq_time_bucket{envoy_cluster_name="httproute/default/backend-http/rule/0",le="+Inf"} 1
envoy_cluster_upstream_rq_time_sum{envoy_cluster_name="httproute/default/backend-http/rule/0"} 5.049999999999999822364316059975
envoy_cluster_upstream_rq_time_count{envoy_cluster_name="httproute/default/backend-http/rule/0"} 1
[Wed Jan 29 07:49:09] [vagrant@ubuntu-jammy] [/shared-with-host/envoy-gateway]#
[Wed Jan 29 07:49:23] [vagrant@ubuntu-jammy] [/shared-with-host/envoy-gateway]#
[Wed Jan 29 07:49:24] [vagrant@ubuntu-jammy] [/shared-with-host/envoy-gateway]#
[Wed Jan 29 07:49:24] [vagrant@ubuntu-jammy] [/shared-with-host/envoy-gateway]#
curl --verbose --header "Host: www.example.com" http://localhost:8888/get
*   Trying 127.0.0.1:8888...
Handling connection for 8888
* Connected to localhost (127.0.0.1) port 8888 (#0)
> GET /get HTTP/1.1
> Host: www.example.com
> User-Agent: curl/7.81.0
> Accept: */*
>
* Mark bundle as not supporting multiuse
< HTTP/1.1 200 OK
< content-type: application/json
< x-content-type-options: nosniff
< date: Wed, 29 Jan 2025 07:51:45 GMT
< content-length: 460
<
{
 "path": "/get",
 "host": "www.example.com",
 "method": "GET",
 "proto": "HTTP/1.1",
 "headers": {
  "Accept": [
   "*/*"
  ],
  "User-Agent": [
   "curl/7.81.0"
  ],
  "X-Envoy-Internal": [
   "true"
  ],
  "X-Forwarded-For": [
   "10.244.2.2"
  ],
  "X-Forwarded-Proto": [
   "http"
  ],
  "X-Request-Id": [
   "404c262f-b3c0-4b4f-b881-cd0117b0f63e"
  ]
 },
 "namespace": "default",
 "ingress": "",
 "service": "",
 "pod": "backend-http-7c877f78d9-dns6d"
* Connection #0 to host localhost left intact
}[Wed Jan 29 07:51:45] [vagrant@ubuntu-jammy] [/shared-with-host/envoy-gateway]#
[Wed Jan 29 07:52:33] [vagrant@ubuntu-jammy] [/shared-with-host/envoy-gateway]#
[Wed Jan 29 07:52:51] [vagrant@ubuntu-jammy] [/shared-with-host/envoy-gateway]#
[Wed Jan 29 07:54:55] [vagrant@ubuntu-jammy] [/shared-with-host/envoy-gateway]#
[Wed Jan 29 07:54:55] [vagrant@ubuntu-jammy] [/shared-with-host/envoy-gateway]#
k get  gc
NAME   CONTROLLER                                      ACCEPTED   AGE
eg     gateway.envoyproxy.io/gatewayclass-controller   True       4h13m
[Wed Jan 29 07:56:57] [vagrant@ubuntu-jammy] [/shared-with-host/envoy-gateway]#
k get  gc -o yaml | yq
apiVersion: v1
items:
  - apiVersion: gateway.networking.k8s.io/v1
    kind: GatewayClass
    metadata:
      annotations:
        kubectl.kubernetes.io/last-applied-configuration: |
          {"apiVersion":"gateway.networking.k8s.io/v1","kind":"GatewayClass","metadata":{"annotations":{},"name":"eg"},"spec":{"controllerName":"gateway.envoyproxy.io/gatewayclass-controller"}}
      creationTimestamp: "2025-01-29T03:43:06Z"
      finalizers:
        - gateway-exists-finalizer.gateway.networking.k8s.io
      generation: 1
      name: eg
      resourceVersion: "1480"
      uid: e898f3b3-097a-4afc-8b66-17b64f81dc78
    spec:
      controllerName: gateway.envoyproxy.io/gatewayclass-controller
    status:
      conditions:
        - lastTransitionTime: "2025-01-29T03:43:06Z"
          message: Valid GatewayClass
          observedGeneration: 1
          reason: Accepted
          status: "True"
          type: Accepted
kind: List
metadata:
  resourceVersion: ""
[Wed Jan 29 07:57:06] [vagrant@ubuntu-jammy] [/shared-with-host/envoy-gateway]#
k get  gc -o wide
NAME   CONTROLLER                                      ACCEPTED   AGE     DESCRIPTION
eg     gateway.envoyproxy.io/gatewayclass-controller   True       4h14m
[Wed Jan 29 07:57:17] [vagrant@ubuntu-jammy] [/shared-with-host/envoy-gateway]#
cp -r HTTPRoute/ /home/atul/code/self/TechNotes/Envoy-Gateway/
cp: cannot create directory '/home/atul/code/self/TechNotes/Envoy-Gateway/': No such file or directory
[Wed Jan 29 08:00:33] [vagrant@ubuntu-jammy] [/shared-with-host/envoy-gateway]#
ls /home/atul/code/self/TechNotes/
ls: cannot access '/home/atul/code/self/TechNotes/': No such file or directory
[Wed Jan 29 08:00:53] [vagrant@ubuntu-jammy] [/shared-with-host/envoy-gateway]#
[Wed Jan 29 08:00:53] [vagrant@ubuntu-jammy] [/shared-with-host/envoy-gateway]#
k get httproute
NAME           HOSTNAMES             AGE
backend-http   ["www.example.com"]   129m
[Wed Jan 29 08:03:14] [vagrant@ubuntu-jammy] [/shared-with-host/envoy-gateway]#
k get httproute -o wide
NAME           HOSTNAMES             AGE
backend-http   ["www.example.com"]   129m
[Wed Jan 29 08:03:19] [vagrant@ubuntu-jammy] [/shared-with-host/envoy-gateway]#
k get httproute -o yaml
apiVersion: v1
items:
- apiVersion: gateway.networking.k8s.io/v1
  kind: HTTPRoute
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"gateway.networking.k8s.io/v1","kind":"HTTPRoute","metadata":{"annotations":{},"name":"backend-http","namespace":"default"},"spec":{"hostnames":["www.example.com"],"parentRefs":[{"name":"eg"}],"rules":[{"bac
kendRefs":[{"group":"","kind":"Service","name":"backend-http","port":3000,"weight":1}],"matches":[{"path":{"type":"PathPrefix","value":"/"}}]}]}}
    creationTimestamp: "2025-01-29T05:54:10Z"
    generation: 1
    name: backend-http
    namespace: default
    resourceVersion: "17275"
    uid: 7e59df3f-d5ae-4f81-a5e2-f3982a8c74b1
  spec:
    hostnames:
    - www.example.com
    parentRefs:
    - group: gateway.networking.k8s.io
      kind: Gateway
      name: eg
    rules:
    - backendRefs:
      - group: ""
        kind: Service
        name: backend-http
        port: 3000
        weight: 1
      matches:
      - path:
          type: PathPrefix
          value: /
  status:
    parents:
    - conditions:
      - lastTransitionTime: "2025-01-29T05:54:10Z"
        message: Route is accepted
        observedGeneration: 1
        reason: Accepted
        status: "True"
        type: Accepted
      - lastTransitionTime: "2025-01-29T05:54:10Z"
        message: Resolved all the Object references for the Route
        observedGeneration: 1
        reason: ResolvedRefs
        status: "True"
        type: ResolvedRefs
      controllerName: gateway.envoyproxy.io/gatewayclass-controller
      parentRef:
        group: gateway.networking.k8s.io
        kind: Gateway
        name: eg
kind: List
metadata:
  resourceVersion: ""
[Wed Jan 29 08:03:25] [vagrant@ubuntu-jammy] [/shared-with-host/envoy-gateway]#
k get httproute -o yaml | grep -i accepted
[Wed Jan 29 08:03:25] [vagrant@ubuntu-jammy] [/shared-with-host/envoy-gateway]#
k get httproute -o yaml | grep -i accepted
        message: Route is accepted
        reason: Accepted
        type: Accepted
[Wed Jan 29 08:04:34] [vagrant@ubuntu-jammy] [/shared-with-host/envoy-gateway]#
k get httproute -o yaml | yq
apiVersion: v1
items:
  - apiVersion: gateway.networking.k8s.io/v1
    kind: HTTPRoute
    metadata:
      annotations:
        kubectl.kubernetes.io/last-applied-configuration: |
          {"apiVersion":"gateway.networking.k8s.io/v1","kind":"HTTPRoute","metadata":{"annotations":{},"name":"backend-http","namespace":"default"},"spec":{"hostnames":["www.example.com"],"parentRefs":[{"name":"eg"}],"rules":[{"b
ackendRefs":[{"group":"","kind":"Service","name":"backend-http","port":3000,"weight":1}],"matches":[{"path":{"type":"PathPrefix","value":"/"}}]}]}}
      creationTimestamp: "2025-01-29T05:54:10Z"
      generation: 1
      name: backend-http
      namespace: default
      resourceVersion: "17275"
      uid: 7e59df3f-d5ae-4f81-a5e2-f3982a8c74b1
    spec:
      hostnames:
        - www.example.com
      parentRefs:
        - group: gateway.networking.k8s.io
          kind: Gateway
          name: eg
      rules:
        - backendRefs:
            - group: ""
              kind: Service
              name: backend-http
              port: 3000
              weight: 1
          matches:
            - path:
                type: PathPrefix
                value: /
    status:
      parents:
        - conditions:
            - lastTransitionTime: "2025-01-29T05:54:10Z"
              message: Route is accepted
              observedGeneration: 1
              reason: Accepted
              status: "True"
              type: Accepted
            - lastTransitionTime: "2025-01-29T05:54:10Z"
              message: Resolved all the Object references for the Route
              observedGeneration: 1
              reason: ResolvedRefs
              status: "True"
              type: ResolvedRefs
          controllerName: gateway.envoyproxy.io/gatewayclass-controller
          parentRef:
            group: gateway.networking.k8s.io
            kind: Gateway
            name: eg
kind: List
metadata:
  resourceVersion: ""
[Wed Jan 29 08:04:41] [vagrant@ubuntu-jammy] [/shared-with-host/envoy-gateway]#
[Wed Jan 29 08:10:38] [vagrant@ubuntu-jammy] [/shared-with-host/envoy-gateway]#
[Wed Jan 29 08:10:39] [vagrant@ubuntu-jammy] [/shared-with-host/envoy-gateway]#
echo $ENVOY_SERVICE
envoy-default-eg-e41e7b31
[Wed Jan 29 08:11:33] [vagrant@ubuntu-jammy] [/shared-with-host/envoy-gateway]#
[Wed Jan 29 08:11:33] [vagrant@ubuntu-jammy] [/shared-with-host/envoy-gateway]#
kubectl get gateway -o jsonpath='{.status.addresses[0].value}'
[Wed Jan 29 08:12:19] [vagrant@ubuntu-jammy] [/shared-with-host/envoy-gateway]#
kubectl get gateway -o yaml | yq
apiVersion: v1
items:
  - apiVersion: gateway.networking.k8s.io/v1
    kind: Gateway
    metadata:
      annotations:
        kubectl.kubernetes.io/last-applied-configuration: |
          {"apiVersion":"gateway.networking.k8s.io/v1","kind":"Gateway","metadata":{"annotations":{},"name":"eg","namespace":"default"},"spec":{"gatewayClassName":"eg","listeners":[{"name":"http","port":80,"protocol":"HTTP"}]}}
      creationTimestamp: "2025-01-29T03:43:06Z"
      generation: 1
      name: eg
      namespace: default
      resourceVersion: "17305"
      uid: 8d19d2a4-26e2-49db-8bfa-02ab4850cd1d
    spec:
      gatewayClassName: eg
      listeners:
        - allowedRoutes:
            namespaces:
              from: Same
          name: http
          port: 80
          protocol: HTTP
    status:
      conditions:
        - lastTransitionTime: "2025-01-29T05:54:19Z"
          message: The Gateway has been scheduled by Envoy Gateway
          observedGeneration: 1
          reason: Accepted
          status: "True"
          type: Accepted
        - lastTransitionTime: "2025-01-29T05:54:19Z"
          message: No addresses have been assigned to the Gateway
          observedGeneration: 1
          reason: AddressNotAssigned
          status: "False"
          type: Programmed
      listeners:
        - attachedRoutes: 1
          conditions:
            - lastTransitionTime: "2025-01-29T05:54:19Z"
              message: Sending translated listener configuration to the data plane
              observedGeneration: 1
              reason: Programmed
              status: "True"
              type: Programmed
            - lastTransitionTime: "2025-01-29T05:54:19Z"
              message: Listener has been successfully translated
              observedGeneration: 1
              reason: Accepted
              status: "True"
              type: Accepted
            - lastTransitionTime: "2025-01-29T05:54:19Z"
              message: Listener references have been resolved
              observedGeneration: 1
              reason: ResolvedRefs
              status: "True"
              type: ResolvedRefs
          name: http
          supportedKinds:
            - group: gateway.networking.k8s.io
              kind: HTTPRoute
            - group: gateway.networking.k8s.io
              kind: GRPCRoute
kind: List
metadata:
  resourceVersion: ""
[Wed Jan 29 08:14:19] [vagrant@ubuntu-jammy] [/shared-with-host/envoy-gateway]#
[Wed Jan 29 08:14:41] [vagrant@ubuntu-jammy] [/shared-with-host/envoy-gateway]#
kubectl get gateway
NAME   CLASS   ADDRESS   PROGRAMMED   AGE
eg     eg                False        4h31m
[Wed Jan 29 08:14:44] [vagrant@ubuntu-jammy] [/shared-with-host/envoy-gateway]#
[Wed Jan 29 11:40:09] [vagrant@ubuntu-jammy] [/shared-with-host/envoy-gateway]#
kga
[Wed Jan 29 11:40:09] [vagrant@ubuntu-jammy] [/shared-with-host/envoy-gateway]#
kga
kubectl get all
NAME                                READY   STATUS    RESTARTS   AGE
pod/backend-http-7c877f78d9-dns6d   1/1     Running   0          5h46m

NAME                   TYPE        CLUSTER-IP      EXTERNAL-IP   PORT(S)    AGE
service/backend-http   ClusterIP   10.96.148.248   <none>        3000/TCP   5h46m
service/kubernetes     ClusterIP   10.96.0.1       <none>        443/TCP    8h

NAME                           READY   UP-TO-DATE   AVAILABLE   AGE
deployment.apps/backend-http   1/1     1            1           5h46m

NAME                                      DESIRED   CURRENT   READY   AGE
replicaset.apps/backend-http-7c877f78d9   1         1         1       5h46m
[Wed Jan 29 11:40:12] [vagrant@ubuntu-jammy] [/shared-with-host/envoy-gateway]#
k get pod/backend-http-7c877f78d9-dns6d -o yaml
apiVersion: v1
kind: Pod
metadata:
  creationTimestamp: "2025-01-29T05:54:10Z"
  generateName: backend-http-7c877f78d9-
  labels:
    app: backend-http
    pod-template-hash: 7c877f78d9
    version: v1
  name: backend-http-7c877f78d9-dns6d
  namespace: default
  ownerReferences:
  - apiVersion: apps/v1
    blockOwnerDeletion: true
    controller: true
    kind: ReplicaSet
    name: backend-http-7c877f78d9
    uid: 3717f161-6c48-4b35-be23-a70220d9ee8a
  resourceVersion: "17300"
  uid: 640ee13f-fd1c-4fd2-91df-e2c45c6ca94b
spec:
  containers:
  - env:
    - name: POD_NAME
      valueFrom:
        fieldRef:
          apiVersion: v1
          fieldPath: metadata.name
    - name: NAMESPACE
      valueFrom:
        fieldRef:
          apiVersion: v1
          fieldPath: metadata.namespace
    image: gcr.io/k8s-staging-gateway-api/echo-basic:v20231214-v1.0.0-140-gf544a46e
    imagePullPolicy: IfNotPresent
    name: backend-http
    ports:
    - containerPort: 3000
      protocol: TCP
    resources: {}
    terminationMessagePath: /dev/termination-log
    terminationMessagePolicy: File
    volumeMounts:
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: kube-api-access-p62n5
      readOnly: true
  dnsPolicy: ClusterFirst
  enableServiceLinks: true
  nodeName: env-gw-worker
  preemptionPolicy: PreemptLowerPriority
  priority: 0
  restartPolicy: Always
  schedulerName: default-scheduler
  securityContext: {}
  serviceAccount: backend-http
  serviceAccountName: backend-http
  terminationGracePeriodSeconds: 30
  tolerations:
  - effect: NoExecute
    key: node.kubernetes.io/not-ready
    operator: Exists
    tolerationSeconds: 300
  - effect: NoExecute
    key: node.kubernetes.io/unreachable
    operator: Exists
    tolerationSeconds: 300
  volumes:
  - name: kube-api-access-p62n5
    projected:
      defaultMode: 420
      sources:
      - serviceAccountToken:
          expirationSeconds: 3607
          path: token
      - configMap:
          items:
          - key: ca.crt
            path: ca.crt
          name: kube-root-ca.crt
      - downwardAPI:
          items:
          - fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
            path: namespace
status:
  conditions:
  - lastProbeTime: null
    lastTransitionTime: "2025-01-29T05:54:19Z"
    status: "True"
    type: PodReadyToStartContainers
  - lastProbeTime: null
    lastTransitionTime: "2025-01-29T05:54:10Z"
    status: "True"
    type: Initialized
  - lastProbeTime: null
    lastTransitionTime: "2025-01-29T05:54:19Z"
    status: "True"
    type: Ready
  - lastProbeTime: null
    lastTransitionTime: "2025-01-29T05:54:19Z"
    status: "True"
    type: ContainersReady
  - lastProbeTime: null
    lastTransitionTime: "2025-01-29T05:54:10Z"
    status: "True"
    type: PodScheduled
  containerStatuses:
  - containerID: containerd://6ab7353e227b66288c93bd3ea8e8ccbe63de663f88528dcc3c71838bb40a4f64
    image: gcr.io/k8s-staging-gateway-api/echo-basic:v20231214-v1.0.0-140-gf544a46e
    imageID: gcr.io/k8s-staging-gateway-api/echo-basic@sha256:22f6999b51e1198b0a8f94fde7b1baed41119e57eeb799425d4af9616b840cdf
    lastState: {}
    name: backend-http
    ready: true
    restartCount: 0
    started: true
    state:
      running:
        startedAt: "2025-01-29T05:54:19Z"
    volumeMounts:
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: kube-api-access-p62n5
      readOnly: true
      recursiveReadOnly: Disabled
  hostIP: 172.18.0.2
  hostIPs:
  - ip: 172.18.0.2
  phase: Running
  podIP: 10.244.1.4
  podIPs:
  - ip: 10.244.1.4
  qosClass: BestEffort
  startTime: "2025-01-29T05:54:10Z"
[Wed Jan 29 11:40:24] [vagrant@ubuntu-jammy] [/shared-with-host/envoy-gateway]#
[Wed Jan 29 11:54:38] [vagrant@ubuntu-jammy] [/shared-with-host/envoy-gateway]#
[Wed Jan 29 11:54:38] [vagrant@ubuntu-jammy] [/shared-with-host/envoy-gateway]#
[Wed Jan 29 11:54:38] [vagrant@ubuntu-jammy] [/shared-with-host/envoy-gateway]#
k get secrets
No resources found in default namespace.
[Wed Jan 29 12:11:12] [vagrant@ubuntu-jammy] [/shared-with-host/envoy-gateway]#
k get secrets -A
NAMESPACE              NAME                       TYPE                            DATA   AGE
envoy-gateway-system   envoy                      kubernetes.io/tls               3      8h
envoy-gateway-system   envoy-gateway              kubernetes.io/tls               3      8h
envoy-gateway-system   envoy-oidc-hmac            Opaque                          1      8h
envoy-gateway-system   envoy-rate-limit           kubernetes.io/tls               3      8h
envoy-gateway-system   sh.helm.release.v1.eg.v1   helm.sh/release.v1              1      8h
kube-system            bootstrap-token-abcdef     bootstrap.kubernetes.io/token   6      8h
[Wed Jan 29 12:11:14] [vagrant@ubuntu-jammy] [/shared-with-host/envoy-gateway]#
k get secrets -n envoy-gateway-system envoy-gateway -o yaml
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURHRENDQWdDZ0F3SUJBZ0lFQ1cwazRqQU5CZ2txaGtpRzl3MEJBUXNGQURBc01SWXdGQVlEVlFRREV3MWwKYm5admVTMW5ZWFJsZDJGNU1SSXdFQVlEVlFRRkV3a3hOVGd4TkRjNE1UQXdIaGNOTWpVd01USTRNRE16T1RRMwpXaGNOTXp
Bd01USTRNRE16T1RRMldqQXNNUll3RkFZRFZRUURFdzFsYm5admVTMW5ZWFJsZDJGNU1SSXdFQVlEClZRUUZFd2t4TlRneE5EYzRNVEF3Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRQysKandMUjJnQkxHUS9KbklLTVBvWTlOSWlBcXQyeTNUTThFQS9oU0VHSmY1ZkxrYzVs
WTdpUXFNS1hCYS9TMitMcApyT213NXF4bmNKbzNpNmUzcDRFazJ4QkFpbVdDZ0xhRmhSY3dOUFVZVmdDQjF5VDVHNmE4dzBrSU0xZjNIQXBKCktvWUN1Vm1JZTE1TFdjSm1BUFFsdlpaM0xFalFPeFNhU2ZUTzExeTVqZkttVXBoTG12cVZTeHgwajFLdCt6RUQKZFBVbGx5M05CWkpBaTJOVWl6ekVHa25nZ
jhLTy9ORFJrRktPRW9ocHZBNVpTNlN6SnY1YStPeXBaSEZSdUV0ZgpaVmp5TExSK0VqK1hrUTBXTXF6cGpaM1lFb1lYVHViY1JTMjVvYzdacFR0bDFaNkxzTHNhRW5OcXYreGg0WEJ3Cnc3cElVUy9hMzhjUEliQmNYeFpuQWdNQkFBR2pRakJBTUE0R0ExVWREd0VCL3dRRUF3SUNwREFQQmdOVkhSTUIKQW
Y4RUJUQURBUUgvTUIwR0ExVWREZ1FXQkJTRG56cEREM0lOYXZKNExRd0JCOFI2emgrQ3RUQU5CZ2txaGtpRwo5dzBCQVFzRkFBT0NBUUVBaU01aURDelEzSVJ0Tk1SK0NFUEduMFNOMm5TMXdnY2phdVh1enJZYktLd21WRFNPClZveXp2OVprV2k4V0xPNkpaemNJc2xubGtpZGllSFJqSVhkWm1nbjRYaGh
iVnZXUTFpZ29raUYwVEJqam1lTEIKS29OZ3E2bFhCQmZzdHpCd0JNb1Y5OGxmWVorOWRJOUhGNHBSN1gvRTU1Y2puSmJLOVV4Z0JqVEN5VFp6b0x1TApQbVZhU0J6WnlSY1JuWFdFYWZhanhhM016MHA0Tkg2blVHdFBkY1lRd05VcU9ncUxyRVZkSWtNall3blBrc0lOCkpVZ08rck1KT2pWTzRIWW4zS1FT
aUVRN2pNR1FHeVBEQWk1czNpbkIxdmVuSDNlYkRzeDA3ajRSc0NlVFhFSTAKRDBzZ0V2OEQxOGtkM3VNQWVEZ2pDN3NVVWpQa01aU205dFYxdnc9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUR0VENDQXAyZ0F3SUJBZ0lFRzNqZVdUQU5CZ2txaGtpRzl3MEJBUXNGQURBc01SWXdGQVlEVlFRREV3MWwKYm5admVTMW5ZWFJsZDJGNU1SSXdFQVlEVlFRRkV3a3hOVGd4TkRjNE1UQXdIaGNOTWpVd01USTRNRE16T1RRMwpXaGNOTX
pBd01USTRNRE16T1RRMldqQVlNUll3RkFZRFZRUURFdzFsYm5admVTMW5ZWFJsZDJGNU1JSUJJakFOCkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQTVwOHF3bFF4UjFYNlNOd3hxUDlna05xcHdzY0wKWTg2ekRNNTRsR08yci9DRTdaTmdSY25YZWl0cXZFZmsxblRHaWNNUWlxN2Z2Rkd
oSGpEZzFFSzVxNUZJcEVvdwpxOEU3YXRhamJtY2RycWIwOUZPYlZueVQxN3JCV215aWNGTmpoU3o4ZnFwM1pmWWl6RWhrWnAyN3NVNXV2dGJNCjdycGMyZFBHdDR4c2I3NWxCb0VValo3ZzV4dDUzd0o3RzZlZkJPQldlNmtzbHRmaU1NekxKdThFajRranI3enAKVXdqVHg4aWlTRFp6d1krb0ZoTVBrWkZD
YnUrd2k1Sm1CTXkveW5zM0xTdG5wRW9JY1J4Rk9GMTVpa3kwN2hMdwpGVU9hUnQ1ZlpxZDFYSXZtOFJEZFIyYWoxM0UrZG00b1hkam5jeGlDUjQ2WTVOalF5WVE4bTM2ZFB3SURBUUFCCm80SHlNSUh2TUE0R0ExVWREd0VCL3dRRUF3SUU4REFkQmdOVkhRNEVGZ1FVWklPTTJoajJ2UGtUUHNmM1dhSlkKV
09kOFIwNHdId1lEVlIwakJCZ3dGb0FVZzU4NlF3OXlEV3J5ZUMwTUFRZkVlczRmZ3JVd2dad0dBMVVkRVFTQgpsRENCa1lJTlpXNTJiM2t0WjJGMFpYZGhlWUlpWlc1MmIza3RaMkYwWlhkaGVTNWxiblp2ZVMxbllYUmxkMkY1CkxYTjVjM1JsYllJbVpXNTJiM2t0WjJGMFpYZGhlUzVsYm5admVTMW5ZWF
JsZDJGNUxYTjVjM1JsYlM1emRtT0MKTkdWdWRtOTVMV2RoZEdWM1lYa3VaVzUyYjNrdFoyRjBaWGRoZVMxemVYTjBaVzB1YzNaakxtTnNkWE4wWlhJdQpiRzlqWVd3d0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFMTURGMDU4WHp0a0lValFva3NqUWt0ZXRHd0RjanV2CjF1TnlxNzhPQWk2WWpHRExyaDg
1QXpBaUducTJnbGl0QlJRZTVYTTVvU0ZpcVkzWjVuTjVCYW54U1Nvc0JoSVEKQ2xKSjluWDJYMlhPTUlrb0d6TXBLQUNydTZoRnNUbHRaOW52QjN3SWJZU21YenNPbkhLbW1SYVNQODliMytMMgpmRHU4OHFPNG5uV0x3byttSlF5ZTdFa0tGTTZuR1lDeFM2STlqTG16Y1M4U3hySDN5djlRZnBjMHBiaEZF
dVVjClNHdTEyOGtkRW5NT29sOHV4MGlacU9KUTR4ZjlNZXdPTUp6VUUrVk80TGNydUZQNVhSdWhkc0M4Z2pmMWs0MmcKalhuZFpDcXRuWHdRZmJmV01mNFdnZ1RNalpsbkVoS2xBeEduc0ZHdlJoelVNUjZKNStld0VBQT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBNXA4cXdsUXhSMVg2U053eHFQOWdrTnFwd3NjTFk4NnpETTU0bEdPMnIvQ0U3Wk5nClJjblhlaXRxdkVmazFuVEdpY01RaXE3ZnZGR2hIakRnMUVLNXE1RklwRW93cThFN2F0YWpibWNkcnFiMDlGT2IKVm
55VDE3ckJXbXlpY0ZOamhTejhmcXAzWmZZaXpFaGtacDI3c1U1dXZ0Yk03cnBjMmRQR3Q0eHNiNzVsQm9FVQpqWjdnNXh0NTN3SjdHNmVmQk9CV2U2a3NsdGZpTU16TEp1OEVqNGtqcjd6cFV3alR4OGlpU0RaendZK29GaE1QCmtaRkNidSt3aTVKbUJNeS95bnMzTFN0bnBFb0ljUnhGT0YxNWlreTA3aEx
3RlVPYVJ0NWZacWQxWEl2bThSRGQKUjJhajEzRStkbTRvWGRqbmN4aUNSNDZZNU5qUXlZUThtMzZkUHdJREFRQUJBb0lCQUhQZGQ4QVdTSVBNZ0dobQpxRlI5cVdoZFUzaldRN1NyUG0ycXRnM25ZdnRWM1pMMnZpR1IzTDQyWGZPbU15UkRteFBQZXRvU0xib1JVTjg0Ck0xeXhBVk5mTkozRjRGb0tSTzNT
VkYyOVZMNVFoelRSWkhPNU54WGxjQXNjRlNoVjNPUWx5OTFmaTRrZ2RpOG8KRjdrdWVnUUVvY01qYStac253V1pUbmNkQjhYRGIrUzIrczZLM3E0WW5wc2IvdFJTNXY5Tzdpd0hMa2dqN2hNWAo0MDRhSVh2UmVLcFQyOG5nLzhCQjgreEUrRjhGWERKVXdBS0tEMHJNdURRV2RoTVowYnkzVkFPS2laelRnY
3dNClNUdzhvb1JCRW1SK2UrL0Zwa0lOQUprbmNhNUZMa0NKRGZRVGZpUEZZbndYY2hRU1NMRVFMcGY3eVVMRldrRWIKT2hXenBwRUNnWUVBNlFZOUp6U2VIL1ExUDIxZGNBMVQ2RmY2ZnRGcjB1M0twcThta0JNZ05PMytMVm9pTTkyYQpIT3NtcWVaWFROWCt2ZlRxcTBaWU41UmY3QmdvTGt0THhLRGp6UH
ZpU01VV0lIdFRBZkRQQWFKbEJHeTJzdGV4ClNKUitxTHNtZ0hJbDZvdWp1R2xLRXF6cE9kUXpzSExhK01zVE8ycVI3TSsxVnNiN25VVXIzTTBDZ1lFQS9WeEkKbUlxa0lOYWFqbkoreW1XQXBKTFNMUHNDOFNOdHYvQWg3WmQ1YWQ5QTROQ1I0Q0ZKQWlVdy8zaXROMGRrR3dGeApwVENKMTNSSi9KU0VCNG5
jQVNFbnNxSWd1bXgzUzRmRTVobUhpdktmU0phQVk4R0VSdmcyKzZZTG5CaWJPYUpuClF5WjRXMjVWUnNHbjBKcDhsTXcrMElhNlkybTUxbHVmc0h0Tm9qc0NnWUFYU3ZkYjd1ZUxmQ2JDYzFVdXVUWlUKK0U1aTFONDVWR200WmJPdUhTdFAveVkwTkZsTTQrN2V5eWF2UHdZaytSTWd1OVdsVHovTU5ubXNL
UElEUnFXSgpQeWZtT3B0dytMcHdmc05hWTA3ZDgvU3pENGJuczZYV0Fubnl0ZHB3Wm5paHpGbU9Pb0FjQThyQWJCVEtvNEI5CjlCYTFEcjhOYytuRmhkaHE3Um9vVlFLQmdGU3QwMVdvZ05LNDUwOVUxU3V3WVI2Z003NzA1amJTTUl4R0poRFMKMzdHUy9Jd25LWnBQaGFkQjV1NTcxdWp5NDNKak9TaU00S
VV5U01neW15NHAxVzVMTm9sdHhxS0lQaGJ3ZWM2dQpHYTlIQ0JXcXQ1NmZ2eVk1TDZkTUIvVlVCQTF2U2pRWFY0SzNqYWpvY0w0MzVBdVhlQ2NaNEpINWRETkF6RTZmCjU0S2hBb0dCQUtFRUZXclc3Z2xKTGdOM3VxQm1OMGtVZFFza1FuZmUvMXI5bGI5Ti9HUFlFbUtDZERKdkZVQVIKMmtGbk8ybVdxU3
FBVE95UTQwN3pHd0kzWWtEa05WWVYvN0VQamNSN3lFOENMcTVKRXpUckswRUZkSHBRRENwOApwL3k1OU5VN0xNVldRMlFHUG9rMFBRaEdscDJtTUVJZE1HbUlhUTNIRDJMT2xsRmlrV2ZyCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  creationTimestamp: "2025-01-29T03:39:47Z"
  labels:
    control-plane: envoy-gateway
  name: envoy-gateway
  namespace: envoy-gateway-system
  resourceVersion: "1023"
  uid: 2957fb00-93e0-403a-bb69-4514a6d9d394
type: kubernetes.io/tls
[Wed Jan 29 12:11:52] [vagrant@ubuntu-jammy] [/shared-with-host/envoy-gateway]#
[Wed Jan 29 12:21:12] [vagrant@ubuntu-jammy] [/shared-with-host/envoy-gateway]#
[Wed Jan 29 12:21:12] [vagrant@ubuntu-jammy] [/shared-with-host/envoy-gateway]#
[Wed Jan 29 12:35:26] [vagrant@ubuntu-jammy] [/shared-with-host/envoy-gateway]#
[Wed Jan 29 12:35:27] [vagrant@ubuntu-jammy] [/shared-with-host/envoy-gateway]#
k describe gateway
Name:         eg
Namespace:    default
Labels:       <none>
Annotations:  <none>
API Version:  gateway.networking.k8s.io/v1
Kind:         Gateway
Metadata:
  Creation Timestamp:  2025-01-29T03:43:06Z
  Generation:          1
  Resource Version:    17305
  UID:                 8d19d2a4-26e2-49db-8bfa-02ab4850cd1d
Spec:
  Gateway Class Name:  eg
  Listeners:
    Allowed Routes:
      Namespaces:
        From:  Same
    Name:      http
    Port:      80
    Protocol:  HTTP
Status:
  Conditions:
    Last Transition Time:  2025-01-29T05:54:19Z
    Message:               The Gateway has been scheduled by Envoy Gateway
    Observed Generation:   1
    Reason:                Accepted
    Status:                True
    Type:                  Accepted
    Last Transition Time:  2025-01-29T05:54:19Z
    Message:               No addresses have been assigned to the Gateway
    Observed Generation:   1
    Reason:                AddressNotAssigned
    Status:                False
    Type:                  Programmed
  Listeners:
    Attached Routes:  1
    Conditions:
      Last Transition Time:  2025-01-29T05:54:19Z
      Message:               Sending translated listener configuration to the data plane
      Observed Generation:   1
      Reason:                Programmed
      Status:                True
      Type:                  Programmed
      Last Transition Time:  2025-01-29T05:54:19Z
      Message:               Listener has been successfully translated
      Observed Generation:   1
      Reason:                Accepted
      Status:                True
      Type:                  Accepted
      Last Transition Time:  2025-01-29T05:54:19Z
      Message:               Listener references have been resolved
      Observed Generation:   1
      Reason:                ResolvedRefs
      Status:                True
      Type:                  ResolvedRefs
    Name:                    http
    Supported Kinds:
      Group:  gateway.networking.k8s.io
      Kind:   HTTPRoute
      Group:  gateway.networking.k8s.io
      Kind:   GRPCRoute
Events:       <none>
[Wed Jan 29 12:35:42] [vagrant@ubuntu-jammy] [/shared-with-host/envoy-gateway]#
[Wed Jan 29 12:35:42] [vagrant@ubuntu-jammy] [/shared-with-host/envoy-gateway]#
k explain gateway
GROUP:      gateway.networking.k8s.io
KIND:       Gateway
VERSION:    v1

DESCRIPTION:
    Gateway represents an instance of a service-traffic handling infrastructure
    by binding Listeners to a set of IP addresses.

FIELDS:
  apiVersion    <string>
    APIVersion defines the versioned schema of this representation of an object.
    Servers should convert recognized schemas to the latest internal value, and
    may reject unrecognized values. More info:
    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources

  kind  <string>
    Kind is a string value representing the REST resource this object
    represents. Servers may infer this from the endpoint the client submits
    requests to. Cannot be updated. In CamelCase. More info:
    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds

  metadata      <ObjectMeta>
    Standard object's metadata. More info:
    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata

  spec  <Object> -required-
    Spec defines the desired state of Gateway.

  status        <Object>
    Status defines the current state of Gateway.


[Wed Jan 29 12:35:54] [vagrant@ubuntu-jammy] [/shared-with-host/envoy-gateway]#
k explain gateway.spec.listeners
GROUP:      gateway.networking.k8s.io
KIND:       Gateway
VERSION:    v1

FIELD: listeners <[]Object>


DESCRIPTION:
    Listeners associated with this Gateway. Listeners define
    logical endpoints that are bound on this Gateway's addresses.
    At least one Listener MUST be specified.

    Each Listener in a set of Listeners (for example, in a single Gateway)
    MUST be _distinct_, in that a traffic flow MUST be able to be assigned to
    exactly one listener. (This section uses "set of Listeners" rather than
    "Listeners in a single Gateway" because implementations MAY merge
    configuration
    from multiple Gateways onto a single data plane, and these rules _also_
    apply in that case).

    Practically, this means that each listener in a set MUST have a unique
    combination of Port, Protocol, and, if supported by the protocol, Hostname.

    Some combinations of port, protocol, and TLS settings are considered
    Core support and MUST be supported by implementations based on their
    targeted conformance profile:

    HTTP Profile

    1. HTTPRoute, Port: 80, Protocol: HTTP
    2. HTTPRoute, Port: 443, Protocol: HTTPS, TLS Mode: Terminate, TLS keypair
    provided

    TLS Profile

    1. TLSRoute, Port: 443, Protocol: TLS, TLS Mode: Passthrough

    "Distinct" Listeners have the following property:

    The implementation can match inbound requests to a single distinct
    Listener. When multiple Listeners share values for fields (for
    example, two Listeners with the same Port value), the implementation
    can match requests to only one of the Listeners using other
    Listener fields.

    For example, the following Listener scenarios are distinct:

    1. Multiple Listeners with the same Port that all use the "HTTP"
       Protocol that all have unique Hostname values.
    2. Multiple Listeners with the same Port that use either the "HTTPS" or
       "TLS" Protocol that all have unique Hostname values.
    3. A mixture of "TCP" and "UDP" Protocol Listeners, where no Listener
       with the same Protocol has the same Port value.

    Some fields in the Listener struct have possible values that affect
    whether the Listener is distinct. Hostname is particularly relevant
    for HTTP or HTTPS protocols.

    When using the Hostname value to select between same-Port, same-Protocol
    Listeners, the Hostname value must be different on each Listener for the
    Listener to be distinct.

    When the Listeners are distinct based on Hostname, inbound request
    hostnames MUST match from the most specific to least specific Hostname
    values to choose the correct Listener and its associated set of Routes.

    Exact matches must be processed before wildcard matches, and wildcard
    matches must be processed before fallback (empty Hostname value)
    matches. For example, `"foo.example.com"` takes precedence over
    `"*.example.com"`, and `"*.example.com"` takes precedence over `""`.

    Additionally, if there are multiple wildcard entries, more specific
    wildcard entries must be processed before less specific wildcard entries.
    For example, `"*.foo.example.com"` takes precedence over `"*.example.com"`.
    The precise definition here is that the higher the number of dots in the
    hostname to the right of the wildcard character, the higher the precedence.

    The wildcard character will match any number of characters _and dots_ to
    the left, however, so `"*.example.com"` will match both
    `"foo.bar.example.com"` _and_ `"bar.example.com"`.

    If a set of Listeners contains Listeners that are not distinct, then those
    Listeners are Conflicted, and the implementation MUST set the "Conflicted"
    condition in the Listener Status to "True".

    Implementations MAY choose to accept a Gateway with some Conflicted
    Listeners only if they only accept the partial Listener set that contains
    no Conflicted Listeners. To put this another way, implementations may
    accept a partial Listener set only if they throw out *all* the conflicting
    Listeners. No picking one of the conflicting listeners as the winner.
    This also means that the Gateway must have at least one non-conflicting
    Listener in this case, otherwise it violates the requirement that at
    least one Listener must be present.

    The implementation MUST set a "ListenersNotValid" condition on the
    Gateway Status when the Gateway contains Conflicted Listeners whether or
    not they accept the Gateway. That Condition SHOULD clearly
    indicate in the Message which Listeners are conflicted, and which are
    Accepted. Additionally, the Listener status for those listeners SHOULD
    indicate which Listeners are conflicted and not Accepted.

    A Gateway's Listeners are considered "compatible" if:

    1. They are distinct.
    2. The implementation can serve them in compliance with the Addresses
       requirement that all Listeners are available on all assigned
       addresses.

    Compatible combinations in Extended support are expected to vary across
    implementations. A combination that is compatible for one implementation
    may not be compatible for another.

    For example, an implementation that cannot serve both TCP and UDP listeners
    on the same address, or cannot mix HTTPS and generic TLS listens on the same
    port
    would not consider those cases compatible, even though they are distinct.

    Note that requests SHOULD match at most one Listener. For example, if
    Listeners are defined for "foo.example.com" and "*.example.com", a
    request to "foo.example.com" SHOULD only be routed using routes attached
    to the "foo.example.com" Listener (and not the "*.example.com" Listener).
    This concept is known as "Listener Isolation". Implementations that do
    not support Listener Isolation MUST clearly document this.

    Implementations MAY merge separate Gateways onto a single set of
    Addresses if all Listeners across all Gateways are compatible.

    Support: Core
    Listener embodies the concept of a logical endpoint where a Gateway accepts
    network connections.

FIELDS:
  allowedRoutes <Object>
    AllowedRoutes defines the types of routes that MAY be attached to a
    Listener and the trusted namespaces where those Route resources MAY be
    present.

    Although a client request may match multiple route rules, only one rule
    may ultimately receive the request. Matching precedence MUST be
    determined in order of the following criteria:

    * The most specific match as defined by the Route type.
    * The oldest Route based on creation timestamp. For example, a Route with
      a creation timestamp of "2020-09-08 01:02:03" is given precedence over
      a Route with a creation timestamp of "2020-09-08 01:02:04".
    * If everything else is equivalent, the Route appearing first in
      alphabetical order (namespace/name) should be given precedence. For
      example, foo/bar is given precedence over foo/baz.

    All valid rules within a Route attached to this Listener should be
    implemented. Invalid Route rules can be ignored (sometimes that will mean
    the full Route). If a Route rule transitions from valid to invalid,
    support for that Route rule should be dropped to ensure consistency. For
    example, even if a filter specified by a Route rule is invalid, the rest
    of the rules within that Route should still be supported.

    Support: Core

  hostname      <string>
    Hostname specifies the virtual hostname to match for protocol types that
    define this concept. When unspecified, all hostnames are matched. This
    field is ignored for protocols that don't require hostname based
    matching.

    Implementations MUST apply Hostname matching appropriately for each of
    the following protocols:

    * TLS: The Listener Hostname MUST match the SNI.
    * HTTP: The Listener Hostname MUST match the Host header of the request.
    * HTTPS: The Listener Hostname SHOULD match at both the TLS and HTTP
      protocol layers as described above. If an implementation does not
      ensure that both the SNI and Host header match the Listener hostname,
      it MUST clearly document that.

    For HTTPRoute and TLSRoute resources, there is an interaction with the
    `spec.hostnames` array. When both listener and route specify hostnames,
    there MUST be an intersection between the values for a Route to be
    accepted. For more information, refer to the Route specific Hostnames
    documentation.

    Hostnames that are prefixed with a wildcard label (`*.`) are interpreted
    as a suffix match. That means that a match for `*.example.com` would match
    both `test.example.com`, and `foo.test.example.com`, but not `example.com`.

    Support: Core

  name  <string> -required-
    Name is the name of the Listener. This name MUST be unique within a
    Gateway.

    Support: Core

  port  <integer> -required-
    Port is the network port. Multiple listeners may use the
    same port, subject to the Listener compatibility rules.

    Support: Core

  protocol      <string> -required-
    Protocol specifies the network protocol this listener expects to receive.

    Support: Core

  tls   <Object>
    TLS is the TLS configuration for the Listener. This field is required if
    the Protocol field is "HTTPS" or "TLS". It is invalid to set this field
    if the Protocol field is "HTTP", "TCP", or "UDP".

    The association of SNIs to Certificate defined in GatewayTLSConfig is
    defined based on the Hostname field for this listener.

    The GatewayClass MUST use the longest matching SNI out of all
    available certificates for any TLS handshake.

    Support: Core


[Wed Jan 29 12:36:14] [vagrant@ubuntu-jammy] [/shared-with-host/envoy-gateway]#
k explain gateway.spec.listeners.tls
GROUP:      gateway.networking.k8s.io
KIND:       Gateway
VERSION:    v1

FIELD: tls <Object>


DESCRIPTION:
    TLS is the TLS configuration for the Listener. This field is required if
    the Protocol field is "HTTPS" or "TLS". It is invalid to set this field
    if the Protocol field is "HTTP", "TCP", or "UDP".

    The association of SNIs to Certificate defined in GatewayTLSConfig is
    defined based on the Hostname field for this listener.

    The GatewayClass MUST use the longest matching SNI out of all
    available certificates for any TLS handshake.

    Support: Core

FIELDS:
  certificateRefs       <[]Object>
    CertificateRefs contains a series of references to Kubernetes objects that
    contains TLS certificates and private keys. These certificates are used to
    establish a TLS handshake for requests that match the hostname of the
    associated listener.

    A single CertificateRef to a Kubernetes Secret has "Core" support.
    Implementations MAY choose to support attaching multiple certificates to
    a Listener, but this behavior is implementation-specific.

    References to a resource in different namespace are invalid UNLESS there
    is a ReferenceGrant in the target namespace that allows the certificate
    to be attached. If a ReferenceGrant does not allow this reference, the
    "ResolvedRefs" condition MUST be set to False for this listener with the
    "RefNotPermitted" reason.

    This field is required to have at least one element when the mode is set
    to "Terminate" (default) and is optional otherwise.

    CertificateRefs can reference to standard Kubernetes resources, i.e.
    Secret, or implementation-specific custom resources.

    Support: Core - A single reference to a Kubernetes Secret of type
    kubernetes.io/tls

    Support: Implementation-specific (More than one reference or other resource
    types)

  frontendValidation    <Object>
    FrontendValidation holds configuration information for validating the
    frontend (client).
    Setting this field will require clients to send a client certificate
    required for validation during the TLS handshake. In browsers this may
    result in a dialog appearing
    that requests a user to specify the client certificate.
    The maximum depth of a certificate chain accepted in verification is
    Implementation specific.

    Support: Extended



  mode  <string>
  enum: Terminate, Passthrough
    Mode defines the TLS behavior for the TLS session initiated by the client.
    There are two possible modes:

    - Terminate: The TLS session between the downstream client and the
      Gateway is terminated at the Gateway. This mode requires certificates
      to be specified in some way, such as populating the certificateRefs
      field.
    - Passthrough: The TLS session is NOT terminated by the Gateway. This
      implies that the Gateway can't decipher the TLS stream except for
      the ClientHello message of the TLS protocol. The certificateRefs field
      is ignored in this mode.

    Support: Core

  options       <map[string]string>
    Options are a list of key/value pairs to enable extended TLS
    configuration for each implementation. For example, configuring the
    minimum TLS version or supported cipher suites.

    A set of common keys MAY be defined by the API in the future. To avoid
    any ambiguity, implementation-specific definitions MUST use
    domain-prefixed names, such as `example.com/my-custom-option`.
    Un-prefixed names are reserved for key names defined by Gateway API.

    Support: Implementation-specific


[Wed Jan 29 12:44:39] [vagrant@ubuntu-jammy] [/shared-with-host/envoy-gateway]#
[Wed Jan 29 13:07:08] [vagrant@ubuntu-jammy] [/shared-with-host/envoy-gateway]#
k explain TLSRoute
GROUP:      gateway.networking.k8s.io
KIND:       TLSRoute
VERSION:    v1alpha2

DESCRIPTION:
    The TLSRoute resource is similar to TCPRoute, but can be configured
    to match against TLS-specific metadata. This allows more flexibility
    in matching streams for a given TLS listener.

    If you need to forward traffic to a single target for a TLS listener, you
    could choose to use a TCPRoute with a TLS listener.

FIELDS:
  apiVersion    <string>
    APIVersion defines the versioned schema of this representation of an object.
    Servers should convert recognized schemas to the latest internal value, and
    may reject unrecognized values. More info:
    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources

  kind  <string>
    Kind is a string value representing the REST resource this object
    represents. Servers may infer this from the endpoint the client submits
    requests to. Cannot be updated. In CamelCase. More info:
    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds

  metadata      <ObjectMeta>
    Standard object's metadata. More info:
    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata

  spec  <Object> -required-
    Spec defines the desired state of TLSRoute.

  status        <Object>
    Status defines the current state of TLSRoute.


[Wed Jan 29 13:07:17] [vagrant@ubuntu-jammy] [/shared-with-host/envoy-gateway]#
k explain TLSRoute.spec
[Wed Jan 29 13:07:17] [vagrant@ubuntu-jammy] [/shared-with-host/envoy-gateway]#
k explain TLSRoute.spec
GROUP:      gateway.networking.k8s.io
KIND:       TLSRoute
VERSION:    v1alpha2

FIELD: spec <Object>


DESCRIPTION:
    Spec defines the desired state of TLSRoute.

FIELDS:
  hostnames     <[]string>
    Hostnames defines a set of SNI names that should match against the
    SNI attribute of TLS ClientHello message in TLS handshake. This matches
    the RFC 1123 definition of a hostname with 2 notable exceptions:

    1. IPs are not allowed in SNI names per RFC 6066.
    2. A hostname may be prefixed with a wildcard label (`*.`). The wildcard
       label must appear by itself as the first label.

    If a hostname is specified by both the Listener and TLSRoute, there
    must be at least one intersecting hostname for the TLSRoute to be
    attached to the Listener. For example:

    * A Listener with `test.example.com` as the hostname matches TLSRoutes
      that have either not specified any hostnames, or have specified at
      least one of `test.example.com` or `*.example.com`.
    * A Listener with `*.example.com` as the hostname matches TLSRoutes
      that have either not specified any hostnames or have specified at least
      one hostname that matches the Listener hostname. For example,
      `test.example.com` and `*.example.com` would both match. On the other
      hand, `example.com` and `test.example.net` would not match.

    If both the Listener and TLSRoute have specified hostnames, any
    TLSRoute hostnames that do not match the Listener hostname MUST be
    ignored. For example, if a Listener specified `*.example.com`, and the
    TLSRoute specified `test.example.com` and `test.example.net`,
    `test.example.net` must not be considered for a match.

    If both the Listener and TLSRoute have specified hostnames, and none
    match with the criteria above, then the TLSRoute is not accepted. The
    implementation must raise an 'Accepted' Condition with a status of
    `False` in the corresponding RouteParentStatus.

    Support: Core

  parentRefs    <[]Object>
    ParentRefs references the resources (usually Gateways) that a Route wants
    to be attached to. Note that the referenced parent resource needs to
    allow this for the attachment to be complete. For Gateways, that means
    the Gateway needs to allow attachment from Routes of this kind and
    namespace. For Services, that means the Service must either be in the same
    namespace for a "producer" route, or the mesh implementation must support
    and allow "consumer" routes for the referenced Service. ReferenceGrant is
    not applicable for governing ParentRefs to Services - it is not possible to
    create a "producer" route for a Service in a different namespace from the
    Route.

    There are two kinds of parent resources with "Core" support:

    * Gateway (Gateway conformance profile)
    * Service (Mesh conformance profile, ClusterIP Services only)

    This API may be extended in the future to support additional kinds of parent
    resources.

    ParentRefs must be _distinct_. This means either that:

    * They select different objects.  If this is the case, then parentRef
      entries are distinct. In terms of fields, this means that the
      multi-part key defined by `group`, `kind`, `namespace`, and `name` must
      be unique across all parentRef entries in the Route.
    * They do not select different objects, but for each optional field used,
      each ParentRef that selects the same object must set the same set of
      optional fields to different values. If one ParentRef sets a
      combination of optional fields, all must set the same combination.

    Some examples:

    * If one ParentRef sets `sectionName`, all ParentRefs referencing the
      same object must also set `sectionName`.
    * If one ParentRef sets `port`, all ParentRefs referencing the same
      object must also set `port`.
    * If one ParentRef sets `sectionName` and `port`, all ParentRefs
      referencing the same object must also set `sectionName` and `port`.

    It is possible to separately reference multiple distinct objects that may
    be collapsed by an implementation. For example, some implementations may
    choose to merge compatible Gateway Listeners together. If that is the
    case, the list of routes attached to those resources should also be
    merged.

    Note that for ParentRefs that cross namespace boundaries, there are specific
    rules. Cross-namespace references are only valid if they are explicitly
    allowed by something in the namespace they are referring to. For example,
    Gateway has the AllowedRoutes field, and ReferenceGrant provides a
    generic way to enable other kinds of cross-namespace reference.


    ParentRefs from a Route to a Service in the same namespace are "producer"
    routes, which apply default routing rules to inbound connections from
    any namespace to the Service.

    ParentRefs from a Route to a Service in a different namespace are
    "consumer" routes, and these routing rules are only applied to outbound
    connections originating from the same namespace as the Route, for which
    the intended destination of the connections are a Service targeted as a
    ParentRef of the Route.







  rules <[]Object> -required-
    Rules are a list of TLS matchers and actions.




[Wed Jan 29 13:19:01] [vagrant@ubuntu-jammy] [/shared-with-host/envoy-gateway]#
[Wed Jan 29 13:19:01] [vagrant@ubuntu-jammy] [/shared-with-host/envoy-gateway]#
k get crd
NAME                                           CREATED AT
backendlbpolicies.gateway.networking.k8s.io    2025-01-29T03:39:27Z
backends.gateway.envoyproxy.io                 2025-01-29T03:39:28Z
backendtlspolicies.gateway.networking.k8s.io   2025-01-29T03:39:27Z
backendtrafficpolicies.gateway.envoyproxy.io   2025-01-29T03:39:28Z
clienttrafficpolicies.gateway.envoyproxy.io    2025-01-29T03:39:28Z
envoyextensionpolicies.gateway.envoyproxy.io   2025-01-29T03:39:28Z
envoypatchpolicies.gateway.envoyproxy.io       2025-01-29T03:39:28Z
envoyproxies.gateway.envoyproxy.io             2025-01-29T03:39:28Z
gatewayclasses.gateway.networking.k8s.io       2025-01-29T03:39:27Z
gateways.gateway.networking.k8s.io             2025-01-29T03:39:27Z
grpcroutes.gateway.networking.k8s.io           2025-01-29T03:39:27Z
httproutefilters.gateway.envoyproxy.io         2025-01-29T03:39:29Z
httproutes.gateway.networking.k8s.io           2025-01-29T03:39:27Z
referencegrants.gateway.networking.k8s.io      2025-01-29T03:39:27Z
securitypolicies.gateway.envoyproxy.io         2025-01-29T03:39:29Z
tcproutes.gateway.networking.k8s.io            2025-01-29T03:39:27Z
tlsroutes.gateway.networking.k8s.io            2025-01-29T03:39:27Z
udproutes.gateway.networking.k8s.io            2025-01-29T03:39:27Z
[Wed Jan 29 13:23:18] [vagrant@ubuntu-jammy] [/shared-with-host/envoy-gateway]#
k api-resources | grep -i gateway
backends                            be           gateway.envoyproxy.io/v1alpha1       true         Backend
backendtrafficpolicies              btp          gateway.envoyproxy.io/v1alpha1       true         BackendTrafficPolicy
clienttrafficpolicies               ctp          gateway.envoyproxy.io/v1alpha1       true         ClientTrafficPolicy
envoyextensionpolicies              eep          gateway.envoyproxy.io/v1alpha1       true         EnvoyExtensionPolicy
envoypatchpolicies                  epp          gateway.envoyproxy.io/v1alpha1       true         EnvoyPatchPolicy
envoyproxies                        eproxy       gateway.envoyproxy.io/v1alpha1       true         EnvoyProxy
httproutefilters                    hrf          gateway.envoyproxy.io/v1alpha1       true         HTTPRouteFilter
securitypolicies                    sp           gateway.envoyproxy.io/v1alpha1       true         SecurityPolicy
backendlbpolicies                   blbpolicy    gateway.networking.k8s.io/v1alpha2   true         BackendLBPolicy
backendtlspolicies                  btlspolicy   gateway.networking.k8s.io/v1alpha3   true         BackendTLSPolicy
gatewayclasses                      gc           gateway.networking.k8s.io/v1         false        GatewayClass
gateways                            gtw          gateway.networking.k8s.io/v1         true         Gateway
grpcroutes                                       gateway.networking.k8s.io/v1         true         GRPCRoute
httproutes                                       gateway.networking.k8s.io/v1         true         HTTPRoute
referencegrants                     refgrant     gateway.networking.k8s.io/v1beta1    true         ReferenceGrant
tcproutes                                        gateway.networking.k8s.io/v1alpha2   true         TCPRoute
tlsroutes                                        gateway.networking.k8s.io/v1alpha2   true         TLSRoute
udproutes                                        gateway.networking.k8s.io/v1alpha2   true         UDPRoute
[Wed Jan 29 13:23:29] [vagrant@ubuntu-jammy] [/shared-with-host/envoy-gateway]#
k api-resources | head -1
NAME                                SHORTNAMES   APIVERSION                           NAMESPACED   KIND
[Wed Jan 29 13:24:00] [vagrant@ubuntu-jammy] [/shared-with-host/envoy-gateway]#
[Wed Jan 29 17:33:14] [vagrant@ubuntu-jammy] [/shared-with-host/envoy-gateway]#









